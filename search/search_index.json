{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6d59\u6c5f\u5927\u5b6624\u5e74\u6625\u590f\u7f16\u8bd1\u539f\u7406\u5b9e\u9a8c","text":"<p>\u4ed3\u5e93\u76ee\u5f55\u7ed3\u6784\uff1a</p> <pre><code>\u251c\u2500\u2500 examples/   # \u6837\u4f8b\n\u251c\u2500\u2500 docs/       # \u5b9e\u9a8c\u6587\u6863   \n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 src/        # \u89e3\u91ca\u5668\u6e90\u7801\n\u2514\u2500\u2500 tests/      # \u5404 lab \u7684\u6d4b\u8bd5\u8f93\u5165\n</code></pre> <p>\u53c2\u8003\u6750\u6599:</p> <ul> <li>\u6837\u4f8b\u7f16\u8bd1\u5668 (\u5c1a\u672a\u5b8c\u5de5)</li> <li>PEG \u548c Parser Combinator \u7684\u6837\u4f8b</li> <li>SysY \u8fd0\u884c\u65f6\u5e93</li> <li>CMake \u9879\u76ee\u6a21\u677f</li> </ul>"},{"location":"#_1","title":"\u5b9e\u9a8c\u4ecb\u7ecd","text":"<p>\u5177\u4f53\u6765\u8bf4\u6574\u4e2a\u5b9e\u9a8c\u5206\u4e3a\u4e94\u4e2a\u5c0f\u5b9e\u9a8c\uff1a</p> <ul> <li>\u73af\u5883\u914d\u7f6e\u4e0e\u6d4b\u8bd5\u7528\u4f8b\u7f16\u5199\uff1a\u914d\u7f6e\u5b9e\u9a8c\u73af\u5883\uff0c\u5b66\u4e60 SysY \u8bed\u6cd5\u3002</li> <li>\u8bcd\u6cd5\u5206\u6790\u4e0e\u8bed\u6cd5\u5206\u6790\uff1a \u5b9e\u73b0\u8bcd\u6cd5\u5206\u6790\u548c\u8bed\u6cd5\u5206\u6790\uff0c\u5c06\u6e90\u4ee3\u7801\u8f6c\u5316\u4e3a\u8bed\u6cd5\u6811\u3002</li> <li>\u8bed\u4e49\u5206\u6790\uff1a\u5b9e\u73b0\u7b26\u53f7\u8868\uff0c\u57fa\u4e8e\u8bed\u6cd5\u6811\u8fdb\u884c\u8bed\u4e49\u5206\u6790\u3002</li> <li>\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\uff1a\u628a\u5206\u6790\u540e\u7684\u8bed\u6cd5\u6811\u8f6c\u5316\u4e3a\u5b9e\u9a8c\u5b9a\u4e49\u7684\u4e2d\u95f4\u4ee3\u7801\u3002</li> <li>\u76ee\u6807\u4ee3\u7801\u751f\u6210\uff1a\u5c06\u4e2d\u95f4\u4ee3\u7801\u8f6c\u5316\u4e3a RISC-V 64 \u6c47\u7f16\u4ee3\u7801\u3002</li> </ul>"},{"location":"#_2","title":"\u81f4\u8c22","text":"<p>\u6211\u4eec\u5bf9\u672c\u8bfe\u7a0b\u8bbe\u8ba1\u4e2d\u53c2\u8003\u7684\u8bfe\u7a0b\u4e0e\u8d44\u6599\u8868\u793a\u611f\u8c22\uff1a</p> <ul> <li>\u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b \u8981\u6c42\u5b9e\u73b0\u7684 SysY \u8bed\u8a00\u548c\u5927\u91cf\u6d4b\u8bd5\u7528\u4f8b\u6765\u81ea\u4e8e\u8be5\u5927\u8d5b\u3002</li> <li>\u5357\u4eac\u5927\u5b66\u7f16\u8bd1\u539f\u7406 \u6211\u4eec\u7684\u90e8\u5206\u6587\u6863\u53c2\u8003\u4e86\u8be5\u8bfe\u7a0b\u7684\u6587\u6863\u3002\u6211\u4eec\u4e5f\u53c2\u8003\u4e86\u8be5\u8bfe\u7a0b\u8bbe\u8ba1\u7684\u67d0\u4e9b\u6d4b\u8bd5\u7528\u4f8b\u3002</li> <li>\u5317\u4eac\u5927\u5b66\u7f16\u8bd1\u539f\u7406 \u6211\u4eec\u7684\u90e8\u5206\u6587\u6863\u53c2\u8003\u4e86\u8be5\u8bfe\u7a0b\u7684\u6587\u6863\u3002</li> <li>\u6d59\u6c5f\u5927\u5b66\u7f16\u8bd1\u539f\u7406 \u6211\u4eec\u7684\u90e8\u5206\u6587\u6863\u53c2\u8003\u4e86\u9694\u58c1\u73ed (\u5218\u5fe0\u946b\u8001\u5e08) \u7684\u6587\u6863\u3002</li> </ul>"},{"location":"backend/","title":"RISC-V 64 \u6c47\u7f16\u751f\u6210","text":""},{"location":"backend/#_1","title":"\u6307\u4ee4\u9009\u62e9","text":"<p>\u6307\u4ee4\u9009\u62e9\u662f\u5c06\u4e2d\u95f4\u8bed\u8a00\u8f6c\u6362\u6210\u6c47\u7f16\u6216\u673a\u5668\u4ee3\u7801\u7684\u8fc7\u7a0b.</p> <p>\u6307\u4ee4\u9009\u62e9\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\uff1a</p> <ul> <li>\u76ee\u6807\u5e73\u53f0\u7684\u5bc4\u5b58\u5668\u7c7b\u578b\uff0c\u4f8b\u5982 IR \u7684\u6574\u6570\u4f4d\u5bbd\u548c\u76ee\u6807\u5e73\u53f0\u6574\u6570\u5bc4\u5b58\u5668\u7684\u4f4d\u5bbd. 32 bit \u7684\u6574\u6570\u5728 64 bit \u5e73\u53f0\u4e0a\u9700\u8981\u505a extension\uff0c64 bit \u7684\u6574\u6570\u5728 32 bit \u5e73\u53f0\u4e0a\u53ef\u80fd\u9700\u8981\u4f7f\u7528 2 \u4e2a\u5bc4\u5b58\u5668\u6765\u6a21\u62df\uff0c\u5411\u91cf\u5bc4\u5b58\u5668\u7b49\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u66f4\u591a. \u603b\u4e4b\uff0c\u4f60\u9700\u8981\u5408\u6cd5\u5316\u76ee\u6807\u5e73\u53f0\u4e0d\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b.</li> <li>\u76ee\u6807\u5e73\u53f0\u7684\u6307\u4ee4\u96c6\u64cd\u4f5c\u7801\uff0c\u4f8b\u5982 RISC-V \u542b\u6709\u5927\u90e8\u5206 Accipit IR \u4e2d\u4e8c\u5143\u8fd0\u7b97\u7684\u64cd\u4f5c\u7801\uff0c\u4f46\u662f\u5e76\u6ca1\u6709 <code>offset</code> \u8fd9\u4e2a\u6bd4\u8f83\u62bd\u8c61\u7684\u6307\u9488\u8fd0\u7b97\u6307\u4ee4\uff0c\u4f60\u9700\u8981\u5206\u89e3\u6210\u4e00\u7cfb\u5217\u57fa\u672c\u7684\u4e8c\u5143\u8fd0\u7b97. \u603b\u4e4b\uff0c\u4f60\u9700\u8981\u5408\u6cd5\u5316\u76ee\u6807\u5e73\u53f0\u4e0d\u652f\u6301\u7684\u64cd\u4f5c\u7801.</li> <li>\u76ee\u6807\u5e73\u53f0\u7684\u6307\u4ee4\u96c6\u683c\u5f0f\uff0c\u4f8b\u5982\u5728 X86 \u4e0a\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>mov</code> \u6307\u4ee4\u5b8c\u6210\u4e00\u4e2a 32 bit \u7acb\u5373\u6570\u8d4b\u503c\uff1bARM \u5e73\u53f0\u53ea\u6709 12 bit \u7acb\u5373\u6570\uff0c\u4f46\u662f\u5e26\u6709 4 bit \u7684 shift\uff0c\u5141\u8bb8\u7f16\u7801\u4e00\u90e8\u5206\u8f83\u5927\u7684\u7acb\u5373\u6570\uff0c\u5426\u5219\u8981\u4e48\u4f7f\u7528\u7c7b\u4f3c <code>movw</code> + <code>movv</code> \u7684\u7ec4\u5408\u79fb\u52a8\u6307\u4ee4\uff0c\u8981\u4e48\u7531\u7f16\u8bd1\u5668\u5728\u5408\u9002\u7684\u5730\u65b9 (.text \u6216 .data) \u63d2\u5165\u7acb\u5373\u6570\u7b26\u53f7\uff0c\u5e76\u4f7f\u7528 <code>ldr</code> \u8bbf\u95ee\u8fd9\u4e2a\u7acb\u5373\u6570\u7684\u5730\u5740\uff1bRISC-V 32 \u540c\u6837\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u6307\u4ee4\u53ea\u652f\u6301 12 bit \u7acb\u5373\u6570\uff0c\u8f83\u5927\u7684\u7acb\u5373\u6570\u6839\u636e\u4e0d\u540c\u7684 code model \u4f7f\u7528 <code>lui</code> + <code>addi</code>\uff08\u9ad8 20 bit \u4e0e\u4f4e 12 bit\uff09\u6216\u8005 <code>auipc</code> + <code>addi</code>. \u4e0d\u8fc7\uff0c\u5e78\u8fd0\u7684\u662f\uff0c\u4f60\u603b\u80fd\u901a\u8fc7 <code>li</code> \u4f2a\u6307\u4ee4\u52a0\u8f7d\u4e00\u4e2a\u7acb\u5373\u6570\uff0c\u6c47\u7f16\u5668\u548c\u94fe\u63a5\u5668\u4f1a\u5e2e\u4f60\u5b8c\u6210\u5269\u4e0b\u7684\u5de5\u4f5c.</li> <li>\u5bfb\u5740\u65b9\u5f0f\uff0c\u4f8b\u5982 RISC-V \u7684 <code>lw</code> \u53ea\u652f\u6301\u5bc4\u5b58\u5668 + 12 bit \u7acb\u5373\u6570\u504f\u79fb\u7684\u5f62\u5f0f.</li> <li>\u8c03\u7528\u7ea6\u5b9a\u4e0e ABI \u7b49\uff0c\u4f8b\u5982\u8c03\u7528\u7ea6\u5b9a\u89c4\u5b9a\u4e86\u54ea\u4e9b\u662f volatile \u54ea\u4e9b\u662f non-volatile \u5bc4\u5b58\u5668\uff0c\u6808\u5e27\u5bc4\u5b58\u5668\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668 (program counter) \u7b49. \u603b\u4e4b\uff0c\u4f60\u9700\u8981\u8003\u8651\u76ee\u6807\u5e73\u53f0\u7684\u786c\u4ef6\u7279\u6027\u548c ABI \u7b49\u56e0\u7d20.</li> <li>\u6307\u4ee4\u9009\u62e9\u5b8c\u4e4b\u540e\u7684 \"IR\" \u662f\u4ec0\u4e48\u5f62\u5f0f\uff1f\u7531\u4e8e\u6307\u4ee4\u9009\u62e9\u4e00\u822c\u5728\u5bc4\u5b58\u5668\u5206\u914d\u4e4b\u524d\uff0c\u6240\u4ee5\u6307\u4ee4\u9009\u62e9\u5b8c\u6210\u7684 \"IR\" \u53ef\u4ee5\u662f\u76ee\u6807\u5e73\u53f0\u7684\u7269\u7406\u5bc4\u5b58\u5668\u548cIR \u7684\u865a\u62df\u5bc4\u5b58\u5668\u5e76\u5b58\u7684\u5f62\u5f0f\uff0c\u4f60\u8fd8\u53ef\u4ee5\u6784\u9020\u4e00\u4e9b\u989d\u5916\u7684 \u201c\u4f2a\u6307\u4ee4\u201d \u4ee5\u65b9\u4fbf\u4f60\u540e\u7eed\u7684\u64cd\u4f5c. \u6b64\u5916\u5728\u4f18\u5316\u7f16\u8bd1\u5668\u4e2d\u8fd8\u9700\u8981\u6839\u636e\u6307\u4ee4\u96c6\u7684\u5ef6\u8fdf\u3001\u541e\u5410\u7b49\u4fe1\u606f\u8fdb\u884c\u6307\u4ee4\u91cd\u6392\u8c03\u5ea6\u7b49\u76ee\u6807\u5e73\u53f0\u76f8\u5173\u7684\u4f18\u5316\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u8981\u6c42\u8fd9\u79cd \"IR\" \u548c\u4e2d\u7aef\u7684 IR \u4e00\u6837\u80fd\u591f\u5bf9\u6307\u4ee4\u5e8f\u5217\u8fdb\u884c\u5feb\u901f\u7684\u53d8\u6362.</li> </ul> <p>\u4e2d\u7aef\u76ee\u6807\u65e0\u5173 IR \u7684\u8bbe\u8ba1\u5bf9\u6307\u4ee4\u9009\u62e9\u7684\u7b97\u6cd5\u548c\u5b9e\u73b0\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u4e5f\u6709\u5f71\u54cd\uff0c\u4f8b\u5982\u5728\u6559\u6750\u4e2d\uff0c\u6811\u5f62\u7684 IR \u5c31\u6bd4\u8f83\u9002\u5408\u6811\u4e0a\u7684\u6a21\u5f0f\u5339\u914d\u52a0\u52a8\u6001\u89c4\u5212\u7684 \"tree covering\" \u5b9e\u73b0\uff1b\u5bf9\u4e8e SSA \u98ce\u683c\u7684 IR\uff0c\u7531\u4e8e use-def \u94fe\u7b49\u4fe1\u606f\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5148\u5c06 IR \u8f6c\u6362\u4e3a DAG\uff0c\u7136\u540e\u5728 DAG \u4e0a\u505a\u6a21\u5f0f\u5339\u914d\u7684 \"DAG covering\" \u5b9e\u73b0. \u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u4f60\u53ea\u9700\u8981\u624b\u5de5\u7f16\u7801\uff0c\u5b9e\u73b0\u6700\u7b80\u5355\u7684 \"macro expansion\" \u98ce\u683c\u7684\u6307\u4ee4\u9009\u62e9\u5373\u53ef.</p>"},{"location":"backend/#_2","title":"\u5bc4\u5b58\u5668\u5206\u914d","text":"<p>\u5e38\u89c1\u7684\u5bc4\u5b58\u5668\u5206\u914d\u7b97\u6cd5\uff0c\u6309\u7167\uff1a</p> <ul> <li>\u4e0d\u5206\u914d\uff0c\u628a\u865a\u62df\u5bc4\u5b58\u5668\u90fd\u6ea2\u51fa\u5230\u6808\u4e0a.</li> <li>\u5c40\u90e8\u5bc4\u5b58\u5668\u5206\u914d (local register allocation).</li> <li>\u56fe\u67d3\u8272\u5bc4\u5b58\u5668\u5206\u914d (graph coloring, 1980, Chaitin)\uff0c\u6bcf\u4e2a\u53d8\u91cf\u5bf9\u5e94\u5bc4\u5b58\u5668\u5e72\u6d89\u56fe\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u5728\u540c\u4e00\u4e2a\u57fa\u672c\u5757\u5185\u540c\u65f6\u6d3b\u8dc3\u7684 \u53d8\u91cf\u5bf9\u5e94\u5f97\u5230\u8282\u70b9\u4e4b\u95f4\u8fde\u8fb9\uff0c\u8868\u793a\u4e0d\u80fd\u88ab\u5206\u914d\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u5bf9\u56fe\u8fdb\u884c k \u67d3\u8272. \uf06e \u5bf9\u6784\u9020\u51fa\u7684\u56fe\u8fdb\u884ck\u7740\u8272\uff0ck\u4e3a\u7a7a\u95f2\u5bc4\u5b58\u5668\u7684\u4e2a\u6570</li> <li>\u7ebf\u6027\u626b\u63cf\u5bc4\u5b58\u5668\u5206\u914d (linear scan, TOPLAS 1999, Poletto)\uff0c\u9996\u5148\u8ba1\u7b97\u51fd\u6570\u4e2d\u53d8\u91cf\u7684\u6d3b\u8dc3\u533a\u95f4\uff0c\u7136\u540e\u7ebf\u6027\u626b\u63cf\u6240\u6709 \u6d3b\u8dc3\u533a\u95f4\uff0c\u5e76\u6309\u8d2a\u5fc3\u5c06\u5bc4\u5b58\u5668\u5206\u914d\u7ed9\u53d8\u91cf. \u4f18\u70b9\u662f\u4ec5\u9700\u7ebf\u6027\u590d\u6742\u5ea6\uff0c\u867d\u7136\u6d3b\u8dc3\u533a\u95f4\u76f8\u6bd4\u56fe\u67d3\u8272\u5bc4\u5b58\u5668\u5206\u914d\u7b97\u6cd5\u7684\u7c92\u5ea6\u66f4\u7c97\uff0c\u4f46\u662f\u5b9e\u9a8c\u8868\u660e\u5176\u751f\u6210\u7684\u4ee3\u7801\u8d28\u91cf\u901a\u5e38\u4ec5\u7565\u52a3\u4e8e\u56fe\u67d3\u8272\u5bc4\u5b58\u5668\u5206\u914d.</li> <li>\u5f26\u56fe\u5bc4\u5b58\u5668\u5206\u914d (chordal graph, 2005, Pereira).</li> <li>\u9759\u6001\u5355\u8d4b\u503c\u5f62\u5f0f\u5206\u914d (SSA, 2006, Hack)\uff0c\u57fa\u4e8e SSA \u5f62\u5f0f\u7684\u4e2d\u95f4\u4ee3\u7801\u7684\u5e72\u6d89\u56fe\u662f\u5f26\u56fe\u8fd9\u4e2a\u4e8b\u5b9e.</li> <li>\u57fa\u4e8e\u7ea6\u675f\u7684\u5206\u914d (constraint-based, 1996 Goodwin; 2001 Appel; 2002 Scholz)\uff0c\u4f8b\u5982\u6574\u6570\u7ebf\u6027\u89c4\u5212.</li> <li>\u5206\u533a\u5e03\u5c14\u4e8c\u6b21\u7f16\u7a0b\u5bc4\u5b58\u5668\u5206\u914d (PBQP)</li> </ul> <p>\u6700\u6734\u7d20\u7684\u5bc4\u5b58\u5668\u5206\u914d\u65b9\u6cd5\u5f53\u7136\u662f\u628a\u51e0\u4e4e\u6240\u6709\u4e34\u65f6\u53d8\u91cf\u90fd\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u4e5f\u5c31\u662f\u6808\u4e0a. \u6bcf\u7ffb\u8bd1\u4e00\u6761\u4e2d\u95f4\u4ee3\u7801\u4e4b\u524d\u6211\u4eec\u628a\u8981\u7528\u5230\u7684\u53d8\u91cf\u5148\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c\u540e\u53c8\u5c06\u7ed3\u679c\u5199\u56de\u5185\u5b58. \u8fd9\u79cd\u65b9\u6cd5\u7684\u786e\u80fd\u5c06\u4e2d\u95f4\u4ee3\u7801\u7ffb\u8bd1\u6210\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u7684\u76ee\u6807\u4ee3\u7801\uff0c\u800c\u4e14\u5b9e\u73b0\u548c\u8c03\u8bd5\u90fd\u7279\u522b\u5bb9\u6613. \u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u5f53\u524d\u4e2d\u7aef IR \u5df2\u7ecf\u662f\u8fd9\u79cd\u5f62\u5f0f\u4e86\uff0c\u6e90\u4ee3\u7801\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u90fd\u662f\u4f4d\u4e8e\u6808\u4e0a\u7684\u53d6\u5730\u5740\u53d8\u91cf\uff08address taken variable\uff09\uff0c\u6240\u6709 IR \u4e2d\u7684\u9876\u5c42\u53d8\u91cf\uff0c\u4e5f\u5373\u865a\u62df\u5bc4\u5b58\u5668\uff0c\u90fd\u662f\u8ba1\u7b97\u7684\u4e2d\u95f4\u7ed3\u679c. \u8fd9\u95e8\u8bfe\u7684\u4e3b\u8981\u76ee\u7684\u4e0d\u5728\u4ee3\u7801\u4f18\u5316\uff0c\u800c\u662f\u9996\u5148\u4fdd\u8bc1\u529f\u80fd\u6b63\u786e\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u8981\u6c42\u4f60\u5b9e\u73b0\u6734\u7d20\u5bc4\u5b58\u5668\u5206\u914d\u5373\u53ef.</p>"},{"location":"backend/#_3","title":"\u4f18\u5316\u5bc4\u5b58\u5668\u5206\u914d\u9700\u8981\u8003\u8651\u7684\u95ee\u9898","text":"<p>\u60f3\u8981\u5199\u4e00\u4e2a\u201c\u6b63\u786e\u201d\u7684\u5bc4\u5b58\u5668\u5206\u914d\u76f8\u5bf9\u5bb9\u6613\uff0c\u4f46\u662f\u5199\u4e00\u4e2a\u8db3\u591f\u597d\u7684\u5bc4\u5b58\u5668\u5206\u914d\u6bd4\u8f83\u96be\u3002</p>"},{"location":"backend/#_4","title":"\u6808\u5e27\u7ba1\u7406","text":"<p>\u5728\u6307\u4ee4\u9009\u62e9\u548c\u5bc4\u5b58\u5668\u5206\u914d\u4e4b\u540e\uff0c\u6240\u6709\u7684\u5bc4\u5b58\u5668\u90fd\u5e94\u8be5\u662f\u7269\u7406\u5bc4\u5b58\u5668\u4e86\uff0c\u4f46\u662f\u4f60\u53ef\u80fd\u8fd8\u5f97\u56de\u8fc7\u5934\u8003\u8651\u4e00\u4e0b ABI \u548c\u5bc4\u5b58\u5668\u5206\u914d\u4ea7\u751f\u7684 spill \u5bf9\u6808\u5e27\u7684\u5f71\u54cd\uff0c\u4ee5 RISC-V \u4e3e\u4f8b\uff1a</p> <ul> <li>\u51fd\u6570\u8c03\u7528\uff0c\u8fd4\u56de\u503c\u662f <code>a0</code>\uff0c\u53c2\u6570\u662f <code>a0</code>-<code>a7</code>\uff0c\u8d85\u51fa\u7684\u53c2\u6570\u9700\u8981\u5b58\u5728\u6808\u4e0a.</li> <li>\u51fd\u6570\u7684\u53c2\u6570\u662f <code>a0</code>-<code>a7</code>\uff0c\u8d85\u51fa\u7684\u53c2\u6570\u9700\u8981\u4ece\u6808\u4e0a\u8bfb\u53d6.</li> <li>\u51fd\u6570\u7684\u8c03\u7528\u8005 (caller) \u9700\u8981\u4fdd\u5b58\u81ea\u5df1\u7528\u5230\u7684 volatile \u5bc4\u5b58\u5668 (<code>t0</code>-<code>t6</code>)\uff0c\u8c03\u7528\u5b8c\u6210\u540e\u9700\u8981\u6062\u590d\uff1b\u51fd\u6570\u7684\u88ab\u8c03\u7528\u8005\u9700\u8981\u4fdd\u62a4\u8c03\u7528\u8005\u7684 non-volatile \u5bc4\u5b58\u5668 (<code>s0</code>-<code>s11</code>)\uff0c\u51fd\u6570\u8fdb\u5165\u65f6\u9700\u8981\u4fdd\u5b58\u8fd9\u4e9b\u5bc4\u5b58\u5668\uff0c\u51fd\u6570\u7ed3\u675f\u524d\u9700\u8981\u6062\u590d\u8fd9\u4e9b\u5bc4\u5b58\u5668.</li> <li>\u6808\u5e27\u7684\u7ef4\u62a4\uff0c\u5728 prolog \u53ef\u80fd\u9700\u8981\u4fdd\u62a4\u8fd4\u56de\u5730\u5740 <code>ra</code> \u3001\u6808\u6307\u9488 <code>sp</code> \u548c\u5e27\u6307\u9488 <code>fp</code>\uff0c\u800c\u5728 epilog \u9700\u8981\u6062\u590d\u4ed6\u4eec.</li> <li>\u6211\u4eec\u5728 Accipit IR \u4e2d\u4e34\u65f6\u53d8\u91cf\u91c7\u53d6\u4e86 <code>alloca</code> \u7684 trick\uff0c\u5b83\u4eec\u9700\u8981\u4e00\u4e2a\u6808\u4e0a\u7684\u4f4d\u7f6e.</li> <li>\u5bc4\u5b58\u5668\u5206\u914d\u540e spill \u7684\u5bc4\u5b58\u5668\uff0c\u5b83\u4eec\u9700\u8981\u4e00\u4e2a\u6808\u4e0a\u7684\u4f4d\u7f6e.</li> </ul> <p>\u5e73\u5fc3\u800c\u8bba\uff0c\u4e0a\u9762\u8fd9\u4e9b\u95ee\u9898\u8d2f\u7a7f\u4e86\u8fd9\u6574\u4e2a\u540e\u7aef\uff0c\u56e0\u6b64\u6211\u4eec\u5e76\u4e0d\u63a8\u8350\u4f60\u5bf9\u4e8e\u6240\u6709\u6808\u7a7a\u95f4\u7684\u5bfb\u5740\u5728\u6307\u4ee4\u9009\u62e9\u9636\u6bb5\u5c31\u76f4\u63a5\u786c\u7f16\u7801\u6210\u6808\u6307\u9488 <code>sp</code> \u52a0\u4e0a\u504f\u79fb\u91cf\u7684\u5f62\u5f0f\uff0c\u8fd9\u662f\u56e0\u4e3a\uff1a</p> <ul> <li>\u4f30\u8ba1\u5bc4\u5b58\u5668\u5206\u914d\u7684 spill \u60c5\u51b5\u53ef\u80fd\u6bd4\u8f83\u56f0\u96be\uff0c\u4e0d\u5bb9\u6613\u63d0\u524d\u786e\u5b9a\u67d0\u4e2a\u6808\u4e0a\u7684\u5730\u5740\u8ddd\u79bb\u6808\u6307\u9488\u7684 <code>sp</code> \u7684\u504f\u79fb\u91cf.</li> <li>\u6734\u7d20\u7684\u5b9e\u73b0\u6bcf\u4e2a\u51fd\u6570\u7684\u6808\u5e27\u53ef\u80fd\u5f88\u5927\uff0c\u4ee5\u81f3\u4e8e\u5927\u5230\u548c <code>sp</code> \u4e4b\u95f4\u7684\u504f\u79fb\u91cf\u5df2\u7ecf\u8d85\u51fa\u4e86 12 bit \u7acb\u5373\u6570\u7684\u9650\u5236\uff0c\u8fd9\u4e2a\u65f6\u5019\u4f60\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 <code>fp</code> \u52a0\u4e0a\u504f\u79fb\u91cf\u7684\u5f62\u5f0f.</li> </ul> <p>\u6ce8\u610f\uff1a</p> <p>\u4e0a\u9762\u63d0\u5230\u7684\u8fd9\u4e9b\u95ee\u9898\u4f60\u53ef\u4ee5\u201c\u6446\u70c2\u201d\uff0c\u5f80\u6700\u574f\u7684\u60c5\u51b5\u4f30\u8ba1\u2014\u2014\u5047\u8bbe\u5168\u90e8\u5bc4\u5b58\u5668 spill\uff0c\u5047\u8bbe\u6240\u6709\u7acb\u5373\u6570\u90fd\u5927\u5230\u5fc5\u987b\u4f7f\u7528 <code>li</code> \u5148\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\u7b49\u7b49\uff0c\u8fd9\u5f53\u7136\u662f\u662f\u53ef\u4ee5\u7684.</p> <p>\u4e00\u79cd\u53ef\u80fd\u7684\u89e3\u51b3\u7684\u65b9\u6cd5\u662f\uff0c\u4e00\u4e2a\u62bd\u8c61\u7684\u7ed3\u6784\u4ee3\u66ff\u6808\u4e0a\u7684\u5730\u5740\uff0c\u4f8b\u5982\u7ed9\u9700\u8981\u5b58\u5728\u5728\u6808\u4e0a\u6240\u6709\u7684\u201c\u7269\u4f53\u201d\u7f16\u53f7\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528\u201c\u7269\u4f53\u201d\u7f16\u53f7\u52a0\u4e0a\u5355\u4e2a\u201c\u7269\u4f53\u201d\u5185\u504f\u79fb\u91cf\u7684\u4e8c\u5143\u7ec4\u7f16\u7801\uff0c\u7b49\u5230\u6307\u4ee4\u9009\u62e9\u7ed3\u675f\u540e\u518d\u7edf\u4e00\u628a\u8fd9\u4e2a\u7f16\u7801\u7ffb\u8bd1\u6210\u5e95\u5c42\u7684 <code>sp/fp</code> \u52a0\u4e0a\u504f\u79fb\u91cf\u7684\u65b9\u5f0f</p>"},{"location":"backend/#risc-v","title":"RISC-V \u6c47\u7f16","text":"<p>Venus \u6a21\u62df\u5668\u5728\u4f2a\u6307\u4ee4\u7b49\u90e8\u5206\u7ec6\u8282\u5c42\u9762\u548c RISC-V \u6807\u51c6\u5b58\u5728\u51fa\u5165\uff0c\u6211\u4eec\u8981\u6c42\u4f60\u6309\u7167 GNU assembler \u7684\u8bed\u6cd5\u8f93\u51fa\u6c47\u7f16\uff0c\u8be6\u7ec6\u53ef\u4ee5\u53c2\u8003\u8fd9\u672c\u624b\u518c RISC-V Assembly Programmer's Manual</p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528 Compiler Explorer \u9009\u62e9 RISC-V \u7f16\u8bd1\u5668\u6765\u5b66\u4e60\u751f\u6210\u7684\u6c47\u7f16\u683c\u5f0f\uff0c\u6211\u4eec\u4e3a\u4f60\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6837\u4f8b</p>"},{"location":"backend/#_5","title":"\u8fd0\u884c","text":"<p>\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528 clang \u548c lld \u4ea4\u53c9\u7f16\u8bd1\u751f\u6210\u7684 RISC-V \u6c47\u7f16\u5e76\u548c\u6211\u4eec\u63d0\u4f9b\u7684 runtime \u94fe\u63a5\u5f97\u5230\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u5728 QEMU \u4e0a\u8fd0\u884c\uff1a</p> <pre><code>$ clang  -nostdlib -nostdinc -static -target riscv64-unknown-linux-elf -march=rv64im -mabi=lp64 -fuse-ld=lld &lt;output_asm.S&gt; -o &lt;output_executable&gt; -L&lt;path_to_sysy_runtime_lib&gt; -lsysy\n$ qemu-riscv64-static &lt;output_executable&gt; &lt; &lt;test_input&gt;\n</code></pre>"},{"location":"changelog/","title":"\u66f4\u65b0\u65e5\u5fd7","text":""},{"location":"changelog/#_1","title":"\u66f4\u65b0\u65e5\u5fd7","text":""},{"location":"changelog/#2024-5-16","title":"2024-5-16","text":"<ul> <li>While \u8bed\u53e5\u7684\u7ffb\u8bd1\u89c4\u5219\u4e2d <code>entry_bb</code> \u90e8\u5206\u6709\u8bef commit#8f4e74f3</li> </ul>"},{"location":"changelog/#2024-5-12","title":"2024-5-12","text":"<ul> <li>IR \u89c4\u8303\u3001\u89e3\u91ca\u5668\u548c\u6807\u51c6\u7f16\u8bd1\u5668\u4e09\u8005\u7684\u53d6\u4f59\u6570\u8ba1\u7b97\u7684\u6307\u4ee4\u64cd\u4f5c\u7801\u4e0d\u4e00\u81f4\uff0c\u73b0\u7edf\u4e00\u4e3a <code>rem</code> accipit commit#a00d4167 \u548c accsys-cmake-template commit#fa7a4e28</li> </ul>"},{"location":"changelog/#2024-4-28","title":"2024-4-28","text":"<ul> <li>\u4fee\u590d\u4e86 lab1 \u548c lab2 \u6d4b\u8bd5\u4e2d\u4e00\u4e9b\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u95ee\u9898 (\u867d\u7136\u8fd9\u7b26\u5408\u8bed\u6cd5\u548c\u8bed\u4e49, \u4f46\u8fd9\u662f Undefined Behavior, \u6211\u4eec\u4f1a\u5728\u6d4b\u8bd5\u4e2d\u907f\u514d) commit#4e94a38</li> </ul>"},{"location":"changelog/#2024-4-27","title":"2024-4-27","text":"<ul> <li>\u4fee\u6b63\u4e86 lab1 \u6d4b\u8bd5\u4e2d <code>func_array1.sy</code> \u7b26\u5408\u8bed\u6cd5\u4f46\u4e0d\u7b26\u5408\u8bed\u4e49\u7684\u95ee\u9898 commit#4c00772</li> </ul>"},{"location":"environment/","title":"Lab 0: \u73af\u5883\u914d\u7f6e","text":""},{"location":"environment/#_1","title":"\u5b9e\u9a8c\u73af\u5883\u914d\u7f6e","text":"<p>\u6211\u4eec\u63a8\u8350\u4f60\u4f7f\u7528 Linux \u7cfb\u7edf\u5b8c\u6210\u5b9e\u9a8c. Windows \u7cfb\u7edf\u7528\u6237\u53ef\u4ee5\u8003\u8651 WSL \u6216\u8005\u865a\u62df\u673a. Mac \u7528\u6237\u52aa\u529b\u81ea\u884c\u89e3\u51b3\u5427.</p> <p>\u4e3a\u4e86\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u95ee\u9898\uff0c\u63a8\u8350\u4f7f\u7528 Ubuntu 22.04 LTS \u6216\u8005 Debian 12 (\u52a9\u6559\u7684\u73af\u5883). \u5f53\u7136\u5176\u4ed6\u53d1\u884c\u7248/\u7cfb\u7edf\u4e5f\u662f\u53ef\u4ee5\u7684, \u53ea\u8981\u4f60\u80fd\u6b63\u5e38\u5b89\u88c5\u548c\u4f7f\u7528\u76f8\u5173\u5de5\u5177. \u4ee5\u4e0b\u7684\u5de5\u5177\u7248\u672c\u5747\u4e3a Debian 12 \u4e0a\u7684\u7248\u672c (\u539f\u5219\u4e0a\u5176\u4ed6\u7248\u672c\u4e5f\u53ef\u4ee5\u5de5\u4f5c).</p> <ol> <li>\u57fa\u7840\u7f16\u8bd1\u5668<ul> <li>gcc 10.2.1</li> <li>bison 3.7.5</li> <li>flex 2.6.4</li> <li>rust (stable)</li> </ul> </li> <li>\u4ea4\u53c9\u7f16\u8bd1\u5668<ul> <li>clang 14.0.6</li> <li>llvm 14.0.6</li> <li>lld 14.0.6</li> </ul> </li> <li>riscv \u865a\u62df\u673a<ul> <li>qemu-user-static 7.2.9</li> </ul> </li> </ol> <p>\u4ee5\u4e0a\u5de5\u5177\u9664\u4e86 rust \u4e4b\u5916\u5747\u53ef\u4ee5\u7528\u7cfb\u7edf\u81ea\u5e26\u7684\u5305\u7ba1\u7406\u5668 (\u6bd4\u5982 apt) \u5b89\u88c5. </p>"},{"location":"environment/#bison-flex","title":"Bison \u548c Flex \u5b89\u88c5","text":"<p><code>bison</code> \u548c <code>flex</code> \u662f Lab 1 \u8981\u7528\u5230\u7684\u5de5\u5177. \u4f60\u53ef\u4ee5\u7528 <code>accipit/examples/toy-calculator</code> \u4e0b\u7684\u6587\u4ef6\u6765\u7b80\u5355\u6d4b\u8bd5. \u91cc\u9762\u4f7f\u7528 flex \u548c bison \u7f16\u5199\u4e86\u4e00\u4e2a C API \u7684\u8ba1\u7b97\u5668\uff0c\u5e76\u4f7f\u7528 gcc \u7f16\u8bd1\uff1a</p> <pre><code>examples/toy-calculator $ make\nexamples/toy-calculator $ ./calculator &lt; input.txt\n</code></pre> <p>\u4f60\u80fd\u770b\u5230\u8f93\u51fa\u5f62\u5982\uff1a</p> <pre><code>ans = -4.000000\nans = 3.000000\nans = 12.000000\nans = 18.000000\nans = 120.000000\nans = 1.666667\nans = 5.400000\nans = 1.000000\nans = 1.414214\n</code></pre> <p>\u5f53\u7136\u672c\u5b9e\u9a8c\u5e76\u4e0d\u9650\u5236\u4f60\u7528\u4ec0\u4e48\u8bed\u8a00\u548c\u5de5\u5177\u6765\u5b9e\u73b0 lexer/parser. \u4f60\u53ef\u4ee5\u7528 Rust, Python, Java, C++ \u751a\u81f3 OCaml \u7b49\u8bed\u8a00, \u4e5f\u53ef\u4ee5\u4e0d\u7528 parser generator \u800c\u662f\u7528 parser combinator (Accipit IR \u7684 parser \u5c31\u662f\u8fd9\u6837\u5199\u7684) \u751a\u81f3\u624b\u5199\u9012\u5f52\u4e0b\u964d parser.</p>"},{"location":"environment/#rust","title":"Rust \u5b89\u88c5\uff08\u53ef\u9009\uff09","text":"<p>\u7531\u4e8e Accipit IR \u76f8\u5173\u5de5\u5177\u662f\u7528 Rust \u7f16\u5199\u7684, \u6240\u4ee5\u9700\u8981\u5b89\u88c5 Rust (\u4f60\u4e5f\u53ef\u4ee5\u7b49\u5230 Lab 3 \u7684\u65f6\u5019\u5b89\u88c5) \u4ece\u6e90\u7801\u7f16\u8bd1\u76f8\u5173\u5de5\u5177\uff0c\u6216\u8005\u4f7f\u7528\u52a9\u6559\u5e2e\u4f60\u7f16\u8bd1\u597d\u7684 binary\u3002 \u6211\u4eec\u63a8\u8350\u4f7f\u7528\u6d59\u5927\u6e90\u5b89\u88c5 rustup. <pre><code>export RUSTUP_DIST_SERVER=https://mirrors.zju.edu.cn/rustup\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n</code></pre> \u4e00\u822c\u9ed8\u8ba4\u5b89\u88c5 stable \u7248\u672c. \u6267\u884c <code>rustc --version</code> \u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f. \u5e94\u5f53\u8f93\u51fa\u7c7b\u4f3c <code>rustc 1.76.0 (07dca489a 2024-02-04)</code> \u7684\u4fe1\u606f.</p> <p>\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u8fd0\u884c IR \u7684\u6837\u4f8b\u6765\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f.  <pre><code>git clone https://git.zju.edu.cn/accsys/accipit\ncd accipit\ncargo run -- examples/factorial.acc --entry factorial 10\n</code></pre> \u8f93\u51fa\u5f62\u5982 <pre><code>...\n\n3628800\n</code></pre></p>"},{"location":"environment/#runtime","title":"Runtime \u7f16\u8bd1","text":"<p>\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a SysY \u7684\u8fd0\u884c\u65f6\u5e93, \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b83. \u4f60\u53ef\u4ee5\u5c1d\u8bd5\u7f16\u8bd1\u5b83\u6765\u68c0\u67e5\u4ea4\u53c9\u5de5\u5177\u94fe\u662f\u5426\u914d\u7f6e\u6b63\u786e. </p> <p>\u5bf9\u4e8e x86_64: <pre><code>make test\n./build/test &lt; test/test.in\n</code></pre> \u5bf9\u4e8e riscv: <pre><code>make NO_LIBC=1 ADD_CFLAGS=\"-fno-stack-protector -target riscv64-unknown-linux-elf -march=rv64im -mabi=lp64\" test\nqemu-riscv64-static ./build/test &lt; test/test.in\n</code></pre> \u4f60\u5e94\u5f53\u4f1a\u770b\u5230\u7c7b\u4f3c\u5982\u4e0b\u8f93\u51fa <pre><code>10: 1 -1 0 0 10 -10 -12309714 1387487 12 3\n50000000\n-972781568\nabcdefghijklmnopqrstuvwxyz\nTimer: 0H-0M-12S-124900us\nTOTAL: 0H-0M-12S-124900us\n</code></pre></p> <p>\u5173\u4e8e\u4ea4\u53c9\u7f16\u8bd1</p> <p>\u5982\u679c\u4f60\u5bf9\u7f16\u8bd1\u9009\u9879\u611f\u5174\u8da3, \u8fd9\u91cc\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u91ca: <code>NO_LIBC=1</code> \u8868\u793a\u4e0d\u4f7f\u7528\u7cfb\u7edf\u7684 C \u6807\u51c6\u5e93 (\u4e5f\u5c31\u662f <code>libc</code>), <code>ADD_CFLAGS=\"-target riscv64-unknown-linux-elf -march=rv64im -mabi=lp64\"</code> \u8868\u793a\u6dfb\u52a0\u4ea4\u53c9\u7f16\u8bd1\u9009\u9879. \u8fd9\u91cc <code>riscv64-unknown-linux-elf</code> \u662f\u4ea4\u53c9\u7f16\u8bd1\u5668\u7684 target triple, <code>rv64im</code> \u662f riscv \u7684\u6307\u4ee4\u96c6, <code>lp64</code> \u662f riscv \u7684 ABI. \u6ce8\u610f\u5728\u7f16\u8bd1\u4f60\u7684\u7a0b\u5e8f\u7684\u65f6\u5019\u4e5f\u8bb8\u8fd8\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u9009\u9879 <code>-fuse-ld=lld</code> \u6765\u4f7f\u7528 <code>lld</code> \u4f5c\u4e3a linker, \u5426\u5219\u9ed8\u8ba4\u7684 <code>/usr/bin/ld</code> \u53ea\u80fd\u5904\u7406\u4e3b\u673a x86_64 \u6216\u8005 arm \u6307\u4ee4\u96c6\u7684 elf \u6587\u4ef6\uff0c\u65e0\u6cd5\u94fe\u63a5\u4ea4\u53c9\u7f16\u8bd1\u7684\u4ea7\u7269, \u8fd9\u70b9\u5df2\u7ecf\u5728 Makefile \u4e2d\u5904\u7406\u4e86.  \u5173\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u7528 <code>libc</code>, <code>qemu-user-static</code> \u662f\u4e00\u4e2a\u7528\u6237\u6001\u7684 riscv \u865a\u62df\u673a, \u5c31\u50cf\u4f60\u5728 OS \u5b9e\u9a8c\u4e2d\u7528 <code>qemu-system-riscv64</code> \u8fd0\u884c\u7684\u7cfb\u7edf\u4e00\u6837, \u5b83\u662f\u4e0d\u5e26\u6807\u51c6\u5e93\u7684. \u5982\u679c\u4f60\u60f3\u8f93\u5165\u8f93\u51fa, \u4f60\u9700\u8981\u624b\u52a8\u8c03\u7528 <code>syscall</code>. \u8fd9\u4e2a\u5de5\u4f5c\u5728\u4e4b\u524d\u662f\u7531 <code>libc</code> \u6765\u5e2e\u4f60\u5b8c\u6210\u7684, \u4f60\u53ea\u9700\u8981\u8c03\u7528\u5b83\u63d0\u4f9b\u7684\u5e93\u51fd\u6570 (\u6bd4\u5982 <code>printf</code>), \u6211\u4eec\u63d0\u4f9b\u7684 runtime \u4e5f\u662f\u8fd9\u6837\u5b9e\u73b0\u7684.   \u5982\u679c\u4f60\u5b9e\u5728\u60f3\u7528 <code>libc</code> (\u6bd4\u5982\u8bf4\u4f60\u60f3\u8981\u7528 C++ \u5199 runtime) \u4e5f\u662f\u53ef\u4ee5\u5b9e\u73b0\u7684, \u4f46\u662f\u52a9\u6559\u5e76\u6ca1\u6709\u5728 Debian 12 \u4e0a\u914d\u51fa\u6765. \u4f60\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 ArchLinux, \u5b83\u5bf9\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7684\u652f\u6301\u66f4\u53cb\u597d\u4e00\u4e9b (\u81f3\u5c11\u52a9\u6559\u5728 ArchLinux \u4e0a\u914d\u51fa\u6765\u4e86). \u5982\u679c\u4f60\u5bf9\u6b64\u611f\u5174\u8da3\u53ef\u4ee5\u548c\u52a9\u6559\u4ea4\u6d41.  \u4f60\u7684\u7f16\u8bd1\u5668\u5b9e\u73b0\u7684\u662f\u7f16\u8bd1\u8fd9\u91cc\u7684 <code>test.c</code> \u7684\u5de5\u4f5c, \u7136\u540e\u518d\u53bb\u8c03\u7528 assembler \u548c linker \u6765\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6. \u7406\u8bba\u4e0a\u6700\u540e\u7684\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u4ee5\u8fd0\u884c\u5728\u4f60\u7684 OS \u5b9e\u9a8c\u6700\u7ec8\u7684\u4ea7\u7269\u4e0a, \u4f60\u5728 OS Lab \u4e2d\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8fd0\u884c\u7528\u6237\u6001\u7a0b\u5e8f\u7684\u529f\u80fd. \u5982\u679c\u4f60\u611f\u5174\u8da3, \u4f60\u53ef\u4ee5\u5728\u4f60\u81ea\u5df1\u7684 OS \u4e0a\u8fd0\u884c\u4f60\u81ea\u5df1\u7684\u7f16\u8bd1\u5668\u751f\u6210\u7684\u7a0b\u5e8f.   \u7136\u540e\u5728\u4f60\u81ea\u5df1\u7684 CPU \u4e0a\u8fd0\u884c \u8ba1\u7b97\u673a\u7cfb\u7edf IV</p>"},{"location":"environment/#_2","title":"\u5b9e\u9a8c\u63d0\u4ea4","text":"<p>\u6ca1\u6709\u63d0\u4ea4\u5185\u5bb9. Just have fun.</p>"},{"location":"middle-ir-gen/","title":"Lab 3\uff1a\u4e2d\u95f4\u4ee3\u7801\u751f\u6210","text":""},{"location":"middle-ir-gen/#_1","title":"\u80cc\u666f\u77e5\u8bc6","text":"<p>\u6b63\u5982\u8bfe\u4e0a\u53ef\u80fd\u63d0\u5230\u8fc7\u7684\uff0c\u5982\u679c\u6ca1\u6709\u4e2d\u95f4\u8868\u793a (Intermediate Representation\uff0c\u7b80\u79f0 IR)\uff0cn \u95e8\u8bed\u8a00 m \u79cd\u786c\u4ef6\u5e73\u53f0\u5404\u81ea\u5199\u7f16\u8bd1\u5668\uff0c\u5c31\u53ef\u80fd\u9700\u8981 n * m \u79cd\u7f16\u8bd1\u5668\uff0c\u4f46\u662f n \u95e8\u8bed\u8a00\u7684\u524d\u7aef\u7f16\u8bd1\u5230\u4e00\u4e2a\u7edf\u4e00\u7684 IR \u7136\u540e\u518d\u7531 IR \u7f16\u8bd1\u5230\u4e0d\u540c\u7684\u540e\u7aef\uff0c\u8fd9\u6837\u53ea\u9700\u8981 n + m \u4e2a\u201c\u7f16\u8bd1\u5668\u201d.</p> <p>\u4f46\u662f\uff0cIR \u7684\u4f5c\u7528\u5e76\u4e0d\u4ec5\u9650\u4e8e\u51cf\u5c11\u7f16\u8bd1\u5668\u5f00\u53d1\u7684\u5de5\u4f5c\u91cf\uff0c\u5728\u73b0\u4ee3\u7f16\u8bd1\u5668\u67b6\u6784\u4e0b\uff0c\u5177\u4f53\u4f53\u73b0\u5728 IR \u6240\u6307\u4ee3\u7684\u5bf9\u8c61\u5bbd\u6cdb\u5316\u4e86\uff0c\u73b0\u5728 IR \u901a\u5e38\u53ef\u4ee5\u7528\u4e8e\u6cdb\u6307\u201c\u6e90\u4ee3\u7801\u201d\u4e0e\u201c\u76ee\u6807\u5e73\u53f0\u6c47\u7f16\u201d\u4e4b\u95f4\u7684\u5404\u79cd\u8868\u793a\u5f62\u5f0f\uff0c\u4f8b\u5982\u62bd\u8c61\u8bed\u6cd5\u6811\u3001\u76ee\u6807\u65e0\u5173\u7684\u4e2d\u95f4\u4ee3\u7801\u3001\u4e09\u5730\u5740\u7801\u98ce\u683c\u7684\u7c7b\u673a\u5668\u4ee3\u7801\u5c42\u7b49\uff0c\u4ece\u4e2d\u95f4\u4ee3\u7801\u6240\u5728\u7684\u62bd\u8c61\u5c42\u6b21\u6765\u770b\uff1a</p> <ul> <li>\u62bd\u8c61\u8bed\u6cd5\u6811 AST\uff08\u9ad8\u5c42 IR\uff09\uff1a\u6811\u5f62\u7ed3\u6784\uff0c\u8d34\u8fd1\u6e90\u4ee3\u7801\u5c42\uff0c\u9002\u5408\u505a\u8bed\u6cd5\u7cd6\u7684\u5c55\u5f00\u3001\u6784\u5efa\u7b26\u53f7\u8868\u3001\u7c7b\u578b\u68c0\u67e5\u7b49\u9760\u8fd1\u7f16\u7a0b\u8bed\u8a00\u7684\u9ad8\u5c42\u7ea7\u62bd\u8c61\u7684\u4efb\u52a1. \u5b83\u4eec\u548c\u7a0b\u5e8f\u8bed\u8a00\u7684\u8bbe\u8ba1\u98ce\u683c\u606f\u606f\u76f8\u5173\uff0c\u56e0\u6b64\u80fd\u591f\u505a\u4e00\u4e9b\u66f4\u62bd\u8c61\u3001\u66f4\u9ad8\u7ea7\u7684\u4f18\u5316. \u4f8b\u5982\uff0cAST \u5c42\u7ea7\u4ecd\u7136\u4fdd\u7559\u7ed3\u6784\u5316\u63a7\u5236\u6d41\uff08\u4f8b\u5982 while loop, for loop, if, switch\uff0c\u51fd\u6570\u5f0f\u98ce\u683c\u7684\u53ef\u80fd\u6709 parallel, reduce, yield \u7b49\uff09\u4fe1\u606f\uff0c\u6a21\u5f0f\u5339\u914d (pattern match) \u5c31\u53ef\u4ee5\u88ab\u5c55\u5f00\u4e3a\u4e00\u68f5\u9ad8\u6548\u7684\u51b3\u7b56\u6811 (decison tree)\uff0c\u51cf\u5c11\u591a\u4f59\u7684\u6bd4\u8f83\u548c\u8df3\u8f6c.</li> <li>\u76ee\u6807\u65e0\u5173\u7684\u4e2d\u95f4\u4ee3\u7801\uff08\u4e2d\u5c42 IR\uff09\uff1a\u672c\u5b9e\u9a8c\u8ba8\u8bba\u7684\u90e8\u5206. \u5e38\u89c1\u7684\u8bbe\u8ba1\u662f\u7ebf\u6027\u6307\u4ee4. \u7531\u4e8e\u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u8bbe\u8ba1\u4e0a\u901a\u5e38\u4f1a\u8003\u8651\u5c4f\u853d\u5e95\u5c42\u7ec6\u8282\uff1b\u7531\u4e8e\u8003\u8651\u9002\u914d\u591a\u8bed\u8a00\u524d\u7aef\u7684\u9700\u8981\uff0c\u629b\u5f03\u4e86\u591a\u6570\u9ad8\u5c42\u7ea7\u4fe1\u606f\uff0c\u66f4\u4e3a\u8d34\u5408\u5e95\u5c42\u6c47\u7f16. \u4f8b\u5982 LLVM IR \u5728\u5f62\u5f0f\u4e0a\u5c31\u975e\u5e38\u7c7b\u4f3c RISC \u6c47\u7f16\uff0c\u4f46\u662f\u4ecd\u7136\u6709 GEP \u8fd9\u6837\u7684\u9ad8\u7ea7\u6307\u4ee4. \u5728\u8fd9\u4e00\u5c42\u7ea7\uff0c\u901a\u5e38\u53ea\u5269\u4e0b\u4e86\u975e\u7ed3\u6784\u5316\u63a7\u5236\u6d41\uff08\u4f8b\u5982\u65e0\u6761\u4ef6\u8df3\u8f6c jump\uff0c\u5206\u652f\u8df3\u8f6c branch \u7b49\uff09\uff0c\u8fdb\u884c\u4f8b\u5982\u5e38\u91cf\u4f20\u64ad\u3001\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u6298\u53e0\u3001\u4e0d\u53d8\u5f0f\u5f52\u7eb3\u7b49\u4e0e\u786c\u4ef6\u7ec6\u8282\u65e0\u5173\u7684\u4f18\u5316\uff0c\u4ee5\u53ca\u63a7\u5236\u6d41\u5206\u6790\u3001\u6570\u636e\u6d41\u5206\u6790\u3001\u522b\u540d\u5206\u6790\u7b49\u666e\u9002\u7684\u5206\u6790.</li> <li>\u4e09\u5730\u5740\u7801\u6216\u56db\u5143\u7ec4\u98ce\u683c\u7684\u7c7b\u673a\u5668\u4ee3\u7801\u5c42\uff08\u4f4e\u5c42 IR\uff09\uff0c\u5f62\u5f0f\u4e0a\u975e\u5e38\u63a5\u8fd1\u6c47\u7f16\uff0c\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u6309\u7167\u6c47\u7f16\u6307\u4ee4\u7684\u683c\u5f0f\u8bbe\u8ba1. \u8fd9\u4e00\u5c42\u975e\u5e38\u9760\u8fd1\u786c\u4ef6\uff0c\u4f18\u5316\u9700\u8981\u8003\u8651\u4e0d\u540c\u6307\u4ee4\u7684\u5ef6\u8fdf\u3001\u541e\u5410\u91cf\u3001\u6d41\u6c34\u7ebf\u3001ABI \u7b49\uff0c\u8bb8\u591a\u95ee\u9898\u662f NP-Hard \u7684.</li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5b9e\u9645\u4e0a\u6bcf\u4e00\u5c42\u201c\u4e2d\u95f4\u8868\u793a\u201d\u90fd\u6709\u5404\u81ea\u7684\u7279\u70b9\uff0c\u4f9d\u6b21\u4ece\u9ad8\u62bd\u8c61\u8d70\u5411\u4f4e\u7ea7\uff0c\u9002\u5408\u505a\u7684\u4efb\u52a1\u4e5f\u4e0d\u540c\uff0c\u6bcf\u4e00\u5c42\u90fd\u662f\u4e00\u4e2a\u5c0f\u578b\u7684\u201c\u7f16\u8bd1\u7cfb\u7edf\u201d\uff0c\u56e0\u6b64\u73b0\u4ee3\u7f16\u8bd1\u5668\u901a\u5e38\u4f1a\u91c7\u7528\u591a\u5c42 IR. \u6b64\u5916\uff0c\u7531\u4e8e\u6d89\u53ca\u7684\u4efb\u52a1\u4e0d\u540c\uff0cIR \u4e5f\u6709\u4e0d\u540c\u7684\u7ed3\u6784\u7ed3\u6784\u7279\u5f81\uff1a</p> <ul> <li>\u6811\u6216\u8005\u56fe\u7ed3\u6784\uff1a\u4f7f\u7528\u56fe\uff08graph\uff09\u6765\u8868\u793a\u7a0b\u5e8f\u7684\u4fe1\u606f\uff0c\u7528\u8282\u70b9\u8868\u793a\u7a0b\u5e8f\u91cc\u7684\u5bf9\u8c61\uff0c\u7528\u8fb9\u8868\u793a\u5173\u7cfb\uff0c\u6b64\u7c7b\u7ed3\u6784\u4e00\u822c\u80fd\u8be6\u5c3d\u51c6\u786e\u5730\u63cf\u8ff0\u7a0b\u5e8f\u5185\u7684\u5404\u7c7b\u4fe1\u606f. \u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09\u662f\u4e00\u79cd\u5178\u578b\u7684\u6811\u5f62 IR.</li> <li>\u7ebf\u578b\u7ed3\u6784\uff1a\u4f8b\u5982\u6c47\u7f16\u8bed\u8a00\u4e2d\u6307\u4ee4\u4e4b\u95f4\u5c31\u662f\u7ebf\u578b\u5173\u7cfb\u3002\u4f60\u53ef\u4ee5\u5c06\u8fd9\u79cd\u4e2d\u95f4\u4ee3\u7801\u770b\u6210\u662f\u67d0\u79cd\u62bd\u8c61\u8ba1\u7b97\u673a\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u6307\u4ee4\u96c6\u3002</li> <li>\u6df7\u5408\u578b\uff1a\u6df7\u5408\u4e86\u56fe\u548c\u7ebf\u6027\u4e24\u79cd\u4e2d\u95f4\u4ee3\u7801\u98ce\u683c\uff0c\u4f8b\u5982\u672c\u5b9e\u9a8c\u6240\u4f7f\u7528\u7684 Accipit IR. Accipit IR \u5c06\u4ee3\u7801\u7ec4\u7ec7\u6210\u8bb8\u591a\u57fa\u672c\u5757\uff0c\u5757\u5185\u90e8\u91c7\u7528\u7ebf\u578b\u8868\u793a\uff0c\u5757\u4e0e\u5757\u4e4b\u95f4\u91c7\u7528\u56fe\u8868\u793a.</li> </ul> <p>Rust \u5c31\u66fe\u7ecf\u5728\u524d\u7aef\u589e\u52a0\u4e86\u4e00\u5c42\u56fe\u7ed3\u6784 MIR\uff0cborrow checker \u5c31\u5728 MIR \u5c42\u4e0a\u8fdb\u884c\u5206\u6790\uff1a</p> <p></p> <p>\u5f53\u7136\uff0c\u5e76\u4e0d\u662f\u8bf4\u62bd\u8c61\u5c42\u7ea7\u8d8a\u9ad8\uff0c\u76f8\u5e94\u5730\u7ed3\u6784\u7279\u5f81\u5c31\u4f1a\u8d8a\u590d\u6742. \u4f8b\u5982\uff0cC \u8bed\u8a00\u7684\u6e90\u7801\u662f\u7ebf\u578b\u7684\u5b57\u7b26\u4e32\uff0c\u8bed\u53e5\u4e0e\u8bed\u53e5\u4e4b\u95f4\u4e5f\u7ebf\u578b\u7684\uff1bWASM \u6c47\u7f16\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u6811\u5f62\u7684 SExpr \u683c\u5f0f\u5d4c\u5957\u8868\u793a.</p> add.wast<pre><code>(func (export \"add\") (param $x i32) (param $y i32)\n    (result i32) \n    (i32.add \n        (local.get $x)\n        (local.get $y)\n    )\n)\n</code></pre>"},{"location":"middle-ir-gen/#_2","title":"\u4e2d\u95f4\u4ee3\u7801\u7684\u5b9a\u4e49","text":"<p>\u672c\u5b9e\u9a8c\u7684 IR \u662f\u7c7b\u4f3c LLVM IR \u7684 partial SSA \u5f62\u5f0f\uff0c\u5373\u5229\u7528 <code>alloca</code> <code>load</code> <code>store</code> \u4e09\u6761\u6307\u4ee4\u5728 SSA \u5f62\u5f0f\u4e0a\u201c\u5f00\u6d1e\u201d\uff0c\u5177\u4f53\u7684\u89c4\u8303\u8bf7\u53c2\u9605 Accipit IR \u89c4\u8303. \u6211\u4eec\u5728\u9644\u5f55\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6837\u4f8b\uff1aSysY \u7ed3\u6784\u4e0e Accipit IR \u7684\u5bf9\u5e94\uff0c\u4e3a\u4f60\u6f14\u793a\u5982\u4f55\u4ece SysY \u524d\u7aef\u7684\u9ad8\u5c42\u7ea7\u7ed3\u6784\u7ffb\u8bd1\u5230 Accipit IR\u3002</p> <p>\u4e0b\u9762\u8fd9\u6bb5\u9636\u4e58\u7684\u6837\u4f8b\u4ee3\u7801\u80fd\u5e2e\u52a9\u4f60\u5b9e\u73b0\u4e00\u4e2a\u529f\u80fd\u6b63\u786e\uff08\u867d\u7136\u663e\u7136\u6b20\u4f18\u5316\u7684\uff09\u7684\u4e2d\u7aef\u4ee3\u7801.</p> <p>\u6e90\u7801\uff1a</p> <pre><code>int factorial(int n) {\n    if (n == 1) {\n        return 1;\n    } else {\n        int ans = n * factorial(n - 1);\n        return ans;\n    }\n}\n</code></pre> <p>\u53c2\u8003\u4e2d\u95f4\u4ee3\u7801\uff1a <pre><code>fn @factorial(#n: i32) -&gt; i32 {\n%Lentry:\n    // create a stack slot of i32 type as the space of the return value.\n    // if n equals 1, store `1` to this address, i.e. `return 1`,\n    // otherwise, do recursive call, i.e. return n * factorial(n - 1).\n    let %ret.addr = alloca i32, 1\n    // store function parameter on the stack.\n    let %n.addr = alloca i32, 1\n    let %4 = store #n, %n.addr\n    // create a slot for local variable ans, uninitialized.\n    let %ans.addr = alloca i32, 1\n    // when we need #n, you just read it from %n.addr.\n    let %6 = load %n.addr\n    // comparison produce an `i8` value.\n    let %cmp = eq %6, 0\n    br %cmp, label %Ltrue, label %Lfalse\n%Ltrue:\n    // retuen value = 1.\n    let %10 = store 1, %ret.addr\n    jmp label %Lret\n%Lfalse:\n    // n - 1\n    let %13 = load %n.addr\n    let %14 = sub %13, 1\n    // factorial(n - 1)\n    let %res = call @factorial, %14\n    // n\n    let %16 = load %n.addr\n    // n * factorial(n - 1)\n    let %17 = mul %16, %res\n    // write local variable `ans`\n    let %18 = store %17, %ans.addr\n    // now we meets `return ans`, which means we\n    // should first read value from `%ans.addr` and then\n    // write it to `%ret.addr`.\n    let %19 = load %ans.addr\n    let %20 = store %19, %ret.addr\n    jmp label %Lret\n%Lret:\n    // load return value from %ret.addr\n    let %ret.val = load %ret.addr\n    ret %ret.val\n}\n</code></pre></p>"},{"location":"middle-ir-gen/#_3","title":"\u57fa\u672c\u5757\u7684\u5904\u7406","text":"<p>\u57fa\u672c\u5757\u662f\u5212\u5206\u63a7\u5236\u6d41\u7684\u8fb9\u754c\uff0c\u57fa\u672c\u5757\u5185\u6307\u4ee4\u6709\u5e8f\u5730\u7ebf\u6027\u6267\u884c\uff0c\u63a7\u5236\u6d41\u8df3\u8f6c\u53ea\u5b58\u5728\u4e8e\u57fa\u672c\u5757\u4e4b\u95f4\uff0c\u8fd9\u79cd\u5173\u7cfb\u4f7f\u5f97\u57fa\u672c\u5757\u4e4b\u95f4\u8fde\u6210\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u4e00\u822c\u79f0\u8fd9\u4e2a\u6709\u5411\u56fe\u4e3a\u63a7\u5236\u6d41\u56fe (Contorl Flow Graph\uff0c\u7b80\u79f0 CFG). \u4f8b\u5982\uff1a<code>if</code> \u7684\u4e24\u4e2a\u5206\u652f\u5206\u522b\u7ffb\u8bd1\u5230\u4e24\u4e2a\u57fa\u672c\u5757 <code>Ltrue</code> \u4e0e <code>Lfalse</code>.</p> <p></p> <p>\u4e0a\u56fe\u662f\u4f7f\u7528 llvm \u7ec4\u4ef6\u751f\u6210\u7684\u53ef\u89c6\u5316\u63a7\u5236\u6d41\u56fe\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u83b7\u5f97\uff1a</p> <pre><code># clang emit llvm bytecode\n$ clang -S -emit-llvm file.c -o file.bc\n# convert to dot file\n$ opt -dot-cfg -disable-output -enable-new-pm=0 file.bc\n# if you are using a newer version of LLVM toolchain with new PassManager, try\n# $ opt -passes=dot-cfg -disable-output test.bc\nWriting '.file.dot'...\n# dot render png file\n$ dot -Tpng -o file.png .file.dot\n</code></pre> <p>\u5728 <code>if</code> \u5206\u652f\u5165\u53e3\u524d\uff0c\u6709\u4e00\u4e2a\u57fa\u672c\u5757\u4f5c\u4e3a\u5165\u53e3\uff0c\u8ba1\u7b97 <code>if</code> \u6761\u4ef6\u7684\u771f\u5047\uff0c\u5373 <code>%cmp</code>\uff1b  \u5728 <code>if</code> \u7684\u4e24\u4e2a\u5206\u652f\u7ed3\u675f\u540e\uff0c\u63a7\u5236\u6d41\u8fdb\u884c\u4e86\u201c\u5408\u5e76\u201d\uff0c\u5904\u7406\u4e0b\u4e00\u4e2a\u8bed\u53e5\u5757\uff0c\u8fdb\u884c\u4e00\u4e2a\u65e0\u6761\u4ef6\u8df3\u8f6c <code>br label %ret</code>\uff0c\u6765\u5230\u4e86\u51fa\u53e3\u57fa\u672c\u5757 <code>%ret</code>. \u8fd9\u662f\u7ed3\u6784\u5316\u63a7\u5236\u6d41\u901a\u5e38\u7684\u5904\u7406\u601d\u8def\uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u7c7b\u63a8\u5230 <code>while</code> \u5faa\u73af\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u610f\u56fe\uff1a</p> <p></p>"},{"location":"middle-ir-gen/#_4","title":"\u5c40\u90e8\u53d8\u91cf\u7684\u5904\u7406","text":"<p>\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u4e3a\u6240\u6709\u5c40\u90e8\u4f5c\u7528\u57df\u7684\u53d8\u91cf\u90fd\u5f00\u8f9f\u4e00\u5757\u6808\u4e0a\u7684\u7a7a\u95f4\uff0c\u8bfb\u5c40\u90e8\u53d8\u91cf\u5c31\u662f load \u5bf9\u5e94\u7684\u5730\u5740\uff08IR \u4e2d\u5373\u4e3a alloca \u83b7\u53d6\u7684\u6307\u9488\u7c7b\u578b\u7684\u503c\uff09\uff0c\u5199\u5c40\u90e8\u53d8\u91cf\u5c31\u662f\u628a\u7ed3\u679c store \u5165\u5bf9\u5e94\u7684\u5730\u5740.</p> <p>\u5982\u679c\u4f60\u8fd8\u4e0d\u660e\u767d\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u793a\u610f\u56fe\u5e76\u4f50\u4ee5SysY \u7ed3\u6784\u4e0e Accipit IR \u7684\u5bf9\u5e94\uff1a</p> <p></p>"},{"location":"middle-ir-gen/#_5","title":"\u8bed\u6cd5\u5236\u5bfc\u4ee3\u7801\u751f\u6210","text":"<p>\u4e0b\u4e00\u6b65\u6211\u4eec\u5c31\u8981\u628a\u7ecf\u8fc7\u8bed\u4e49\u68c0\u67e5\u8bed\u6cd5\u6811\u8f6c\u6362\u6210 Accipit \u4e2d\u95f4\u4ee3\u7801. \u9996\u5148\uff0c\u7b80\u8981\u56de\u987e Accipit IR \u7684\u7ed3\u6784\uff0c\u8be6\u7ec6\u8bf7\u770b Accipit IR \u89c4\u8303\uff1a</p> <ul> <li>Type\uff08\u7c7b\u578b\uff09\uff1a\u5305\u62ec\u57fa\u672c\u7c7b\u578b <code>i32</code> <code>()</code> \u4ee5\u53ca\u6307\u9488\u7c7b\u578b\u3001\u51fd\u6570\u7c7b\u578b.</li> <li>Instruction\uff08\u6307\u4ee4\uff09\uff1a\u6307\u4ee4\u5206\u4e3a value binding \u548c terminator \u4e24\u7c7b. \u524d\u8005\u4e3b\u8981\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\uff0c\u6709 <code>let</code> \u5f00\u5934\uff0c\u5b9a\u4e49\u4e00\u4e2a\u65b0\u53d8\u91cf\uff1b\u540e\u8005\u4e3b\u8981\u8fdb\u884c\u63a7\u5236\u6d41\u64cd\u4f5c\uff0c\u5982\u65e0\u6761\u4ef6\u8df3\u8f6c\u548c\u6761\u4ef6\u8df3\u8f6c\u7b49.</li> <li>Value\uff08\u503c\uff09\uff1a\u503c\u5305\u542b\u6307\u4ee4\u6240\u5b9a\u4e49\u7684\u7b26\u53f7 <code>symbol</code> \u548c\u5e38\u91cf <code>const</code> \u4e24\u7c7b.</li> <li>BasicBlock\uff08\u57fa\u672c\u5757\uff09\uff1a\u57fa\u672c\u5757\u5305\u542b\u82e5\u5e72\u7ebf\u6027\u6392\u5217\u7684\u6307\u4ee4\u5e8f\u5217\uff0c\u5176\u4e2d\u6700\u540e\u4e00\u6761\u6307\u4ee4\u5fc5\u987b\u662f terminator. \u57fa\u672c\u5757\u5185\u90e8\u7684\u6307\u4ee4\u5e8f\u5217\u7ebf\u6027\u6392\u5217\uff0c\u7ebf\u6027\u6267\u884c\uff08\u7ebf\u6027\u7ed3\u6784\uff09\uff1b\u57fa\u672c\u5757\u4e4b\u95f4\u7684\u8df3\u8f6c\u6784\u6210\u56fe\u7ed3\u6784\uff0c\u8868\u793a\u63a7\u5236\u6d41\u7684\u8df3\u8f6c\uff08\u56fe\u7ed3\u6784\uff09.</li> <li>Function\uff08\u51fd\u6570\uff09\uff1a\u51fd\u6570\u7684\u540d\u79f0\uff0c\u7c7b\u578b\u7b49.</li> <li>Module\uff08\u6a21\u5757\uff09\uff1a\u8868\u793a\u6574\u4e2a\u7f16\u8bd1\u5355\u5143\uff0c\u5305\u542b\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u7b49.</li> </ul> <p>\u4ee5\u53ca\u518d\u6b21\u91cd\u7533\u8fd9\u6761\u91cd\u8981\u539f\u5219\uff1a</p> <p>\u6ce8\u610f</p> <p>\u51fa\u4e8e\u67d0\u79cd\u795e\u79d8\u7684\u539f\u56e0\uff0c\u6211\u4eec\u89c4\u5b9a\u6bcf\u4e2a\u53d8\u91cf\u53ea\u80fd\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u88ab\u8d4b\u503c\u4e00\u6b21. \u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u6761 value binding \u7c7b\u578b\u7684\u6307\u4ee4\u7684\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5728\u5bf9\u5e94\u7684\u4f5c\u7528\u57df\u5185\u8981\u6c42\u662f\u552f\u4e00\u7684\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u9644\u5f55\uff1a\u4ece\u56db\u5143\u7ec4\u5230\u9759\u6001\u5355\u8d4b\u503c\u5f62\u5f0f. \u6240\u4ee5\uff0c\u6211\u4eec\u5728\u8bed\u6cd5\u4e0a\u7528 <code>let</code> \u6765\u6697\u793a\u8fd9\u4e00\u70b9. \u6709\u4e00\u4e9b\u76f8\u5e94\u7684\u7ffb\u8bd1\u6280\u5de7\u5904\u7406\u6e90\u4ee3\u7801\u51fa\u73b0\u591a\u6b21\u8d4b\u503c\u7684\u60c5\u51b5\uff0c\u8be6\u7ec6\u8bf7\u770b\u9644\u5f55\uff1aSysY \u7ed3\u6784\u4e0e Accipit IR \u7684\u5bf9\u5e94</p> <p>\u7ffb\u8bd1\u7684\u57fa\u672c\u601d\u8def\u662f\u904d\u5386\u8bed\u6cd5\u6811\u7684\u8282\u70b9\uff0c\u7136\u540e\u6839\u636e\u8282\u70b9\u7684\u7c7b\u578b\u751f\u6210\u5bf9\u5e94\u7684\u4e2d\u95f4\u4ee3\u7801. \u6574\u4e2a\u7ffb\u8bd1\u7684\u6700\u5927\u77db\u76fe\u5728\u4e8e\u524d\u7aef\u6811\u7ed3\u6784\u7684\u8bed\u6cd5\u6811\u548c\u540e\u7aef\u7ebf\u6027\u7684\u6c47\u7f16\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u672c\u5b9e\u9a8c\u7684\u6838\u5fc3\u54f2\u5b66\u4fbf\u5728\u4e8e\u4e2d\u95f4\u4ee3\u7801\u5982\u4f55\u8fde\u63a5\u8fd9\u4e24\u79cd\u8fe5\u5f02\u7684\u4ee3\u7801\u8868\u793a\u5f62\u5f0f\uff1a</p> <ul> <li>\u6570\u636e\u4f9d\u8d56\uff08Data Dependency\uff09\uff1a\u8bed\u6cd5\u6811\u53ea\u8bb0\u5f55\u4e86\u53d8\u91cf\u7684\u540d\u5b57\u800c\u4e14\u53ef\u80fd\u6709\u91cd\u540d\u53d8\u91cf\uff0c\u800c\u6c47\u7f16\u7684\u53ea\u80fd\u64cd\u4f5c\u6709\u9650\u7684\u7269\u7406\u5bc4\u5b58\u5668. \u4e2d\u95f4\u4ee3\u7801\u9700\u8981\u7406\u6e05\u8868\u8fbe\u5f0f\u6240\u4f7f\u7528\u7684\u53d8\u91cf\u7684\u6570\u636e\u6765\u6e90\uff0c\u4ece\u800c\u80fd\u591f\u6700\u7ec8\u6620\u5c04\u5230\u5bc4\u5b58\u5668\u64cd\u4f5c\u4e0a. Accipit IR \u89c4\u8303\u4e2d\u7684 value \u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8868\u5f81\u4e86\u201c\u6570\u636e\u201d\uff0c\u5373\u7b26\u53f7\u6216\u5e38\u91cf.</li> <li>\u63a7\u5236\u6d41\uff08Control Flow\uff09\uff1a\u8bed\u6cd5\u6811\u8bed\u53e5\u5757\u662f\u7ed3\u6784\u5316\u7684\u3001\u5d4c\u5957\u7684\u6811\u5f62\u7ed3\u6784\uff0c\u5e76\u6ca1\u6709\u663e\u5f0f\u7684\u63a7\u5236\u6d41\u8df3\u8f6c\uff1b\u6c47\u7f16\u662f\u7ebf\u578b\u7684\uff0c\u9700\u8981\u7ed9\u4e0d\u540c\u7684\u5b50\u8bed\u53e5\u5757\u6807\u8bb0 label\uff0c\u5e76\u52a0\u4e0a\u5408\u9002\u7684\u8df3\u8f6c\u6307\u4ee4. \u4e2d\u95f4\u4ee3\u7801\u9700\u8981\u7406\u6e05\u4e0d\u540c\u8bed\u53e5\u5757\u4e4b\u95f4\u7684\u63a7\u5236\u6d41\u8df3\u8f6c\u5173\u7cfb.</li> </ul> <p>\u6211\u4eec\u5b9e\u73b0\u4e00\u4e2a translate_X \u51fd\u6570\uff0cX \u5bf9\u5e94\u8868\u8fbe\u5f0f\uff0c\u8bed\u53e5\u7b49\u7b49.</p> <ul> <li><code>translate_expr</code> \u5c06\u8868\u8fbe\u5f0f\u7ffb\u8bd1\u5230\u4e2d\u7aef IR \u7684 value. \u8d77\u5230\u8ddf\u8e2a\u6570\u636e\u4f9d\u8d56\u5173\u7cfb\uff0c\u5b8c\u6210\u8868\u8fbe\u5f0f\u7ffb\u8bd1\u5230\u7ebf\u6027\u7684\u6307\u4ee4\u7684\u4efb\u52a1.</li> <li><code>translate_stmt</code> \u5c06\u8bed\u53e5\u5757\u7ffb\u8bd1\u5230\u4e2d\u7aef IR \u7684 basicblock. \u4f60\u9700\u8981\u8ddf\u8e2a\u63a7\u5236\u6d41\uff0c\u5c06\u8bed\u53e5\u5757\u4e4b\u95f4\u7684\u5173\u7cfb\u7ffb\u8bd1\u5230\u63a7\u5236\u6d41\u8df3\u8f6c\u4efb\u52a1\uff0c\u63d2\u5165\u5408\u9002\u7684 terminator \u6307\u4ee4.</li> </ul>"},{"location":"middle-ir-gen/#_6","title":"\u8868\u8fbe\u5f0f\u751f\u6210","text":"<p>\u5728 Accipit IR \u4e2d\uff0c\u503c (value) \u5305\u62ec\u53d8\u91cf\u548c\u5e38\u6570.</p> <p>\u6211\u4eec\u5148\u5b9a\u4e49 <code>Value</code> \u7c7b\u578b\uff0c\u5e76\u7ed9\u51fa\u4e00\u4e9b\u53ef\u4f9b\u53c2\u8003\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a</p> <p>\u5b9e\u73b0\u5efa\u8bae</p> CC++OCaml <p>C \u901a\u5e38\u4f7f\u7528 enum + union\uff1a</p> <pre><code>enum value_kind {\n    kind_constant_int32,\n    Kind_constant_unit,\n    // ...\n    kind_binary_expression,\n    kind_function_call,\n    kind_load,\n    kind_store,\n    // ...\n};\n\nstruct value {\n    enum value_kind kind,\n    struct type *ty;\n    union {\n        struct { int number; } constant_int32;\n        struct { enum binary_op op, struct value *lhs, *rhs; } binary_expr;\n        struct { struct function *callee, struct vector args } function_call;\n        struct { struct value* src_addr } load;\n        struct { struct value* dest_addr, struct value *value_to_be_stored } store;\n    };\n};\n</code></pre> <p>\u4f7f\u7528\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b enum \u6765\u6807\u8bb0 Value \u7684\u7c7b\u578b\uff0cunion \u6765\u5b58\u50a8\u4e0d\u540c Value \u7684 field\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6211\u4eec\u4e00\u822c\u79f0\u4e3a \"tagged union\". \u56e0\u6b64\uff0c\u5728\u904d\u5386 Value \u65f6\uff0c\u9700\u8981\u6839\u636e Value \u7684\u7c7b\u578b\u6765\u505a\u4e0d\u540c\u7684\u64cd\u4f5c\uff1a</p> <pre><code>void handle_value(struct value *val) {\n    switch (val-&gt;kind) {\n        case kind_constant_int32:\n            handle_constant_int32(val);\n            break;\n        case kind_constant_unit:\n            handle_constant_unit(val);\n            break;\n        case kind_binary_expression:\n            handle_binary_expression(val);\n            break;\n        // ...\n        case kind_store:\n            handle_store_expression(val);\n            break;\n        default:\n            raise_error_and_dump();\n    }\n}\n</code></pre> <p>C++ \u53ef\u4ee5\u4f7f\u7528 <code>std::variant</code> \u6765\u4ee3\u66ff C \u7684 enum + union \u6765\u5b9e\u73b0 \u201c\u7c7b\u578b\u5b89\u5168\u201d \u7684 tagged union\uff0c\u5177\u4f53\u53ef\u4ee5\u770b cpp reference\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5f53\u4e00\u4e2a Value \u5b9e\u9645\u4e0a\u662f <code>kind_constant_int32</code> \u7c7b\u578b\uff0c\u4f46\u662f\u4f60\u9519\u8bef\u5730\u4f7f\u7528\u4e86\u5904\u7406 <code>kind_binary_expression</code> \u7c7b\u578b\u7684\u51fd\u6570\u5904\u7406\u5b83\uff0c\u5c31\u4f1a\u9519\u8bef\u5730\u628a\u8fd9\u4e2a Value \u5f53\u4f5c\u4e8c\u5143\u8868\u8fbe\u5f0f\u6765\u5904\u7406\uff0c\u56e0\u6b64\u5f97\u51fa\u9519\u8bef\u7684\u7ed3\u679c\uff0c\u7136\u800c\u4e0d\u8bba\u662f\u7f16\u8bd1\u65f6\u8fd8\u662f\u8fd0\u884c\u65f6\u90fd\u4e0d\u4f1a\u5bf9\u8fd9\u6837\u7684\u8bef\u7528\u4ea7\u751f\u4efb\u4f55\u7684\u62a5\u9519\u3002 \u800c <code>std::variant</code> \u4f1a\u5728\u4e0a\u8ff0\u60c5\u51b5\u53d1\u751f\u65f6\u6254\u51fa\u5f02\u5e38\uff0c\u65b9\u4fbf\u4f60 debug\u3002</p> <p>\u9664\u4e86 C \u98ce\u683c\uff0cC++ \u53ef\u4ee5\u4f7f\u7528\u9762\u5bf9\u5bf9\u8c61\u5b9e\u73b0\uff1a</p> <pre><code>class Value {\n    Type *ty;\n    /*...*/ \n};\n\nclass ConstantInt : public Value {\n    int number;\n    /*...*/ \n};\n\nclass BinaryExpr: public Value {\n    Value *lhs, *rhs;\n    /*...*/\n};\n\nclass FnCall: public Value {\n    Function *callee;\n    std::vector&lt;Value *&gt; args;\n};\n</code></pre> <p>\u5728\u8fd9\u79cd\u5b9e\u73b0\u6a21\u5f0f\u4e0b\uff0c\u5728\u904d\u5386 Value \u65f6\u5982\u4f55\u5224\u65ad\u5f53\u524d Value \u662f\u54ea\u79cd\u7c7b\u578b\uff0c\u4ee5\u4fbf\u6211\u4eec\u7528\u6b63\u786e\u7684\u51fd\u6570\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684 Value \u5462\uff1f \u6709\u4e09\u5927\u7c7b\u65b9\u6cd5\uff1a</p> <ul> <li> <p>\u4f7f\u7528\u865a\u51fd\u6570\uff08\u4e0d\u63a8\u8350\uff09</p> <p>\u4f8b\u5982\uff0c\u6211\u4e00\u4e2a\u6253\u5370 IR \u7684\u51fd\u6570\u53eb\u505a <code>print_value</code>\uff0c\u7ed9 Value \u58f0\u660e\u4e00\u4e2a\u865a\u6210\u5458\u51fd\u6570 <code>virtual void print_value()</code>\uff0c\u7136\u540e\u6bcf\u4e2a Value \u7684\u5b50\u7c7b\u7ee7\u627f\u65f6\u91cd\u8f7d\u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u6240\u6709 Value \u7c7b\u578b\u7684\u53d8\u91cf\u76f4\u63a5\u8c03\u7528 <code>value-&gt;print_value()</code> \u5373\u53ef. \u4f46\u662f\u7f3a\u70b9\u662f\uff0c\u4f60\u6c38\u8fdc\u4e0d\u53ef\u80fd\u77e5\u9053\u4f60\u5230\u5e95\u9700\u8981\u591a\u5c11\u8fd9\u6837\u7684\u5904\u7406 Value \u7684\u51fd\u6570\uff0c\u65b0\u589e\u4e00\u4e2a <code>Value::foo()</code>\uff0c\u4f60\u5c31\u8981\u56de\u8fc7\u5934\u53bb\u4fee\u6539\u6240\u6709 Value \u4ee5\u53ca\u5b50\u7c7b\u7684\u58f0\u660e\uff1b\u518d\u65b0\u589e\u4e00\u4e2a <code>Value::bar()</code>\uff0c\u4f60\u8fd8\u8981\u91cd\u590d\u4e0a\u9762\u7684\u4e8b\u60c5. \u8fd9\u6837\u5f88\u9ebb\u70e6\uff0c\u800c\u4e14\u4e5f\u4e0d\u4f18\u96c5. \u56e0\u6b64\u865a\u51fd\u6570\u53ea\u9002\u5408\u7c7b\u4f3c print \u5fc5\u8981\u7684\u548c\u529f\u80fd\u56fa\u5b9a\u7684\u64cd\u4f5c.</p> </li> <li> <p>\u4f7f\u7528 RTTI\uff08\u53ef\u884c\uff0c\u81ea\u5df1\u770b\u7740\u7528.jpg\uff09</p> <p>C++ \u6807\u51c6\u6709\u4e00\u4e2a\u7279\u6027 \u201c\u8fd0\u884c\u65f6\u7c7b\u578b\u8bc6\u522b\u201d (Runtime Type Identification, RTTI). \u4f7f\u7528\u8fd0\u7b97\u7b26 <code>typeid</code> \u4f1a\u8fd4\u56de\u4e00\u4e2a\u8fd0\u884c\u65f6\u7684\u3001\u5bf9\u7528\u6237\u4e0d\u900f\u660e\u7684 <code>std::type_info</code> \u7c7b\u578b\uff0c\u5177\u4f53\u53ef\u53c2\u8003 cpp reference. \u4f60\u53ef\u4ee5\u83b7\u53d6 <code>type_info</code> \u7684\u5185\u90e8\u540d\u5b57\u4ee5\u53ca\u901a\u8fc7 <code>==</code> \u6bd4\u8f83\u4e24\u4e2a <code>type_info</code> \u662f\u5426\u76f8\u7b49\uff0c\u8fd9\u91cc\u6211\u4eec\u4e3a\u5927\u5bb6\u7f16\u5199\u4e86\u4e00\u4e2a godbolt \u5728\u7ebf\u6837\u4f8b.</p> </li> <li> <p>\u4f7f\u7528\u6a21\u677f\u9ed1\u9b54\u6cd5\uff08\u63a8\u8350\uff0c\u5199\u8d77\u6765\u4f18\u96c5\uff0c\u4e0d\u5f97\u4e0d\u54c1\u5c1d\u7684\u73af\u8282\u51fa\u73b0\u4e86\uff0c\u5927\u96fe\uff09</p> <p>\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u9700\u8981 C++ \u7684 RTTI\uff0c\u672c\u8d28\u4e0a\u4ecd\u7136\u662f C \u98ce\u683c\u7684 \u201cenum + union\u201d\uff0c\u4f46\u662f\u66f4\u5b89\u5168\uff0c\u53ea\u9700\u8981\u7528\u5230\u7528\u5230 C++ 11 \u7684 <code>type_traits</code> \u6807\u51c6\u5e93\u548c\u4e00\u70b9\u70b9\u6a21\u677f\u9b54\u6cd5.</p> <p>\u9996\u5148\uff0c\u5e38\u89c1\u7684\u505a\u6cd5\u662f\u65b0\u5efa\u4e00\u4e2a <code>Common.def</code>\uff0c\u7136\u540e\u5b9a\u4e49\u5b8f\uff1a</p> Common.def<pre><code>#ifndef ValueKindDefine\n#define ValuKindDefine(x)\n#endif\n\nValueKindDefine(SV_ConstantInt)\nValueKindDefine(SV_ConstantUnit)\nValueKindDefine(SV_BinaryExpr)\nValueKindDefine(SV_Alloca)\n// ....\nValueKindDefine(SV_Store)\nValueKindDefine(SV_Load)\n\n// Gaurd\n#undef ValueKindDefine\n</code></pre> <p>\u8fd9\u4e2a\u5b8f\u7684\u4f5c\u7528\u662f\u5229\u7528 include \u7684\u539f\u7406\u662f\u76f4\u63a5\u6587\u672c\u63d2\u5165\u6765\u8ba9\u7f16\u8bd1\u5668\u5e2e\u4f60\u5b8c\u6210 enum \u7684\u586b\u5199\uff1a</p> Value.h<pre><code>#define ValueTypeDefine(x) x,\nenum ValueKind {\n#include \"Common/Common.def\"\n};\n</code></pre> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u7c7b\u4f3c C \u4e2d value_kind \u7684 enum \u5b9a\u4e49\uff0c\u7136\u540e\u5728\u57fa\u7c7b Value \u4e2d\u6dfb\u52a0 <code>value_kind</code> \u5b57\u6bb5\uff0c\u8fd9\u4e2a\u5b57\u6bb5\u6807\u8bc6\u4e86\u8fd9\u4e2a Value \u5177\u4f53\u662f\u54ea\u4e2a\u7c7b\u578b\uff0c\u4f60\u8fd8\u53ef\u4ee5\u5229\u7528 C++ 11 \u7684\u521d\u59cb\u5316\u9759\u6001\u6210\u5458\u8bed\u6cd5\u6765\u7ed9\u6240\u6709 Value \u7684\u5b50\u7c7b\u521d\u59cb\u5316 <code>value_kind</code> \u5b57\u6bb5\uff1a</p> Value.h<pre><code>class Value {\nprotected:\n    /*...*/\n    ValueKind value_kind;\npublic:\n    Value(ValueKind kind): value_kind(kind) {/* ... */}\n};\n\nclass ConstantInt : public Value {\n    constexpr static ValueKind this_kind = SV_ConstantInt;\n    ConstantInt(): Value(value_kind) { /* ... */ }\n    int number;\n    /*...*/ \n};\n\nclass BinaryExpr: public Value {\n    constexpr static ValueKind this_kind = SV_BinaryExpr;\n    BinaryExpr(): Value(this_kind) { /* ... */ }\n    Value *lhs, *rhs;\n    /*...*/\n};\n</code></pre> <p>\u5230\u8fd9\u4e00\u6b65\u4f60\u56de\u5934\u8fd8\u6765\u5f97\u53ca\uff0c\u5176\u5b9e\u4ee5\u4e0a\u8fd9\u4e9b\u4ee3\u7801\u5df2\u7ecf\u8db3\u591f\u8ba9\u4f60\u50cf C \u4e00\u6837\u901a\u8fc7 <code>value_kind</code> \u8fd9\u4e2a\u6807\u8bb0\u6765\u533a\u5206\u4e0d\u540c\u7684 Value \u4e86\uff1a\u6bcf\u4e2a Value \u7684\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u90fd\u4f1a\u5c06\u81ea\u5df1\u8fd9\u4e2a\u7c7b\u7684\u6807\u8bb0 <code>this_kind</code> \u8d4b\u7ed9\u57fa\u7c7b\u7684 <code>value_kind</code>. \u4f46\u662f\uff0c\u6a21\u677f\u9b54\u6cd5\u80fd\u8ba9\u4ed6\u4eec\u66f4\u8fdb\u4e00\u6b65\uff0c\u63a5\u4e0b\u6765\u662f\u4e24\u4e2a\u6700\u6700\u91cd\u8981\u7684\u6a21\u677f\uff1a</p> Value.h<pre><code>class Value {\n// ...\npublic:\n    template &lt;typename T&gt;\n    bool is() {\n        return value_type == std::remove_pointer_t&lt;T&gt;::this_kind;\n    }\n    template &lt;typename T&gt;\n    T as() {\n        if (is&lt;T&gt;()) {\n            return static_cast&lt;T&gt;(this);\n        } else {\n            return nullptr;\n        }\n    }\n};\n\nValue *constant_int = new ConstantInt;\n// variable `constant_int` is NOT `BinaryExpr` type\nassert(!constant_int-&gt;is&lt;BinaryExpr&gt;())\n// variable `constant_int` is `ConstantInt` type\nassert(constant_int-&gt;is&lt;ConstantInt&gt;())\n\nif (ConstantInt *inner = constant_int-&gt;as&lt;ConstantInt *&gt;()) {\n    assert(true, \"Yes, `constant_int` is ConstantInt, \\\n                so the branch is reachable\");\n}\n\nif (BinaryExpr *inner = constant_int-&gt;as&lt;BinaryExpr *&gt;()) {\n    assert(false, \"No, `constant_int` is NOT BinaryExpr, \\\n                so this branch is unreachable\");\n}\n</code></pre> <p>\u9996\u5148\uff0c\u5bf9\u4e8e <code>is</code> \u6a21\u677f\uff0c<code>constant_int-&gt;is&lt;BinaryExpr&gt;()</code> \u5b9e\u9645\u4e0a\u5728\u505a\uff1a</p> <pre><code>constant_int-&gt;value_kind == BinaryExpr::this_kind;\n</code></pre> <p>\u7531\u4e8e <code>constant_int</code> \u7684 value_kind \u662f <code>SV_ConstantInt</code> \u56e0\u6b64\u8fd4\u56de false.</p> <p>\u540c\u7406\uff0c\u5bf9\u4e8e <code>as</code> \u6a21\u677f\uff0c<code>if (ConstantInt *inner = constant_int-&gt;as&lt;ConstantInt *&gt;()) { ... }</code> \u5b9e\u9645\u4e0a\u505a\u7684\u662f\uff1a</p> <pre><code>// `std::remove_pointer_t&lt;ConstantInt *&gt;` gets `ConstantInt`\nif (constant_int-&gt;value_kind == ConstantInt::this_kind) {\n    // safe cast, or ...\n    return (ConstantInt *)(this);\n} else {\n    // return nullptr as failure\n    return nullptr;\n}\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c <code>is</code> \u68c0\u67e5\u901a\u8fc7\u4e86\uff0c\u5c31\u80fd\u5b89\u5168\u5730 cast \u5230\u5bf9\u5e94\u7684\u5b50\u7c7b\u578b\uff0c\u5426\u5219\u8fd4\u56de nullptr. \u8fd4\u56de nullptr \u5f88\u5927\u7a0b\u5ea6\u4e0a\u65b9\u4fbf\u4e86\u4e0a\u9762\u8fd9\u79cd\u5728 if \u7684\u6761\u4ef6\u91cc\u9762\u5b9a\u4e49\u53d8\u91cf\u7684\u8bed\u6cd5\uff0c\u5982\u679c\u662f\u6b63\u786e\u7684\u7c7b\u578b\uff0c\u5c31\u4f1a\u8fdb\u5165 if \u7684\u771f\u5206\u652f\uff1b\u5426\u5219\u8fd4\u56de nullptr \u5c31\u4e0d\u4f1a\u8fdb\u5165 if \u771f\u5206\u652f.</p> <p>\u6ce8\u610f: <code>std::remove_pointer_t</code> \u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u901a\u5e38\u4f1a\u548c <code>Value *</code> \u7c7b\u578b\u6253\u4ea4\u9053\uff0c\u800c\u4e0d\u662f <code>Value</code> \u672c\u8eab. \u4f60\u4f1a\u53d1\u73b0 <code>is</code> \u4f7f\u7528\u7684\u6a21\u677f\u53c2\u6570\u662f Value \u7684\u5b50\u7c7b\u578b\u672c\u8eab\uff0c\u800c <code>as</code> \u901a\u5e38\u7528\u7684\u662f Value \u5b50\u7c7b\u578b\u7684\u6307\u9488.</p> <p>\u5b8c\u6210\u4e86\u4e0a\u8ff0\u57fa\u7840\u8bbe\u65bd\u4e4b\u540e\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u770b\u600e\u4e48\u5904\u7406\u4e0d\u540c\u7684 Value \u7c7b\u578b\uff0c\u8003\u8651 print \u64cd\u4f5c\uff1a</p> <ul> <li> <p>\u4e00\u662f C \u98ce\u683c\u7684 switch \u5206\u53d1\uff1a</p> IRPrinter.cpp<pre><code>void printValue(Value *V) {\n    switch (V-&gt;value_kind) {\n#define ValueTypeDefine(type) \\\n    case x: print##type(V);   \\\n            break;\n#include \"Common.def\"\n    default:\n        /* ... */\n    }\n}\n\n\n// Individual function for each value kind.\nvoid printSV_ConstantInt(Value *V) { /* ... */ }\nvoid printSV_BinaryExpr(Value *V) { /* ... */ }\n</code></pre> </li> <li> <p>\u4e00\u662f\u7528\u4e0a\u9762\u7684 \"if + as\" \u7ed3\u6784\uff1a</p> IRPrinter.cpp<pre><code>void printValue(Value *V) {\n    if (auto *C = V-&gt;as&lt;ConstantInt *&gt;()) {\n        C-&gt;foo();\n    }\n\n    if (auto *B = V-&gt;as&lt;BinaryExpr *&gt;()) {\n        B-&gt;bar();\n    }\n\n    /* ... */\n}\n</code></pre> </li> </ul> </li> </ul> <p>ML \u7cfb\u8bed\u8a00\u4ee5\u53ca Rust \u90fd\u652f\u6301\u4ee3\u6570\u6570\u636e\u7c7b\u578b (Algebraic Data Type)\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5b9a\u4e49\uff1a</p> <pre><code>type ValueKinds = ConstantInt of int\n    | ConstantUnit\n    | BinaryExpr of BinOp * Value * Value\n    | FunctionCall of Function * Value list\n    | Load of Value\n    | Store of Value * Value\nand\ntype Value = Type * ValueKinds\n</code></pre> <p>\u90fd\u76f4\u63a5 ADT \u4e86\uff0cpattern match \u5427...</p> <p>\u7136\u540e\u6211\u4eec\u5b9a\u4e49 <code>translate_expr</code> \u51fd\u6570\uff1a</p> <pre><code>translate_expr(expr, symbol_table, current_bb) -&gt; value\n</code></pre> <p>\u5176\u4e2d <code>symbol_table</code> \u662f\u7b26\u53f7\u8868\uff0c\u7ef4\u62a4\u4e00\u4e2a <code>string -&gt; value</code> \u7684\u6620\u5c04\uff0c\u867d\u7136\u5728\u7c7b\u4f3c SSA \u7684\u5f62\u5f0f\u4e0b\uff0c\u53d8\u91cf\u7684\u540d\u5b57\u5e76\u4e0d\u91cd\u8981\uff0c\u4f46\u662f\u5728\u5904\u7406\u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u6211\u4eec\u8981\u6bcf\u4e2a\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u4e00\u4e2a\u6808\u4e0a\u7684\u5730\u5740\uff0c\u4e3a\u6b64\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u53d8\u91cf\u540d\u5b57\u5230\u5bf9\u5e94 alloca \u6307\u4ee4\u7684\u6620\u5c04. \u5bf9\u4e8e\u91cd\u590d\u547d\u540d\u7684\u53d8\u91cf\uff0c\u5982\u5728\u4e00\u4e2a\u8bed\u53e5\u5757\u91cc\u5b9a\u4e49\u7684\u53d8\u91cf\u548c\u5916\u5c42\u7684\u53d8\u91cf\u91cd\u540d\u65f6\uff0c\u8bf7\u4f60\u81ea\u884c\u5904\u7406.</p> <p>\u7531\u4e8e <code>translate_expr</code> \u53ea\u662f\u7ffb\u8bd1\u8868\u8fbe\u5f0f\uff0c\u6ca1\u6709\u4efb\u4f55\u63a7\u5236\u6d41\u8f6c\u79fb\uff0c\u56e0\u6b64\u53ea\u4f1a\u751f\u6210\u7ebf\u6027\u7684\u6307\u4ee4\u6d41\uff0c\u56e0\u6b64\u8003\u8651\u4f20\u5165\u57fa\u672c\u5757\u4fe1\u606f <code>current_bb</code>\uff0c\u8868\u793a\u5f53\u524d\u63a7\u5236\u6d41\u5728 <code>current_bb</code> \u8fd9\u4e2a\u57fa\u672c\u5757\uff0c\u7ffb\u8bd1\u5f97\u5230\u7684\u6307\u4ee4\u5e8f\u5217\u5e94\u5f53\u63d2\u5165\u6b64\u5904.</p> <p>\u9762\u5bf9\u5f62\u5982 <code>expr1 + expr2</code> \u8fd9\u6837\u7684\u4e8c\u5143\u8868\u8fbe\u5f0f\uff08\u4e0b\u6587\u8bb0\u4f5c <code>expr0</code>\uff09\uff0c\u8c03\u7528 <code>translate_expr(expr0, sym_table, current_bb)</code> \u8fdb\u884c\u7ffb\u8bd1. \u6211\u4eec\u9012\u5f52\u8c03\u7528\u4e24\u4e2a\u5b50\u8282\u70b9\u7684 <code>translate_expr</code>\uff0c\u7136\u540e\u751f\u6210\u4e00\u6761\u52a0\u6cd5\u6307\u4ee4\u5c06\u4ed6\u4eec\u52a0\u8d77\u6765\uff0c\u6700\u540e <code>result_value</code> \u5c06\u4f5c\u4e3a\u6700\u540e\u7684\u8fd4\u56de\u503c\uff1a</p> <pre><code>lhs_value = translate_expr(expr1, sym_table, current_bb)\nrhs_value = translate_expr(expr2, sym_table, current_bb)\nresult_value = create_binary(addop, lhs_value, rhs_value, current_bb)\nreturn result_value\n</code></pre> <p>\u4e0a\u9762\u751f\u6210\u7684\u6307\u4ee4\u5728 IR \u4e2d\u770b\u8d77\u6765\u53ef\u80fd\u50cf\u8fd9\u6837\uff0c\u5176\u4e2d <code>%2</code> \u662f <code>translate_expr(expr0, sym_table, current_bb)</code> \u6700\u540e\u7684\u8fd4\u56de\u503c\uff1a</p> <pre><code>// lhs value, anonymous\nlet %0 = .....\n// rhs value, anonymous\nlet %1 = .....\n/// result value, anonymous\nlet %2 = add %0, %1\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u8868\u8fbe\u5f0f\u7684\u7ffb\u8bd1\u89c4\u5219\u603b\u7ed3\u5982\u4e0b\uff1a</p> Expr Action <code>INT</code> <pre><code>number = get_number(INT);\nreturn create_constant_int32(number);</code></pre> <code>ID</code> <pre><code>addr_of_value = lookup(sym_table, ID);`\nreturn create_load(addr_of_value, current_bb);</code></pre> <code>Expr1 BinOp Expr2</code> <pre><code>binop = get_binop(BinOp);\nexpr1_value = translate_expr(expr1, sym_table, current_bb);\nexpr2_value = translate_expr(expr2, sym_table, current_bb);\nreturn create_binary(binop, expr1_value, expr2_value, current_bb);</code></pre> <code>MINUS Expr1</code> <pre><code>zero_value = create_constant_int32(0);\nexpr1_value = translate_expr(Expr1, sym_table, current_bb);\nreturn create_binary(subop, zero_value, expr1_value, current_bb);</code></pre> <code>Call ID, Args</code> <pre><code>function = lookup(sym_table, ID);\nargs_list = [];\nfor arg in Args:\n  args_list += translate_expr(arg, sym_table, current_bb);\nreturn create_function_call(function, args_list, current_bb);</code></pre> <code>ID[Idx1]...[IdxN]</code> <pre><code>// element type\narray_type = lookup_var_type(sym_table, ID);\nelem_type = get_elem_type(array_type);\n// address of the first element in the array,\n// which is actually the stack address represented\n// by a 'alloca' instruction or a global variable.\naddr_value = lookup(sym_table, ID);\n// indices\nindices = [];\nfor idx in Idx1..IdxN:\n  indices += translate_expr(idx, sym_table, current_bb);\n// bounds\nbounds = get_bounds(array_type);\n\nreturn create_load(create_offset(\n  elem_type,\n  addr_value,\n  indices,\n  bounds\n));\n\n\n\n\n<p>\u5176\u4e2d <code>create_load</code> <code>create_binary</code> <code>create_function_call</code> \u7b49\u662f\u751f\u6210\u6307\u4ee4\u7684\u63a5\u53e3\uff0c\u5b83\u4eec\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u57fa\u672c\u5757 <code>current_block</code>\uff0c\u8868\u793a\u6307\u4ee4\u5728\u57fa\u672c\u5757 <code>current_block</code> \u4e2d\u63d2\u5165\uff0c\u7531\u4e8e\u57fa\u672c\u5757\u4e2d\u6307\u4ee4\u662f\u7ebf\u6027\u7684\uff0c\u4f60\u53ef\u4ee5\u5728\u57fa\u672c\u5757\u4e2d\u7ef4\u62a4\u4e00\u4e2a <code>vector</code>\uff0c\u5728\u672b\u7aef\u4e0d\u65ad\u52a0\u5165\u6307\u4ee4\u5373\u53ef\uff0c\u7c7b\u4f3c\u4e8e\uff1a</p>\n<pre><code>void insert_instruction(Instruction *inst, BasicBlock *block) {\n    std::vector&lt;Instruction *&gt; &amp;instrs = block.getInstrs();\n    instrs.push_back(inst);\n}\n</code></pre>\n\n\u6570\u636e\u7ed3\u6784\u5bf9 IR \u7684\u5f71\u54cd\n<p>\u4f7f\u7528\u7c7b\u4f3c\u6570\u7ec4\u7684\u6570\u636e\u7ed3\u6784\u5b58\u653e\u6307\u4ee4\u5e8f\u5217\uff0c\u80fd\u591f\u63d0\u9ad8 cache \u7684\u547d\u4e2d\u7387\uff0c\u8fd9\u6837\u904d\u5386\u6307\u4ee4\u5c31\u4f1a\u5f88\u5feb.\n\u8fd9\u79cd\u5b9e\u73b0\u8db3\u591f\u7b80\u5355\uff0c\u4e5f\u8db3\u591f\u4f60\u5b8c\u6210\u672c\u8bfe\u7a0b\u7684\u5b9e\u9a8c\u7684\u57fa\u7840\u90e8\u5206\u4e86.</p>\n<p>\u4f46\u662f\uff0c\u5982\u679c\u8fdb\u884c\u4e2d\u7aef\u7684\u76ee\u6807\u65e0\u5173\u4ee3\u7801\u4f18\u5316\uff0c\u90a3\u4e48\u9700\u8981\u9891\u7e41\u5730\u5220\u9664\u67d0\u4e9b\u6307\u4ee4\uff0c\u5728\u4e2d\u95f4\u63d2\u5165\u67d0\u4e9b\u6307\u4ee4\uff0c\u6216\u8005\u5c06\u51e0\u6761\u6307\u4ee4\u66ff\u6362\u6210\u66f4\u9ad8\u6548\u7684\u6307\u4ee4\uff0c\u800c\u53cc\u7aef\u94fe\u8868\u76f8\u6bd4\u6570\u7ec4\u66f4\u5bb9\u6613\u5b9e\u73b0\u4e0a\u9762\u8fd9\u4e9b\u64cd\u4f5c. \u56e0\u6b64 LLVM \u4e2d\u4f7f\u7528\u53cc\u7aef\u94fe\u8868\u6765\u5b58\u653e\u6307\u4ee4\u5e8f\u5217\u2014\u2014\u751a\u81f3\u662f\u57fa\u672c\u5757\u5e8f\u5217.</p>\n<p>\u5373\u4fbf\u5982\u6b64\uff0c\u53cc\u7aef\u94fe\u8868\u7684\u8bbf\u95ee\u6548\u7387\u4ecd\u7136\u662f\u4e2a\u95ee\u9898\uff0c\u8fd9\u5728 JIT \u7f16\u8bd1\u5668\u4e2d\u662f\u4e00\u4e2a\u51cf\u5206\u9879. \u4e3a\u6b64\uff0c WebKit B3 JIT compiler \u5c31\u5c06\u540e\u7aef\u6a21\u5757\u4e2d\u539f\u6765\u7684 LLVM IR \u6362\u6210\u4e86\u65b0\u7684 B3 IR\uff0cB3 IR \u5c31\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\uff0c\u4e3a\u4e86\u6ee1\u8db3\u5728 B3 IR \u5c42\u7ea7\u4e0a\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u7684\u9700\u8981\uff0c\u7f16\u8bd1\u5668\u5f15\u5165\u4e86\u4e00\u4e2a <code>InsertionSet</code> \u6570\u636e\u7ed3\u6784.\n\u5b83\u8bb0\u5f55\u4f18\u5316 Pass \u4e2d\u6240\u6709\u7684\u53d8\u5316\uff0c\u5e76\u5728\u6700\u540e\u8fdb\u884c\u7edf\u4e00\u63d2\u5165\u66f4\u65b0\uff0c\u4ee5\u63d0\u9ad8\u6548\u7387.\n\u5982\u679c\u4f60\u5bf9\u6b64\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u9605\u8bfb WebKit Blog</p>\n\n<p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cExpr \u5bf9\u5e94\u7684\u662f\u53f3\u503c\uff0c\u4e5f\u5373\u5b9e\u9645\u7684\u503c\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u6761 load \u6307\u4ee4\uff1bLVal \u5bf9\u5e94\u7684\u662f\u5de6\u503c\uff0c\u4ee5\u67d0\u4e2a\u5730\u5740/\u6307\u9488\u7c7b\u578b\u7684 Value \u8868\u793a\uff0c\u4e0d\u9700\u8981\u4e00\u6761\u989d\u5916\u7684 load \u6307\u4ee4.</p>"},{"location":"middle-ir-gen/#_7","title":"\u8bed\u53e5\u751f\u6210","text":"<p>\u6211\u4eec\u5b9a\u4e49\uff1a</p>\n<pre><code>translate_stmt(stmt, symbol_table, current_bb) -&gt; exit_bb\n</code></pre>\n<p>\u7531\u4e8e\u8bed\u53e5\u5757\u53ef\u80fd\u5305\u542b\u63a7\u5236\u6d41\u7684\u8df3\u8f6c\uff0c\u800c\u4e14\u6574\u4e2a\u8bed\u53e5\u5757\u6574\u4f53\u5e76\u6ca1\u6709\u4ea7\u751f value\uff0c\u6211\u4eec\u8003\u8651 <code>translate_stmt</code> \u63a5\u53d7\u4e00\u4e2a\u57fa\u672c\u5757\u53c2\u6570 <code>current_bb</code>\uff0c\u8868\u793a\u5f53\u524d\u63a7\u5236\u6d41\u5728 <code>current_bb</code> \u6240\u8868\u793a\u7684\u57fa\u672c\u5757\u5904\uff1b\u8fd4\u56de\u4e00\u4e2a\u57fa\u672c\u5757 <code>exit_bb</code>\uff0c\u8868\u793a\u53c2\u6570 <code>stmt</code> \u7ffb\u8bd1\u7ed3\u675f\u540e\uff0c\u63a7\u5236\u6d41\u5c06\u5728 <code>exit_bb</code> \u6240\u8868\u793a\u7684\u57fa\u672c\u5757\u5904\u57fa\u672c\u5757\u7ee7\u7eed.\n\u5728\u51fa\u73b0\u63a7\u5236\u6d41\u5d4c\u5957\uff08\u4f8b\u5982 If \u5957 If \uff09\u7684\u60c5\u51b5\u4e0b\u53ef\u80fd\u66f4\u65b9\u4fbf\u4f60\u7684\u5904\u7406\u3002</p>\n<p>\u6761\u4ef6\u8bed\u53e5\u7684\u751f\u6210\u5219\u8981\u590d\u6742\u4e9b\uff0c\u6211\u4eec\u6240\u5b9a\u4e49\u7684\u57fa\u672c\u5757\u7ed3\u6784\u4e2d\u95f4\u5728\u8fd9\u91cc\u5c06\u53d1\u6325\u91cd\u8981\u4f5c\u7528.\n\u76f4\u89c9\u4e0a\u6765\u8bf4\uff0cIf \u8bed\u53e5\u5e94\u8be5\u751f\u6210\u5982\u4e0b\u7684\u4e2d\u95f4\u4ee3\u7801\uff1a\n<pre><code>if (exp) {\n    stmt1;\n} else {\n    stmt2;\n}\n\n    let %cond_value = translate_expr(cond)\n    br cond, label %true_label, label %false_label\n%true_label:\n    translate_stmt(stmt1)\n    jmp label %exit_label\n%false_label:\n    translate_stmt(stmt2)\n    jmp label %exit_label\n%exit_label:\n    ...\n</code></pre></p>\n<p><code>cond_value</code> \u4e3a\u771f\u65f6\u8df3\u8f6c\u5230 <code>%true_label</code>\uff0c\u4e3a\u5047\u65f6\u8df3\u8f6c\u5230 <code>%false_label</code>\uff0c\u6700\u540e\u4e24\u4e2a\u57fa\u672c\u5757\u7684\u63a7\u5236\u6d41\u5728 <code>%exit_label</code> \u5408\u5e76. \n\u800c\u8fd9\u4e5f\u5c31\u662f If \u8bed\u53e5\u7684\u5927\u81f4\u7ffb\u8bd1\u6d41\u7a0b\uff1a</p>\n<ul>\n<li>\u751f\u6210\u65b0\u7684\u57fa\u672c\u5757 <code>true_label</code>\uff0c<code>false_label</code> \u548c <code>exit_label</code>\uff0c\u5206\u522b\u7528\u4e8e\u6761\u4ef6\u4e3a\u771f\u65f6\u7684\u8df3\u8f6c\uff0c\u6761\u4ef6\u4e3a\u5047\u65f6\u7684\u8df3\u8f6c\uff0c\u63a7\u5236\u6d41\u7684\u5408\u5e76.</li>\n<li>\u8c03\u7528 <code>translate_expr</code> \u751f\u6210\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u4e2d\u95f4\u4ee3\u7801\uff0c\u4f20\u5165 <code>true_label</code> \u548c <code>false_label</code> \u4f5c\u4e3a\u6761\u4ef6\u4e3a\u771f\u65f6\u548c\u6761\u4ef6\u4e3a\u5047\u65f6\u7684\u8df3\u8f6c\u4f4d\u7f6e.</li>\n<li>\u800c\u5bf9\u4e8e\u5177\u4f53\u7684\u8bed\u53e5\uff0c\u53ea\u9700\u8981\u9012\u5f52\u8c03\u7528 <code>translate_stmt</code> \u5373\u53ef.</li>\n<li>\u628a <code>true_label</code> \u548c <code>false_label</code> \u7684\u7ec8\u7ed3\u6307\u4ee4 (Terminator) \u8bbe\u7f6e\u4e3a <code>jmp label %exit_label</code> \u5b8c\u6210\u63a7\u5236\u6d41\u5408\u5e76.</li>\n</ul>\n<p>\u6ce8\u610f\uff1a\u5f53\u4f60\u4e3a If \u8bed\u53e5\u63a7\u5236\u6d41\u751f\u6210 <code>true_label</code> \u7b49\u65b0\u7684\u57fa\u672c\u5757\u65f6\uff0c\u5e76\u4e0d\u610f\u5473\u8fd9 If \u8bed\u53e5\u7684\u771f\u5206\u652f\u7684\u8bed\u53e5\u5757\u8bed\u53e5\u5757 <code>Stmt</code> \u7ed3\u6784\u91cc\u7684\u6240\u6709\u5b50\u8bed\u53e5 <code>Stmt</code> \u7ed3\u6784\u90fd\u4f1a\u88ab\u7ffb\u8bd1\u5230 <code>true_label</code> \u57fa\u672c\u5757\u91cc.\n\u5f53\u51fa\u73b0\u63a7\u5236\u6d41\u5d4c\u5957\u65f6\uff08\u4f8b\u5982 If \u5957 While\uff0cIf \u5957 If \u7b49\uff09\uff0cIf \u8bed\u53e5\u7684\u771f\u5206\u652f\u5c31\u4e0d\u518d\u662f\u5355\u72ec\u4e00\u4e2a <code>true_label</code> \u57fa\u672c\u5757\u4e86\uff0c\u800c\u662f\u4e00\u4e2a\u4ee5 <code>true_label</code> \u57fa\u672c\u5757\u4e3a\u6e90\u70b9\u7684\u63a7\u5236\u6d41\u5b50\u56fe\uff0c\u4f60\u9700\u8981\u4ece If \u8bed\u53e5\u771f\u5206\u652f\u7ffb\u8bd1\u7ed3\u675f\u540e\u6240\u5728\u7684\u57fa\u672c\u5757\uff08\u4e5f\u5c31\u662f\u8fd9\u4e2a\u63a7\u5236\u6d41\u5b50\u56fe\u7684\u6c47\u70b9\uff09\u8df3\u8f6c\u5230 <code>exit_label</code>.\n\u8fd9\u4e5f\u662f\u6211\u4eec\u4e3a\u4ec0\u4e48\u5728 <code>translate_stmt</code> \u4e2d\u9009\u62e9\u8fd4\u56de\u4e00\u4e2a <code>exit_bb</code>\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u4f2a\u4ee3\u7801\u4e2d\u770b\u5230\u6211\u4eec\u662f\u5982\u4f55\u5229\u7528\u8fd9\u4e00\u70b9\u7684.</p>\n<p>\u5176\u4f59\u7c7b\u578b\u7684\u8bed\u53e5\u548c\u63a7\u5236\u6d41\u7ed3\u6784\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u4e0d\u518d\u4e00\u4e00\u8d58\u8ff0.\n\u6211\u4eec\u603b\u7ed3\u8bed\u53e5\u7ffb\u8bd1\u7684\u89c4\u5219\u5982\u4e0b\uff1a</p>\n\n\n\n\n\n\n\nExpr\nAction\n\n\n\n\n<code>VarDecl ID</code>\n<pre><code>entry_bb = get_function_entry_bb();\nvar_type = lookup_var_type(sym_table, ID);\n\nalloca_instr = create_alloca(var_type, 1, entry_bb);\nupdate(sym_table, ID, alloca_instr);\nreturn current_bb;</code></pre>\n\n\n<code>VarDecl ID[size]</code>\n<pre><code>entry_bb = get_function_entry_bb();\nvar_type = lookup_var_type(sym_table, ID);\n\nalloca_instr = create_alloca(var_type, size, entry_bb);\nupdate(sym_table, ID, alloca_instr);\nreturn current_bb;</code></pre>\n\n\n<code>Expr</code>\n<pre><code>translate_expr(expr, sym_table, current_bb);\nreturn current_bb;</code></pre>\n\n\n<code>ID = Expr</code>\n<pre><code>addr_value = lookup(sym_table, ID);\nresult_value = translate_expr(Expr, sym_table, current_bb);\ncreate_store(result_value, addr_value, current_bb);\nreturn current_bb;</code></pre>\n\n\n<code>If (Expr) Stmt</code>\n<pre><code>// new basic block\nexit_bb = new_label();\ntrue_bb = new_label();\n// calculate condition expr in current basic block.\ncond_value = translate_expr(Expr, sym_table, current_bb);\ncreate_branch(cond_value, true_bb, exit_bb, current_bb);\n// translate true branch\ntrue_exit_bb = translate_stmt(Stmt, sym_table, true_bb);\ncreate_jmp(exit_bb, true_exit_bb);\n\nreturn exit_bb;</code></pre>\n\n\n<code>If (Expr) Stmt1 Else Stmt2</code>\n<pre><code>exit_bb = new_label();\ntrue_bb = new_label();\nfalse_bb = new_label();\n\ncond_value = translate_expr(Expr, sym_table, current_bb);\ncreate_branch(cond, true_bb, false_bb, current_bb);\n\ntrue_exit_bb = translate_stmt(Stmt1, sym_table, true_bb);\ncreate_jmp(exit_bb, true_exit_bb);\n\nfalse_exit_bb = translate_stmt(Stmt2, sym_table, false_bb);\ncreate_jmp(exit_bb, false_exit_bb);\n\nreturn exit_bb;</code></pre>\n\n\n<code>While (Expr) Stmt</code>\n<pre><code>entry_bb = new_label()\nbody_bb = new_label()\nexit_bb = new_label()\n// entry block of While should be separated.\ncreate_jump(entry_bb, current_bb);\ncond_value = translate_expr(Expr, sym_table, entry_bb);\ncreate_branch(cond, body_bb, exit_bb, entry_bb);\n\nbody_exit_bb = translate_stmt(Stmt, sym_table, body_bb);\ncreate_jump(entry_bb, body_exit_bb);\n\nreturn exit_bb;</code></pre>\n\n\n<code>Return Expr</code>\n<pre><code>return_bb = get_function_ret_bb();\nreturn_addr = get_function_ret_value_addr();\n\nreturn_value = translate_expr(Expr, sym_table, current_bb);\n// store the value of Expr to the slot of return value on the stack.\ncreate_store(return_value, return_addr, current_bb);\n// jump to the return basic block\ncreate_jump(return_bb, current_bb);\n// the control flow ends with `Return`, so we can return a 'empty basic block'\nreturn nullptr;</code></pre>\n\n\n\n\n<p>\u4f60\u9700\u8981\u7279\u522b\u5173\u6ce8\u5c40\u90e8\u53d8\u91cf\u7684\u58f0\u660e\u548c\u8fd4\u56de\u8bed\u53e5\u3002</p>\n<p>\u5c40\u90e8\u53d8\u91cf\uff08\u5305\u62ec\u51fd\u6570\u53c2\u6570\uff09\u58f0\u660e\u8bed\u53e5\u9700\u8981\u7ffb\u8bd1\u6210 <code>alloca</code> \u6307\u4ee4\uff0c\u7528\u6765\u5c06\u5b83\u4eec\u653e\u5728\u6808\u7a7a\u95f4\u4e0a.\n\u4f60\u9700\u8981\u6ce8\u610f\uff0c\u6240\u6709\u7684 <code>alloca</code> \u6307\u4ee4\u90fd\u5e94\u8be5\u653e\u5728\u6574\u4e2a\u51fd\u6570\u5f00\u5934\u7684\u5165\u53e3\u57fa\u672c\u5757\u5185\uff0c\u800c\u4e0d\u662f\u5c40\u90e8\u53d8\u91cf\u58f0\u660e\u51fa\u73b0\u7684\u90a3\u4e2a\u8bed\u53e5\u5757\u5bf9\u5e94\u7684\u57fa\u672c\u5757.\n<code>alloca</code> \u6307\u4ee4\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u51fd\u6570\uff0c\u5982\u679c\u4f60\u201c\u539f\u5730\u7ffb\u8bd1\u201d\uff0c\u90a3\u4e48\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b While \u5faa\u73af\u5185\u58f0\u660e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u2014\u2014\u6bcf\u6b21\u5faa\u73af\u90fd\u5206\u914d\u6808\u7a7a\u95f4\uff0c\u5faa\u73af\u6b21\u6570\u4e00\u591a\u5c31\u7206\u6808\u4e86\u2014\u2014\u8fd9\u4e2a\u53d8\u91cf\u88ab\u53cd\u590d\u5206\u914d\u4e86\u65b0\u7684\u6808\u7a7a\u95f4.\n\u5176\u6b21\uff0c\u6b63\u5982\u4e0a\u6587 <code>translate_expr</code> \u63d0\u5230\u7684\uff0c\u4f60\u9700\u8981\u5373\u65f6\u66f4\u65b0\u7b26\u53f7\u8868 <code>sym_table</code>.</p>\n<p>\u8fd4\u56de\u8bed\u53e5\u5e76\u4e0d\u662f\u76f4\u63a5\u63d2\u5165 <code>ret</code> \u6307\u4ee4\u90a3\u4e48\u7b80\u5355\uff0c\u5728\u5e95\u5c42\u6c47\u7f16\u4e2d\uff0creturn \u901a\u5e38\u5728\u51fd\u6570\u7ed3\u5c3e\uff0c\u9664\u4e86\u6839\u636e ABI \u5c06\u8fd4\u56de\u503c\u8d4b\u7ed9\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\uff0c\u4f60\u8fd8\u9700\u8981\u6e05\u7406\u6808\u5e27\uff08\u6062\u590d\u6808\u6307\u9488\uff0c\u5e27\u6307\u9488\uff0c\u6062\u590d callee saved register \u7b49\uff09.\n\u56e0\u6b64\u76f4\u63a5\u539f\u5730\u7ffb\u8bd1 return \u662f\u4e0d\u5408\u9002\u7684\uff0c\u4e3a\u4e86\u4f60\u540e\u7aef\u80fd\u591f\u8212\u9002\u4e00\u4e9b\uff0c\u4f60\u5e94\u5f53\u5728\u51fd\u6570\u5165\u53e3\u4e3a\u8fd4\u56de\u503c\u5b89\u6392\u4e00\u5757\u6808\u7a7a\u95f4 <code>%ret.addr</code>\uff0c\u5e76\u5728\u51fd\u6570\u672b\u5c3e\u5355\u72ec\u6dfb\u52a0\u4e00\u4e2a <code>%return_bb</code>.\n\u51fd\u6570\u4f53\u4e2d\u9047\u5230\u7684 \u201cearly return\u201d \u5e94\u5f53\u6309\u5982\u4e0b\u7ffb\u8bd1\uff1a</p>\n<ul>\n<li>\u5c06\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5b58\u5165 <code>%ret.addr</code></li>\n<li>\u8df3\u8f6c\u5230 <code>%return_bb</code> \u5904\uff0c\u540c\u65f6\u4f60\u4e0d\u5e94\u8be5\u518d\u63d2\u5165\u522b\u7684\u8df3\u8f6c\u8bed\u53e5\uff0c\u7279\u522b\u5f53 return \u4f4d\u4e8e\u7ed3\u6784\u5316\u63a7\u5236\u6d41 If \u548c While \u5185\u90e8\u65f6</li>\n</ul>\n<p>\u5bf9\u4e8e <code>%return_bb</code>\uff0c\u4f60\u5e94\u5f53\uff1a</p>\n<ul>\n<li>\u4ece <code>%ret.addr</code> \u8bfb\u51fa\u51fd\u6570\u8fd4\u56de\u503c</li>\n<li>\u63d2\u5165\u771f\u6b63\u7684 <code>ret</code> \u6307\u4ee4</li>\n</ul>"},{"location":"middle-ir-gen/#_8","title":"\u77ed\u8def","text":"<p>\u77ed\u8def\uff08shortcut\uff09\u662f\u6307\u5728\u903b\u8f91\u8fde\u8bcd\u4e2d\u4e00\u90e8\u5206\u5b50\u8868\u793a\u5f0f\u8ba1\u7b97\u88ab\u201c\u8df3\u8fc7\u201d\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\uff1a</p>\n<ul>\n<li><code>1 &gt; 2 &amp;&amp; call_foo()</code> \u7531\u4e8e\u4e0e\u8fd0\u7b97\u5de6\u4fa7\u7684 <code>1 &gt; 2</code> \u4e3a\u5047\uff08\u5373 0\uff09\uff0c\u90a3\u4e48\u53f3\u4fa7\u7684\u8868\u8fbe\u5f0f\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u5373 <code>call_foo()</code> \u88ab\u201c\u8df3\u8fc7\u201d\uff0c\u6574\u4e2a\u8868\u8fbe\u5f0f\u8fd4\u56de 0.</li>\n<li><code>1 &lt; 2 || call_bar()</code> \u7531\u4e8e\u6216\u8fd0\u7b97\u5de6\u4fa7\u7684 <code>1 &lt; 2</code>\u4e3a\u771f\uff08\u5373 1\uff09\uff0c\u90a3\u4e48\u53f3\u4fa7\u7684\u8868\u8fbe\u5f0f\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u5373 <code>call_bar()</code> \u88ab\u201c\u8df3\u8fc7\u201d\uff0c\u6574\u4e2a\u8868\u8fbe\u5f0f\u8fd4\u56de 1.</li>\n<li>\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u5bf9\u4e8e\u7c7b\u4f3c <code>1 &gt; 2 &amp;&amp; 3 &gt; 4 &amp;&amp; call_foo()</code> \u7b49\u8fde\u7eed\u8fde\u8bcd\u7684\u60c5\u51b5\uff0c\u5728 AST \u4e0a\u4e3a <code>(1 &gt; 2 &amp;&amp; 3 &gt; 4) &amp;&amp; call_foo()</code>\uff0c\u7531\u4e8e <code>1 &gt; 2</code> \u4e3a\u5047\uff0c\u56e0\u6b64 <code>3 &gt; 4</code> \u4f1a\u88ab\u201c\u8df3\u8fc7\u201d\uff0c\u56e0\u6b64\u5de6\u4fa7 <code>(1 &gt; 2 &amp;&amp; 3 &gt; 4)</code> \u4e3a 0\uff0c\u8fdb\u4e00\u6b65\u53f3\u4fa7 <code>call_foo()</code> \u88ab\u201c\u8df3\u8fc7\u201d.  </li>\n</ul>\n<p>\u7eaf\u7b97\u672f\u8868\u8fbe\u5f0f\u8ba1\u7b97\u88ab\u77ed\u8def\u5bf9\u7ed3\u679c\u5e76\u4e0d\u4f1a\u6709\u4ec0\u4e48\u5f71\u54cd\uff0c\u4f46\u662f\u5982\u679c\u8868\u8fbe\u5f0f\u6709\u526f\u4f5c\u7528\uff08\u4f8b\u5982\uff0c\u8003\u8651\u4e0a\u6587\u4e2d\u7684\u51fd\u6570\u8c03\u7528 <code>call_bar()</code> \u4f1a\u8f93\u51fa\u4e00\u4e9b\u5185\u5bb9\uff09\uff0c\u5c31\u4f1a\u4ea7\u751f\u8bed\u4e49\u4e0a\u7684\u533a\u522b\u3002</p>\n<p>\u7b80\u8a00\u4e4b\uff0c\u77ed\u8def\u8bed\u4e49\u7684\u7ed3\u679c\u662f\uff0c\u5728 If \u548c While \u7b49\u8bed\u53e5\u7684\u6761\u4ef6\u5224\u65ad\u4e2d\uff0c\u5e76\u4e0d\u662f\u5148\u7b97\u597d\u6574\u4e2a\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u518d\u8df3\u8f6c\uff0c\u800c\u662f\u5148\u7b97\u5de6\u4fa7\uff0c\u8fdb\u884c\u5224\u65ad\uff1a\u6216\u8005\u77ed\u8def\uff0c\u76f4\u63a5\u8df3\u8f6c\uff1b\u6216\u8005\u8fdb\u884c\u53f3\u4fa7\u8ba1\u7b97\uff0c\u518d\u8df3\u8f6c\u3002\n\u76f8\u6bd4\u4e0a\u4e00\u5c0f\u8282\u5e73\u51e1\u7684 If \u548c While \u8bed\u53e5\u7ffb\u8bd1\uff0c\u4f60\u9700\u8981\u5c55\u5f00\u8bed\u53e5\uff0c\u63d2\u5165\u8f85\u52a9\u7684\u57fa\u672c\u5757\u6765\u7ffb\u8bd1\u63a7\u5236\u6d41\u4fe1\u606f\uff0c\u4f8b\u5982\uff0c\u4e0b\u4e3a\u6761\u4ef6\u4e3a <code>&amp;&amp;</code> \u8868\u8fbe\u5f0f\u7684 If \u8bed\u53e5\u63a7\u5236\u6d41\u56fe\uff1a</p>\n<p></p>\n<p>\u5176\u4ed6\u60c5\u51b5\u4e0e\u4e4b\u7c7b\u4f3c\uff0c\u6211\u4eec\u4e0d\u518d\u8d58\u8ff0\uff0c\u7ffb\u8bd1\u89c4\u5219\u7565.</p>\n\n<p>\u6ce8\u610f</p>\n<p>C \u7684\u8d4b\u503c\u8bed\u53e5\u4e5f\u6709\u77ed\u8def\u8bed\u4e49\uff0c\u4f8b\u5982 <code>int a = 2 &lt; 1 &amp;&amp; 3 &gt; 4</code>.\n\u8fd9\u5f15\u8d77\u7684\u7ed3\u679c\u662f Expr \u4e5f\u53ef\u80fd\u4ea7\u751f\u63a7\u5236\u6d41\u8f6c\u79fb\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u4e0d\u4f1a\u6d4b\u8bd5\u6b64\u7c7b\u77ed\u8def\u60c5\u51b5\uff0c\u4f46\u662f\u4f60\u6709\u5174\u8da3\u53ef\u4ee5\u5b9e\u73b0.</p>"},{"location":"middle-ir-gen/#_9","title":"\u89e3\u91ca\u5668","text":"<p>\u4e3a\u4e86\u68c0\u6d4b\u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u6b63\u786e\u6027\u548c\u8bc4\u6d4b\uff0c\u6211\u4eec\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8be5\u4e2d\u95f4\u8868\u793a\u7684\u89e3\u91ca\u5668\u3002</p>\n\n<p>\u5c3d\u7ba1\u6211\u4eec\u5bf9\u4e8e\u89e3\u91ca\u5668\u7684\u4ee3\u7801\u6709\u8fc7\u4e00\u4e9b\u6d4b\u8bd5\uff0c\u4f46\u9762\u5bf9\u5927\u5bb6\u4f7f\u7528\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u5f88\u96be\u4fdd\u8bc1\u6ca1\u6709\u65b0\u7684\u95ee\u9898\u3002\u5982\u679c\u4f60\u53d1\u73b0\u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801\u4e0d\u80fd\u88ab\u6b63\u786e\u7684\u6267\u884c\uff0c\u8bf7\u53ca\u65f6\u8054\u7cfb\u52a9\u6559</p>"},{"location":"middle-ir-gen/#_10","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<pre><code>Usage: accipit [OPTIONS] &lt;FILE&gt; [ARGS]...\n\nArguments:\n  &lt;FILE&gt;     Specify the input file\n  [ARGS]...  Specify the argument passes to the entry function\n\nOptions:\n  -o, --output &lt;OUTPUT&gt;  Specify the output file (unused option)\n      --dump-module      Dump parsed module, producing explicit type annotation and different symbol prefix\n  -e, --entry &lt;ENTRY&gt;    Specify the certain function as the entry function [default: main]\n  -h, --help             Print help\n  -V, --version          Print version\n</code></pre>\n<p>\u89e3\u91ca\u5668\u652f\u6301\u76f4\u63a5\u8c03\u7528\u67d0\u4e2a\u51fd\u6570\uff0c\u5e76\u5728\u547d\u4ee4\u884c\u5185\u4f20\u5165\u51fd\u6570\u53c2\u6570\uff1a</p>\n<pre><code>$ accipit examples/factorial.acc --entry factorial 10\n...\n3628800\n</code></pre>\n<p>\u5982\u679c\u4e0d\u6307\u5b9a\u8c03\u7528\u67d0\u4e2a\u51fd\u6570\uff0c\u5219\u9ed8\u8ba4\u4ece <code>main</code> \u5f00\u59cb\uff0c\u4ece stdin/stdout \u8f93\u5165\u8f93\u51fa\uff1a</p>\n<pre><code>$ accipit examples/factorial.acc\n...\n# `getint` waiting for input\n10\n# `putint` print result\n3628800\n</code></pre>"},{"location":"middle-ir-gen/#_11","title":"\u4f60\u7684\u4efb\u52a1","text":"<p>\u5728\u5b9e\u73b0 lexer \u548c parser \u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u8bed\u6cd5\u6811\u8f6c\u6362\u4e3a\u4e2d\u95f4\u4ee3\u7801\uff0c\u6982\u8981\u5730\u8bf4\uff1a</p>\n<ul>\n<li>\u4ece\u524d\u7aef SysY \u7684\u7c7b\u578b\u7ffb\u8bd1\u5230 Accipit IR \u7684\u7c7b\u578b. Accipit IR \u662f\u4e00\u4e2a\u201c\u5f3a\u7c7b\u578b\u201d\u7684\u4e2d\u95f4\u8868\u793a\uff0c\u4e14\u548c\u524d\u7aef SysY \u7684\u7c7b\u578b\u6709\u6240\u533a\u522b.</li>\n<li>\u5b9e\u73b0\u7b26\u53f7\u8868 <code>sym_table</code> \u7ba1\u7406\uff0c\u9700\u8981\u6ce8\u610f\u6b64\u5904\u7684\u7b26\u53f7\u8868\u548c\u8bed\u4e49\u5206\u6790\u7684\u4efb\u52a1\u4e0d\u540c.</li>\n<li>\u5b9e\u73b0\u7ffb\u8bd1\u51fd\u6570 <code>translate_expr</code> \u548c <code>translate_stmt</code> \u7684\u529f\u80fd\uff0c\u5373\u4ece\u524d\u7aef\u7684\u4e00\u68f5 <code>Node</code> \u7c7b\u578b\u7684\u8bed\u6cd5\u6811\uff0c\u8f6c\u6362\u5230 <code>Module</code>-<code>Function</code>-<code>BasicBlock</code>-<code>Instruction</code> \u7684 Accipit IR \u5c42\u7ea7\u7ed3\u6784.</li>\n<li>\u5b9e\u73b0\u5728\u7ed3\u6784\u5316\u63a7\u5236\u6d41 If \u548c While \u4e2d\u6761\u4ef6\u8868\u8fbe\u5f0f\u77ed\u8def\u8bed\u4e49\u7684\u7ffb\u8bd1.</li>\n</ul>\n<p>\u4f60\u7684\u7f16\u8bd1\u5668\u5fc5\u987b\u652f\u6301\u4e24\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u60c5\u5f62, \u5373\uff1a</p>\n<pre><code>./compiler &lt;input_file&gt; &lt;output_file&gt;\n</code></pre>\n<p>\u8be5\u7a0b\u5e8f\u5fc5\u987b\u63a5\u53d7\u4e00\u4e2a\u8f93\u5165\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u540d\u3001 \u4e00\u4e2a\u8f93\u51fa\u7684 IR \u6587\u672c\u6587\u4ef6\u540d\u4f5c\u4e3a\u53c2\u6570\uff0c\u6211\u4eec\u53ea\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u6d4b\u8bd5\u4f60\u7684\u7f16\u8bd1\u5668. </p>"},{"location":"middle-ir-gen/#_12","title":"\u6d4b\u8bd5","text":"<p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u6d4b\u8bd5\u4f60\u7684\u7f16\u8bd1\u5668\uff1a</p>\n<pre><code>python3 test.py ./compiler lab3\n</code></pre>\n<ul>\n<li><code>--executor_path=&lt;path&gt;</code> \u6307\u5b9a\u89e3\u91ca\u5668\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a <code>../target/debug/accipit</code></li>\n<li><code>--local</code> \u6307\u5b9a\u5c06\u6d4b\u8bd5\u6837\u4f8b\u751f\u6210\u7684 IR \u6587\u672c\u751f\u6210\u5728\u5f53\u524d\u76ee\u5f55\u7684\u5b50\u76ee\u5f55 <code>ir/</code> \u4e0b </li>\n</ul>"},{"location":"middle-ir-gen/#c","title":"C++ \u6a21\u677f\u4ee3\u7801\u8bf4\u660e","text":"<p>\u8bf7\u4ece ZJU Git \u5904\u83b7\u53d6\u6a21\u677f\u4ee3\u7801\uff0c\u5e76\u9605\u8bfb\u76f8\u5173\u8bf4\u660e.\n\u6a21\u677f\u4ee3\u7801\u5df2\u7ecf\u5b9e\u73b0\u4e86 IR \u7684\u6784\u9020\u548c\u8f93\u51fa\u5230\u5b57\u7b26\u4e32\u6587\u672c\u683c\u5f0f\u7684\u63a5\u53e3\uff0c\u4f60\u53ea\u9700\u5173\u5fc3\u7ffb\u8bd1\u5230 IR \u7684\u8fc7\u7a0b\u5373\u53ef.</p>"},{"location":"middle-ir-gen/#utils","title":"Utils","text":"<p>\u5728 <code>utils</code> \u4e0b\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u4fb5\u5165\u5f0f\u94fe\u8868 <code>List&lt;T&gt;</code>\uff08\u4f4d\u4e8e list.h\uff09\u548c\u524d\u8ff0\u57fa\u4e8e\u6a21\u677f\u7684 RTTI \uff08\u4f4d\u4e8e casting.h\uff09</p>\n<p>\u5bf9\u4e8e <code>List&lt;T&gt;</code> \u4f60\u901a\u5e38\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528\u5230\uff0c\u4e00\u822c\u53ea\u4f5c\u4e3a\u5e95\u5c42\u5b58\u653e IR \u7684\u6570\u636e\u7ed3\u6784.</p>\n<p>\u5bf9\u4e8e RTTI\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86 <code>isa&lt;T&gt;()</code> <code>dyn_cast&lt;T&gt;()</code> \u548c <code>cast&lt;T&gt;()</code> \u4e09\u4e2a\u51fd\u6570\uff1a</p>\n<ul>\n<li><code>isa&lt;To&gt;(Val)</code>\uff1a\u8fd4\u56de <code>Val</code> \u662f\u5426\u4e3a To \u7c7b\u578b</li>\n<li><code>dyn_cast&lt;To&gt;(Val)</code>\uff1a\u5982\u679c <code>Val</code> \u4e3a To \u7c7b\u578b\uff0c\u5219\u8fdb\u884c cast\uff0c\u5426\u5219\u8fd4\u56de nullptr</li>\n<li><code>cast&lt;To&gt;(Val)</code>\uff1a \u5982\u679c <code>Val</code> \u4e3a To \u7c7b\u578b\uff0c\u5219\u8fdb\u884c cast\uff0c\u5426\u5219\u62a5\u9519</li>\n</ul>\n<p>\u4e0a\u8ff0\u4e09\u4e2a\u51fd\u6570\u4f7f\u7528\u6a21\u677f\u5e76\u8fdb\u884c\u4e86\u504f\u7279\u5316\uff0c\u56e0\u6b64\u76f8\u6bd4\u4e0a\u8ff0\u7684 <code>is</code> \u548c <code>as</code> \u9002\u7528\u6027\u66f4\u597d\uff0c\u80fd\u591f\u5904\u7406 <code>From &amp;Val</code>\u3001<code>From *Val</code>\u3001<code>const From *Val</code> \u548c <code>const From *const Val</code> \u7b49\u60c5\u51b5\uff0c\u5e76\u7b97\u51fa\u5408\u9002\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u6a21\u677f\u7c7b\u578b\u53c2\u6570 To \u4e0d\u5fc5\u987b\u662f\u6307\u9488\u7c7b\u578b</p>"},{"location":"middle-ir-gen/#type","title":"Type \u7c7b","text":"<p>\u8868\u793a Accipit IR \u4e2d\u7684\u5404\u7c7b Type\uff0c\u5305\u62ec\u57fa\u7c7b <code>Type</code> \u3001\u6d3e\u751f\u7c7b <code>PointerType</code> \u548c <code>FunctionType</code>.\n\u5b9a\u4e49\u4e8e type.h</p>\n<p>\u4f60\u53ea\u80fd\u4f7f\u7528\u9759\u6001\u6210\u5458\u51fd\u6570\u83b7\u5f97 <code>Type *</code> \u7c7b\u578b\u7684\u503c\uff1a</p>\ntype.h<pre><code>class Type {\n    //...\n    static Type *getPrimitiveTy(unsigned tid);\n    static Type *getIntegerTy();\n    static Type *getUnitTy();\n};\n\nclass PointerType {\n    //...\n    static PointerType *get(Type *ElementType);\n};\n\nclass FunctionType {\n    //...\n    static FunctionType *get(Type *Result, const std::vector&lt;Type *&gt; &amp;Params);\n    //... \n    static FunctionType *get(Type *Result);\n};\n</code></pre>\n<p>\u6211\u4eec\u5bf9\u9664 <code>FunctionType</code> \u4ee5\u5916\u7684\u7c7b\u8fdb\u884c\u4e86\u7f13\u5b58\uff0c\u56e0\u6b64\u4f60\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4ee5\u6307\u9488\u6bd4\u8f83\u7684\u65b9\u5f0f\u6bd4\u8f83\u4e24\u4e2a <code>Type</code> \u662f\u5426\u76f8\u540c\uff1a</p>\n<pre><code>assert(Type::getUnitTy() == Type::getUnitTy() &amp;&amp; \"Type * should be the same\")\n</code></pre>"},{"location":"middle-ir-gen/#value","title":"Value \u7c7b","text":"<p><code>Value</code> \u7c7b\u5b9a\u4e49\u4e8e ir.h.\n\u7c7b\u7ee7\u627f\u5173\u7cfb\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p>\n<p></p>\n<p>\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8ff0\uff0c<code>Value</code> \u7c7b\u5305\u542b\u7b26\u53f7\u548c\u5e38\u6570\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u6d89\u53ca\uff1a</p>\n<ul>\n<li>\u5e38\u6570\u7684\u57fa\u7c7b <code>Constant</code> \u4ee5\u53ca\u6d3e\u751f\u7c7b <code>ConstantInt</code> \u4e0e <code>ConstantUnit</code></li>\n<li>\u6307\u4ee4\u57fa\u7c7b <code>Instruction</code>\uff0c\u6bcf\u79cd\u6307\u4ee4\u90fd\u6709\u5176\u5bf9\u5e94\u7684\u6d3e\u751f\u7c7b\uff0c\u4f8b\u5982 <code>BinaryInst</code> \u548c <code>AllocaInst</code>.</li>\n<li>\u5168\u5c40\u53d8\u91cf <code>GlobalVariable</code> \u548c\u51fd\u6570\u53c2\u6570 <code>Argument</code></li>\n</ul>\n<p>\u51e0\u4e4e\u6240\u6709\u7684 <code>Value</code> \u90fd\u5b9e\u73b0\u4e86\u9759\u6001\u6210\u5458\u51fd\u6570 <code>Create</code> \u5e76\u8fd4\u56de\u4e00\u4e2a <code>Value *</code> \u7c7b\u578b\u7684\u503c.\n<code>Value</code> \u7c7b\u6784\u9020\u51fd\u6570\u90fd\u662f\u79c1\u6709\u7684\uff0c\u4f60\u4e0d\u5141\u8bb8\u76f4\u63a5\u8c03\u7528\u5b83\u4eec\uff0c\u53ea\u80fd\u4f7f\u7528 Create \u63a5\u53e3\uff0c\u56e0\u4e3a IR \u5185\u90e8\u6709\u81ea\u5df1\u7684\u5185\u5b58\u7ba1\u7406\u65b9\u5f0f.</p>\n<p>\u51fa\u4e8e\u5b9e\u73b0\u4e0a\u7684\u65b9\u4fbf\uff0c\u5e76\u7ef4\u62a4 <code>use-def chain</code>\uff0cterminator \u7c7b\u578b\u7684\u6307\u4ee4\u4e5f\u662f <code>Value</code> \u7684\u5b50\u7c7b</p>"},{"location":"middle-ir-gen/#ir-structures","title":"IR Structures","text":"<p><code>Instruction</code> \u7c7b\uff0c\u4f7f\u7528 <code>Instruction</code> \u5b50\u7c7b\u7684 Create \u63a5\u53e3\u6784\u9020\uff0c\u6709\u4ee5\u4e0b\u91cd\u8981\u7684\u901a\u7528\u63a5\u53e3\uff1a</p>\n<ul>\n<li><code>getOpcode()</code> \u83b7\u53d6\u6307\u4ee4\u7684\u64cd\u4f5c\u7801\uff0c\u6240\u6709\u64cd\u4f5c\u7801\u662f\u679a\u4e3e <code>BinaryOps</code>\u3001<code>MemoryOps</code>\u3001<code>OtherOps</code> \u548c <code>TerminatorOps</code> \u7684\u5176\u4e2d\u4e00\u79cd.</li>\n<li><code>getOperand()</code> \u83b7\u53d6\u6307\u4ee4\u4f7f\u7528\u7684 Value\uff08\u64cd\u4f5c\u6570\uff09.\n\u6ce8\u610f\uff0c\u6839\u636e\u5b9a\u4e49\uff0cFunction \u548c BasicBlock \u7b49\u5747\u4e0d\u662f Value.</li>\n<li>\u5404\u7c7b insert \u63a5\u53e3\uff0c\u5c06\u8fd9\u6761\u201c\u6e38\u79bb\u201d\u7684\u6307\u4ee4\u63d2\u5165\u5230\u67d0\u4e2a\u57fa\u672c\u5757\u4e2d\uff08<code>insertInto</code>\uff09\uff0c\u6216\u63d2\u5165\u67d0\u6761\u6307\u4ee4\u4e4b\u524d\uff08<code>insertBefore</code>\uff09\u6216\u4e4b\u540e\uff08<code>insertAfter</code>\uff09.</li>\n</ul>\n<p><code>BasicBlock</code> \u7c7b\uff0c\u57fa\u672c\u5757\uff0c\u901a\u8fc7 Create \u63a5\u53e3\u6784\u9020\uff0c\u901a\u8fc7 <code>insertInto</code> \u63a5\u53e3\u63d2\u5165\u5230\u67d0\u4e2a\u51fd\u6570\u4e2d.</p>\n<p><code>Function</code> \u7c7b\uff0c\u51fd\u6570\u7c7b\uff0c\u901a\u8fc7 Create \u63a5\u53e3\u6784\u9020\uff0c\u9700\u8981\u6307\u5b9a\u5176\u6240\u5728\u7684 Module</p>\n<p><code>GlobalVariable</code> \u7c7b\uff0c\u5168\u5c40\u53d8\u91cf\u7c7b\uff0c\u901a\u8fc7 Create \u63a5\u53e3\u6784\u9020\uff0c\u9700\u8981\u6307\u5b9a\u5176\u6240\u5728\u7684 Module</p>\n<p><code>Module</code> \u7c7b\uff0c\u7f16\u8bd1\u5355\u5143\uff0c\u5b9e\u73b0\u4e86 print \u63a5\u53e3\uff0c\u6253\u5370 IR</p>"},{"location":"middle-ir-gen/#_13","title":"\u4f7f\u7528\u793a\u4f8b\u548c\u5355\u5143\u6d4b\u8bd5","text":"<p>IR \u76f8\u5173\u7684\u90e8\u5206\u7f16\u5199\u4e86\u4e00\u4e9b\u5355\u5143\u6d4b\u8bd5\uff0c\u4f4d\u4e8e test \u5b50\u6587\u4ef6\u5939\u4e2d\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c\u8fd9\u4e9b\u6d4b\u8bd5\uff0c\u5e76\u53c2\u8003\u6211\u4eec\u63d0\u4f9b\u7684\u63a5\u53e3\u7684\u4f7f\u7528\u65b9\u5f0f</p>"},{"location":"semantics/","title":"\u5b9e\u9a8c2 \u8bed\u4e49\u5206\u6790","text":"<p>\u8bed\u4e49\u5206\u6790\u662f\u5728\u8bed\u6cd5\u5206\u6790\u7684\u7ed3\u679c, \u5373\u8bed\u6cd5\u6811\u7684\u57fa\u7840\u4e0a, \u589e\u6dfb\u8bed\u4e49\u4fe1\u606f, \u5efa\u7acb\u7b26\u53f7\u8868\u548c\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u7684\u8fc7\u7a0b. \u6211\u4eec\u5c06\u8bed\u4e49\u5206\u6790\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206: \u7b26\u53f7\u8868\u4e0e\u7c7b\u578b\u68c0\u67e5. </p>"},{"location":"semantics/#_1","title":"\u7b26\u53f7\u8868","text":"<p>\u6211\u4eec\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u7b26\u53f7\u8868\u7684\u4f5c\u7528:</p> <pre><code>int x = 1; // x1\nint y = 0; // y1\n{\n    int x = 3; // x2\n    y += x; // x2\n}\ny += x; // x1\n</code></pre> <p>\u5bf9\u4e8e\u4e0a\u8ff0\u4ee3\u7801, \u5bb9\u6613\u53d1\u73b0 <code>y += x</code> \u52a0\u7684\u4e24\u4e2a <code>x</code> \u6765\u81ea\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u5b9a\u4e49, \u90a3\u4e48\u7f16\u8bd1\u5668\u5728\u751f\u6210\u4ee3\u7801\u7684\u65f6\u5019, \u4ec5\u4ec5\u770b <code>y += x</code> \u662f\u5224\u65ad\u4e0d\u51fa\u6765\u8be5\u9009\u62e9\u54ea\u4e2a\u53d8\u91cf\u7684. \u8fd9\u5c31\u662f\u8bed\u4e49\u5206\u6790\u6240\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u4e4b\u4e00, \u4e3a\u8fd9\u4e9b\u4f7f\u7528\u7684\u53d8\u91cf\u63d0\u4f9b\u989d\u5916\u7684\u8bed\u4e49\u4fe1\u606f. \u800c\u8fd9\u4e00\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u5c31\u5bf9\u5e94\u4e86\u7b26\u53f7\u8868\u7684\u5efa\u7acb. </p> <p>\u5728\u53d8\u91cf\u7684\u6307\u5411\u786e\u5b9a\u540e, \u4f60\u540c\u65f6\u4e5f\u53ef\u80fd\u53d1\u73b0\u4e00\u4e9b\u8bed\u4e49\u9519\u8bef, \u4f8b\u5982\u4f7f\u7528\u7684\u53d8\u91cf\u662f\u672a\u5b9a\u4e49\u7684\u6216\u8005\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\u53d8\u91cf\u6709\u91cd\u590d\u5b9a\u4e49, \u8fd9\u65f6\u4f60\u5e94\u8be5\u5411\u4f7f\u7528\u8005\u62a5\u9519. \u540c\u65f6, \u4e3a\u4e86\u540e\u9762\u7684\u7c7b\u578b\u68c0\u67e5, \u4f60\u8fd8\u9700\u8981\u5728\u7b26\u53f7\u8868\u91cc\u8bb0\u5f55\u6bcf\u4e2a\u7b26\u53f7\u7684\u7c7b\u578b.</p> <p>\u9664\u4e86\u53d8\u91cf\u4e4b\u5916, \u4f60\u8fd8\u9700\u8981\u8003\u8651\u51fd\u6570\u7684\u7b26\u53f7. \u4f60\u5b8c\u5168\u53ef\u4ee5\u628a\u51fd\u6570\u5f53\u4f5c\u4e00\u4e2a\u53d8\u91cf\u6765\u5904\u7406, \u53ea\u4e0d\u8fc7\u5b83\u7684\u7c7b\u578b\u6709\u4e9b\u7279\u6b8a. \u6bd4\u5982\u4e00\u4e2a <code>int gcd(int a, int b)</code> \u51fd\u6570\u53ef\u4ee5\u5f53\u4f5c\u4e00\u4e2a\u7c7b\u578b\u4e3a <code>(int, int) -&gt; int</code> \u7684\u53d8\u91cf. </p> <p>\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1, \u6211\u4eec\u53ea\u901a\u8fc7\u540d\u5b57\u53bb\u8fdb\u884c\u5224\u65ad\u7b26\u53f7\u662f\u5426\u91cd\u5b9a\u4e49, \u4e0d\u8003\u8651\u51fd\u6570\u91cd\u8f7d\u7b49\u7279\u6027. \u4e5f\u5c31\u662f\u8bf4, \u4e0d\u53ef\u4ee5\u5b9a\u4e49\u4e24\u4e2a\u540c\u540d\u7684\u51fd\u6570, \u5373\u4f7f\u4ed6\u4eec\u7684\u53c2\u6570\u4e0d\u540c. \u540c\u65f6, \u6211\u4eec\u5c06\u51fd\u6570\u548c\u53d8\u91cf\u653e\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u7b26\u53f7\u8868\u8fdb\u884c\u5904\u7406, \u8fd9\u6837\u5141\u8bb8\u4f60\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185 (\u5168\u5c40\u4f5c\u7528\u57df) \u53bb\u5b9a\u4e49\u4e00\u5bf9\u540c\u540d\u7684\u51fd\u6570\u548c\u53d8\u91cf. \u8fd9\u91cc\u6211\u4eec\u53ea\u5141\u8bb8\u5728\u5168\u5c40\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\u51fd\u6570 (\u548c C \u4e00\u81f4, \u548c Tiger \u4e0d\u4e00\u81f4), \u5e76\u4e14\u6240\u6709\u7b26\u53f7\u5728\u4f7f\u7528\u524d\u5fc5\u987b\u88ab\u5b9a\u4e49 (\u6211\u4eec\u4e0d\u533a\u5206\u5b9a\u4e49\u548c\u58f0\u660e). </p>"},{"location":"semantics/#_2","title":"\u7b26\u53f7\u8868\u5b9e\u73b0","text":"<p>\u5047\u5982\u6211\u4eec\u4e0d\u5b58\u5728\u4f5c\u7528\u57df (scope) \u8fd9\u4e2a\u6982\u5ff5, \u6211\u4eec\u4ec5\u4ec5\u9700\u8981\u4e00\u4e2a\u54c8\u5e0c\u8868\u6216\u8005\u4e8c\u53c9\u641c\u7d22\u6811 (<code>std::map&lt;std::string, Type&gt;</code>) \u5c31\u53ef\u4ee5\u5b9e\u73b0\u7b26\u53f7\u8868. \u4f46\u662f\u5982\u679c\u8981\u8003\u8651\u4f5c\u7528\u57df, \u6211\u4eec\u9700\u8981\u652f\u6301\u5728\u6bcf\u4e2a\u4f5c\u7528\u57df\u5185\u5efa\u7acb\u4e00\u4e2a\u65b0\u7b26\u53f7\u8868, \u5b83\u9700\u8981\u6ee1\u8db3: </p> <ul> <li>\u652f\u6301\u5bf9\u4e0a\u7ea7\u4f5c\u7528\u57df\u7684\u7b26\u53f7\u8868\u7684\u8bbf\u95ee, \u5373\u65b0\u4f5c\u7528\u57df\u53ef\u4ee5\u8bbf\u95ee\u4e0a\u7ea7\u4f5c\u7528\u57df\u7684\u7b26\u53f7</li> <li>\u652f\u6301\u5728\u65b0\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\u65b0\u7684\u7b26\u53f7, \u5141\u8bb8\u8986\u76d6\u4e0a\u7ea7\u4f5c\u7528\u57df\u7684\u7b26\u53f7, \u5e76\u4e14\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\u4e0d\u53ef\u4ee5\u91cd\u590d\u5b9a\u4e49\u540c\u4e00\u4e2a\u7b26\u53f7</li> <li>\u79bb\u5f00\u4f5c\u7528\u57df\u65f6, \u53ef\u4ee5\u9500\u6bc1\u5f53\u524d\u7684\u7b26\u53f7\u8868, \u5e76\u4e0a\u7ea7\u4f5c\u7528\u57df\u7684\u7b26\u53f7\u8868\u6062\u590d</li> </ul> <p>\u864e\u4e66\u4e0a\u5c06\u7b26\u53f7\u8868\u7684\u5b9e\u73b0\u5206\u4e3a\u4e24\u79cd\u98ce\u683c: </p> <ul> <li>\u51fd\u6570\u5f0f\u98ce\u683c. \u5728\u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\u65f6, \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7b26\u53f7\u8868, \u5e76\u4fdd\u6301\u4e0a\u7ea7\u7b26\u53f7\u8868\u5185\u5bb9\u4e0d\u53d8. \u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u4ec5\u9700\u8981\u9500\u6bc1\u65b0\u7b26\u53f7\u8868, \u800c\u4e0d\u4f1a\u5f71\u54cd\u4e0a\u7ea7\u7b26\u53f7\u8868.</li> <li>\u547d\u4ee4\u5f0f\u98ce\u683c. \u53ea\u7ef4\u62a4\u4e00\u4e2a\u7b26\u53f7\u8868, \u5e76\u8bb0\u5f55\u64cd\u4f5c\u5386\u53f2\u8bb0\u5f55. \u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\u65f6, \u65b0\u7684\u7b26\u53f7\u53ef\u80fd\u4f1a\u8986\u76d6\u4e0a\u7ea7\u4f5c\u7528\u57df\u7684\u7b26\u53f7 (\u6bd4\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684\u53d8\u91cf <code>x</code>). \u79bb\u5f00\u4f5c\u7528\u57df\u65f6, \u6839\u636e\u64cd\u4f5c\u8bb0\u5f55\u5c06\u5176\u8fd8\u539f\u5373\u53ef. </li> </ul> <p>\u5f53\u7136\u4f60\u53ef\u4ee5\u8003\u8651\u4e00\u4e9b\u66f4\u76f4\u767d\u7684\u5b9e\u73b0\u65b9\u5f0f, \u6bd4\u5982 <code>std::vector&lt;std::map&lt;std::string, Type&gt;&gt;</code> \u6216\u8005 <code>std::map&lt;std::string, std::vector&lt;Type&gt;&gt;</code>. </p> <p>\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\u7ef4\u62a4\u4e00\u4e2a\u7b26\u53f7\u8868\u7684\u6808, \u6bcf\u4e2a\u7b26\u53f7\u8868\u5bf9\u5e94\u4e00\u4e2a\u4f5c\u7528\u57df, \u67e5\u627e\u53d8\u91cf\u65f6\u4ece\u6808\u9876\u5f00\u59cb\u67e5\u627e. \u4f8b\u5982\u521a\u624d\u7684\u4f8b\u5b50, \u5728\u8fd0\u884c\u5230\u7b2c 2 \u884c\u65f6\u7b26\u53f7\u8868\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>#Table 1\nx -&gt; [x1]\ny -&gt; [y1]\n</code></pre> <p>\u5728\u8fd0\u884c\u5230\u7b2c 3 \u884c\u65f6, \u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u7b26\u53f7\u8868, \u5e76\u538b\u5165\u6808\u4e2d, \u7136\u540e\u6839\u636e\u7b2c 4 \u884c\u7684\u5b9a\u4e49\u66f4\u65b0\u5f53\u524d\u7684\u7b26\u53f7\u8868:</p> <pre><code>#Table 1         #Table 2\nx -&gt; [x1]        x -&gt; [x2]\ny -&gt; [y1]\n</code></pre> <p>\u5728\u5bfb\u627e\u67d0\u4e2a\u7b26\u53f7\u65f6, \u6211\u4eec\u9996\u5148\u5728\u6808\u9876\u7684\u7b26\u53f7\u8868\u4e2d\u67e5\u627e, \u5982\u679c\u627e\u4e0d\u5230, \u6211\u4eec\u5c31\u53bb\u4e0a\u4e00\u4e2a\u7b26\u53f7\u8868\u4e2d\u67e5\u627e. \u4f8b\u5982\u5728\u7b2c 5 \u884c\u65f6, \u6211\u4eec\u4f1a\u5728\u8868 2 \u4e2d\u67e5\u627e <code>x</code>, \u800c\u5bf9\u4e8e <code>y</code>, \u8868 2 \u4e2d\u6211\u4eec\u5e76\u6ca1\u6709\u91cd\u590d\u5b9a\u4e49, \u6240\u4ee5\u6211\u4eec\u4f1a\u5728\u8868 1 \u4e2d\u627e\u5230. </p> <p>\u800c\u5728\u7b2c 6 \u884c\u4e5f\u5c31\u662f\u79bb\u5f00\u8be5\u4f5c\u7528\u57df\u65f6, \u6211\u4eec\u53ea\u9700\u8981\u9500\u6bc1\u6808\u9876\u7684\u7b26\u53f7\u8868\u5373\u53ef. </p> <p>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u5728\u6bcf\u4e2a\u7b26\u53f7\u4e0b\u7ef4\u62a4\u4e00\u4e2a\u6808, \u6bcf\u6b21\u8fdb\u5165\u65b0\u7684\u4f5c\u7528\u57df\u65f6, \u5c06\u4e00\u4e2a\u65b0\u7684\u7b26\u53f7\u8868\u538b\u5165\u6808\u4e2d, \u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u5f39\u51fa. \u8fd8\u662f\u521a\u624d\u7684\u4f8b\u5b50, \u5728\u8fd0\u884c\u5230\u7b2c 2 \u884c\u65f6\u7b26\u53f7\u8868\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>x -&gt; [x1]\ny -&gt; [y1]\n</code></pre> <p>\u800c\u8fd0\u884c\u5230\u7b2c 4 \u884c\u65f6, \u7b26\u53f7\u8868\u53d8\u6210\u4e86\uff1a</p> <pre><code>x -&gt; [x1, x2]\ny -&gt; [y1]\n</code></pre> <p>\u5728\u6bcf\u6b21\u6211\u4eec\u60f3\u8981\u67e5\u770b\u67d0\u4e2a\u53d8\u91cf\u7684\u5b9a\u4e49\u65f6, \u6211\u4eec\u53ea\u9700\u8981\u67e5\u770b\u6808\u9876\u7684\u5143\u7d20\u5373\u53ef. \u800c\u5f53\u6211\u4eec\u79bb\u5f00\u67d0\u4e2a\u4f5c\u7528\u57df\u65f6, \u6211\u4eec\u53ea\u9700\u8981\u5c06\u5728\u8be5\u8bed\u53e5\u5757\u5b9a\u4e49\u7684\u5143\u7d20\u5f39\u51fa\u5373\u53ef. \u6240\u4ee5\u5728\u7b2c 6 \u884c\u65f6, \u7b26\u53f7\u8868\u53c8\u53d8\u56de\u4e86:</p> <pre><code>x -&gt; [x1]\ny -&gt; [y1]\n</code></pre> <p>\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u77e5\u9053\u54ea\u4e9b\u5143\u7d20\u662f\u5728\u8be5\u4f5c\u7528\u57df\u4e0b\u5b9a\u4e49\u7684\u5462? \u4f60\u53ef\u4ee5\u5728\u6bcf\u6b21\u8fdb\u5165\u4e00\u4e2a\u5757\u65f6, \u5c06\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bb0\u7b26\u538b\u5165\u6808\u4e2d, \u800c\u5f53\u4f60\u79bb\u5f00\u8be5\u5757\u65f6, \u4f60\u53ea\u9700\u8981\u5c06\u6808\u9876\u7684\u5143\u7d20\u5f39\u51fa\u76f4\u5230\u9047\u5230\u8fd9\u4e2a\u7279\u6b8a\u7684\u5143\u7d20\u5373\u53ef. \u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u8bb0\u5f55\u5f53\u524d\u4f5c\u7528\u57df\u5185\u65b0\u5b9a\u4e49\u7684\u6240\u6709\u7b26\u53f7, \u4f9d\u6b21\u5c06\u8fd9\u4e9b\u7b26\u53f7\u7684\u6808\u9876\u5f39\u51fa\u5373\u53ef (\u6bd4\u8f83\u7c7b\u4f3c\u4e8e\u4e0a\u9762\u63d0\u5230\u7684\u547d\u4ee4\u5f0f\u98ce\u683c).</p> <p>\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784</p> <p>\u4e66\u4e0a\u63d0\u5230\u4e86\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u51fd\u6570\u5f0f\u7b26\u53f7\u8868, \u662f\u7528\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784 (persistent data structure) \u6765\u5b9e\u73b0\u7684. \u8fd9\u79cd \"\u53ef\u6301\u4e45\u5316\" \u53c8\u88ab\u79f0\u4e3a \"\u4e0d\u53ef\u53d8\", \u4e5f\u5c31\u662f\u6bcf\u4e00\u6b21\u66f4\u6539\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 \"\u7248\u672c\" \u800c\u4fdd\u6301 \"\u5386\u53f2\u7248\u672c\" \u4e0d\u53d8. </p> <p>\u6211\u4eec\u63d0\u4f9b\u7684\u6837\u4f8b\u7f16\u8bd1\u5668 <code>accsys-rs</code> \u4e2d\u4f7f\u7528\u4e86 rpds \u5e93\u63d0\u4f9b\u7684\u53ef\u6301\u4e45\u54c8\u5e0c\u8868\u6765\u5b9e\u73b0\u8fd9\u79cd\u7b26\u53f7\u8868. \u800c\u5bf9\u4e8e C++ \u6765\u8bf4, \u4f60\u53ef\u4ee5\u8003\u8651 immer. \u5982\u679c\u4f60\u7cbe\u529b\u5145\u6c9b, \u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a, \u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684. \u53ef\u4ee5\u53c2\u8003 OI Wiki \u4e0a\u7684\u5185\u5bb9.</p> <p>\u5f53\u7136\u4f60\u4e0d\u5fc5\u592a\u8fc7\u5173\u5fc3\u7b26\u53f7\u8868\u7684\u6548\u7387, \u4e0a\u9762\u63d0\u5230\u7684 <code>std::vector&lt;std::map&lt;std::string, Type&gt;&gt;</code> \u548c <code>std::map&lt;std::string, std::vector&lt;Type&gt;&gt;</code> \u5df2\u7ecf\u591f\u7528\u4e86.</p>"},{"location":"semantics/#_3","title":"\u7c7b\u578b\u68c0\u67e5","text":"<p>\u6240\u8c13\u7c7b\u578b, \u5c31\u662f\u4e00\u7ec4\u503c\u6784\u6210\u7684\u96c6\u5408, \u5bf9\u4e8e\u8fd9\u7ec4\u96c6\u5408\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u5176\u4e13\u5c5e\u7684\u64cd\u4f5c, \u4f8b\u5982\u6574\u578b\u7684\u52a0\u51cf\u4e58\u9664, \u6570\u7ec4\u7684\u8bbf\u95ee\u7b49.  \u5f53\u6211\u4eec\u5728\u67d0\u7ec4\u503c\u4e0a\u5c1d\u8bd5\u53bb\u6267\u884c\u5176\u4e0d\u652f\u6301\u7684\u64cd\u4f5c\u65f6, \u7c7b\u578b\u9519\u8bef\u5c31\u4ea7\u751f\u4e86. \u800c\u7c7b\u578b\u68c0\u67e5, \u5c31\u662f\u68c0\u67e5\u6211\u4eec\u5bf9\u8fd9\u4e9b\u7c7b\u578b\u7684\u64cd\u4f5c\u6709\u6ca1\u6709\u9519\u8bef. </p> <pre><code>void f() {\n    return;\n}\nint a;\nint c = a / f();\n</code></pre> <p>\u4f8b\u5982\u4e0a\u8ff0\u4ee3\u7801,  \u4f60\u9700\u8981\u53d1\u73b0\u5f97\u5230 <code>f()</code> \u8fd4\u56de\u503c\u662f void,  \u662f\u65e0\u6cd5\u8fdb\u884c\u9664\u6cd5\u7684, \u4e5f\u5c31\u4ea7\u751f\u4e86\u7c7b\u578b\u9519\u8bef. \u8fd9\u65f6\u4f60\u4f1a\u53d1\u73b0\u53d8\u91cf\u7ed1\u5b9a\u662f\u5341\u5206\u91cd\u8981\u7684, \u5982\u679c\u78b0\u5230\u4e86\u4f7f\u7528\u67d0\u4e00\u53d8\u91cf\u5982 <code>a = b + c</code> \u65f6\u6211\u4eec\u600e\u4e48\u77e5\u9053 <code>b</code> \u7684\u7c7b\u578b\u5462? \u7b54\u6848\u662f\u6211\u4eec\u4e0a\u9762\u4ecb\u7ecd\u7684\u7b26\u53f7\u8868, \u901a\u8fc7\u67e5\u627e<code>b</code>\u662f\u88ab\u54ea\u4e2a\u7b26\u53f7\u5b9a\u4e49\u7684, \u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053<code>b</code>\u7684\u7c7b\u578b\u4e86. \u9664\u6b64\u4e4b\u5916, \u51fd\u6570\u8c03\u7528\u7684\u53c2\u6570\u7c7b\u578b, \u4e2a\u6570\u548c\u8fd4\u56de\u7c7b\u578b\u7b49\u4e5f\u90fd\u662f\u4f60\u5e94\u8be5\u68c0\u67e5\u7684.</p>"},{"location":"semantics/#_4","title":"\u7c7b\u578b\u68c0\u67e5\u5b9e\u73b0","text":"<p>\u548c\u6253\u5370\u8bed\u6cd5\u6811\u548c\u7b26\u53f7\u8868\u7684\u5efa\u7acb\u4e00\u6837, \u7c7b\u578b\u68c0\u67e5\u4e5f\u662f\u904d\u5386\u8bed\u6cd5\u6811\u7684\u8fc7\u7a0b. \u4e0d\u540c\u4e8e\u6253\u5370\u8bed\u6cd5\u6811\u7684\u904d\u5386\u64cd\u4f5c\u4e0d\u9700\u8981\u8fd4\u56de\u503c, \u7c7b\u578b\u68c0\u67e5\u4e2d\u4e00\u4e2a\u81ea\u7136\u7684\u8fd4\u56de\u503c\u5c31\u662f\u8be5\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b. \u4f8b\u5982, \u5bf9\u4e8e\u8d4b\u503c\u8bed\u53e5\u4f60\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a</p> <pre><code>Type type_check(Assign assign, Table table) {\n    Type left = type_check(assign-&gt;left, table);\n    Type right = type_check(assign-&gt;right, table);\n    if (equal(left, right)) \n        ...\n}\n\nType type_check(Ident ident, Table table) {\n    return table.lookup(ident);\n}\n</code></pre> <p>\u5176\u4e2d\u7684 <code>type_check</code> \u51fd\u6570\u8d1f\u8d23\u7684\u5c31\u662f\u68c0\u67e5\u67d0\u4e2a\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u662f\u5426\u6b63\u786e, \u5e76\u8fd4\u56de\u5176\u7c7b\u578b. </p> <p>\u4e0d\u8fc7\u6211\u4eec\u4f1a\u6d89\u53ca\u5230\u7684\u7c7b\u578b\u53ea\u6709 <code>int</code>, <code>void</code> \u548c <code>int</code> \u6570\u7ec4, \u5e76\u4e14\u6240\u6709\u5355\u5143/\u4e8c\u5143\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\u6570\u548c\u8f93\u51fa\u5747\u4e3a <code>int</code>.</p>"},{"location":"semantics/#_5","title":"\u4f60\u7684\u4efb\u52a1","text":"<p>\u4f60\u7684\u4efb\u52a1\u5c31\u662f\u5728\u5b9e\u9a8c 1 \u6240\u6784\u5efa\u7684\u8bed\u6cd5\u6811\u57fa\u7840\u4e0a\u5b8c\u6210\u4e0a\u8ff0\u8bed\u4e49\u5206\u6790, \u5bf9\u8bed\u6cd5\u6811\u8fdb\u884c\u904d\u5386\u4ee5\u8fdb\u884c\u7b26\u53f7\u8868\u7684\u6784\u5efa\u4ee5\u53ca\u7c7b\u578b\u7684\u68c0\u67e5. \u5bf9\u4e8e\u8fdd\u53cd\u8bed\u4e49\u7684\u7a0b\u5e8f\u8fdb\u884c\u62a5\u9519. \u4f60\u5e94\u8be5\u652f\u6301\u68c0\u6d4b\u51fa\u4ee5\u4e0b\u9519\u8bef\uff1a</p> <ol> <li>\u7b26\u53f7\u8868\u76f8\u5173\uff1a<ul> <li>\u8c03\u7528\u672a\u5b9a\u4e49\u7684\u51fd\u6570, \u4f7f\u7528\u672a\u5b9a\u4e49\u7684\u53d8\u91cf</li> <li>\u91cd\u590d\u5b9a\u4e49\u51fd\u6570, \u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\u91cd\u590d\u5b9a\u4e49\u53d8\u91cf</li> </ul> </li> <li>\u7c7b\u578b\u68c0\u67e5\u76f8\u5173\uff1a<ul> <li>\u53d8\u91cf\u5b9a\u4e49\u6216\u8d4b\u503c\u4e2d\u5de6\u53f3\u8868\u8fbe\u5f0f\u7c7b\u578b\u4e0d\u5339\u914d</li> <li>\u64cd\u4f5c\u6570\u7c7b\u578b\u4e0d\u5339\u914d\u6216\u64cd\u4f5c\u6570\u7c7b\u578b\u4e0e\u64cd\u4f5c\u7b26\u4e0d\u5339\u914d, \u5982\u6574\u578b\u53d8\u91cf\u4e0e\u6570\u7ec4\u53d8\u91cf\u76f8\u52a0\u51cf</li> <li>return \u8bed\u53e5\u7684\u8fd4\u56de\u7c7b\u578b\u4e0e\u51fd\u6570\u5b9a\u4e49\u7684\u8fd4\u56de\u7c7b\u578b\u4e0d\u5339\u914d</li> <li>\u51fd\u6570\u8c03\u7528\u65f6\u5b9e\u53c2\u4e0e\u5f62\u53c2\u7684\u6570\u76ee\u6216\u7c7b\u578b\u4e0d\u5339\u914d; \u7279\u522b\u7684, \u51fd\u6570\u8c03\u7528\u65f6\u6570\u7ec4\u5bf9\u5e94\u7ef4\u6570\u4e0d\u5339\u914d</li> <li>\u5bf9\u975e\u6570\u7ec4\u578b\u53d8\u91cf\u4f7f\u7528 \"[...]\" (\u6570\u7ec4\u8bbf\u95ee) \u64cd\u4f5c\u7b26</li> <li>\u5bf9\u666e\u901a\u53d8\u91cf\u4f7f\u7528 \"(...)\" (\u51fd\u6570\u8c03\u7528) \u64cd\u4f5c\u7b26, \u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8c03\u7528\u672a\u5b9a\u4e49\u7684\u51fd\u6570</li> </ul> </li> </ol> <p>\u5b9e\u9645\u4e0a\u4f60\u5e94\u8be5\u628a\u6784\u5efa\u7b26\u53f7\u8868\u548c\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u653e\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u6267\u884c. \u5728 Lab 2 \u91cc\u4f60\u6784\u5efa\u7684\u7b26\u53f7\u8868\u53ea\u9700\u8981\u77e5\u9053\u53d8\u91cf/\u51fd\u6570\u7684\u7c7b\u578b, \u8fd9\u4e2a\u7b26\u53f7\u8868\u5728\u8fdb\u884c\u5b8c\u7c7b\u578b\u68c0\u67e5\u540e\u5c31\u6ca1\u6709\u7528\u4e86. </p> <p>\u7b26\u53f7\u8868\u4e0d\u662f\u4e00\u4e2a\u56fa\u5b9a\u542b\u4e49\u7684\u4e1c\u897f, \u4f60\u5728\u4e0d\u540c\u9636\u6bb5\u53ef\u80fd\u4f1a\u7528\u5230\u4e0d\u540c\u7684\u7b26\u53f7\u8868. \u5bf9\u4e8e Lab 2, \u4f60\u6784\u5efa\u7684\u7b26\u53f7\u8868\u4e2d\u53ea\u9700\u8981\u7ef4\u62a4 <code>name -&gt; type</code> \u7684\u5173\u7cfb, \u5e76\u4e14\u8fd9\u4e2a\u7b26\u53f7\u8868\u662f\u968f\u7740\u4f60\u7684\u8bed\u4e49\u68c0\u67e5\u52a8\u6001\u6784\u5efa\u7684, \u91cc\u9762\u7684\u5185\u5bb9\u4f1a\u968f\u7740\u4f60\u8fdb\u5165/\u79bb\u5f00\u4f5c\u7528\u57df\u800c\u52a0\u5165/\u5220\u9664. \u8fd9\u4e2a\u7b26\u53f7\u8868\u4ec5\u5728\u8fdb\u884c\u8bed\u4e49\u68c0\u67e5\u7684\u8fc7\u7a0b\u4e2d\u4f7f\u7528, \u4e5f\u5c31\u662f\u8bf4, \u8bed\u4e49\u68c0\u67e5\u7684\u76ee\u7684\u4e0d\u662f\u4e3a\u4e86\u5f97\u5230\u7b26\u53f7\u8868, \u800c\u662f\u4f60\u5728\u8bed\u4e49\u68c0\u67e5\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u7b26\u53f7\u8868.</p> <p>\u4f60\u5728\u540e\u7eed\u7684 Lab \u4f1a\u91cd\u65b0\u6784\u5efa\u66f4\u590d\u6742\u7684\u7b26\u53f7\u8868, \u6bd4\u5982\u5305\u542b\u6bcf\u4e2a\u7b26\u53f7\u7684\u5730\u5740\u7b49\u4fe1\u606f. \u540c\u6837\u7684, \u8fd9\u4e9b\u7b26\u53f7\u8868\u4e5f\u4ec5\u5728\u4f60\u8fdb\u884c\u4e2d\u95f4\u4ee3\u7801\u751f\u6210/\u6c47\u7f16\u751f\u6210\u7684\u8fc7\u7a0b\u5f53\u4e2d\u6784\u5efa\u5e76\u88ab\u4f7f\u7528.</p> <p>\u7531\u4e8e\u6211\u4eec\u7684\u8bed\u8a00\u6bd4\u8f83\u7b80\u5355, Lab 2 \u7684\u5185\u5bb9\u4ec5\u8d77\u5230\u4e00\u4e2a\u68c0\u67e5\u7684\u4f5c\u7528, \u4e0d\u4f1a\u751f\u6210\u5176\u4ed6\u7684\u4e1c\u897f\u7528\u4e8e\u540e\u7eed\u5de5\u4f5c. </p> <p>\u9664\u6b64\u4e4b\u5916\u4f60\u8fd8\u9700\u8981\u8003\u8651 <code>putint</code> \u548c <code>getint</code> \u7b49\u8fd0\u884c\u65f6\u51fd\u6570, \u7528\u6237\u4e0d\u9700\u8981\u5b9a\u4e49\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528. </p> <p>\u5bf9\u4e8e\u6211\u4eec\u6d4b\u8bd5\u96c6\u6ca1\u6709\u8986\u76d6\u5230\u7684\u60c5\u51b5, \u4f60\u53ef\u4ee5\u81ea\u884c\u51b3\u5b9a\u662f\u5426\u62a5\u9519. \u4f60\u53ef\u4ee5\u5728\u62a5\u544a\u4e2d\u6ce8\u660e\u8fd9\u4e9b\u6ca1\u6709\u8986\u76d6\u5230\u7684\u60c5\u51b5. </p> <p>\u540c\u5b9e\u9a8c 1, \u4f60\u7684\u7f16\u8bd1\u5668\u5fc5\u987b\u652f\u6301\u4e00\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u60c5\u5f62, \u5373\uff1a</p> <pre><code>./compiler &lt;input_file&gt;\n</code></pre> <p>\u8be5\u7a0b\u5e8f\u5fc5\u987b\u63a5\u53d7\u4e00\u4e2a\u8f93\u5165\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u540d\u4f5c\u4e3a\u53c2\u6570, \u6211\u4eec\u53ea\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u6d4b\u8bd5\u4f60\u7684\u7f16\u8bd1\u5668. </p>"},{"location":"semantics/#_6","title":"\u6d4b\u8bd5","text":"<p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u6d4b\u8bd5\u4f60\u7684\u7f16\u8bd1\u5668\uff1a</p> <pre><code>python3 test.py ./compiler lab2\n</code></pre> <p>\u5728\u5b9e\u9a8c2\u4e2d, \u6211\u4eec\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u4e24\u7c7b\u6d4b\u8bd5\u6837\u4f8b\uff1a</p> <ul> <li>\u5982 <code>tests/lab2/main.sy</code> \u6240\u793a, \u6e90\u6587\u4ef6\u4e2d\u7684\u8bed\u4e49\u6ca1\u6709\u9519\u8bef, \u4f60\u7684\u7f16\u8bd1\u5668\u5e94\u8be5\u80fd\u591f\u6b63\u5e38\u9000\u51fa. </li> </ul> <pre><code>int main(){\n    return 0;\n}\n</code></pre> <ul> <li>\u5982 <code>tests/lab2/unmatch_call_num.sy</code> \u6240\u793a, \u6e90\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u5f62\u53c2\u4e0e\u5b9e\u53c2\u4e0d\u5339\u914d, \u4f60\u7684\u7f16\u8bd1\u5668\u5e94\u8be5\u80fd\u591f\u68c0\u6d4b\u51fa\u9519\u8bef\u5e76\u62a5\u9519\u540e\u4ee5\u975e 0 \u8fd4\u56de\u503c\u9000\u51fa. </li> </ul> <pre><code>// Semantic Error at Line 8: Function arguments not matched\n\nint f (int i) {\n    return i;\n}\n\nint main () {\n    int a = f(1, 2);\n    return 0;\n}\n</code></pre> <p>\u6211\u4eec\u7684\u6d4b\u8bd5\u5b8c\u5168\u91c7\u7528\u8f93\u5165\u8f93\u51fa\u5f62\u5f0f, \u5373\u5bf9\u4e8e\u7b26\u5408\u8bed\u4e49\u7684\u6e90\u4ee3\u7801, \u4f60\u7684\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u540e\u6b63\u5e38\u9000\u51fa, \u5bf9\u4e8e\u4e0d\u7b26\u5408\u8bed\u4e49\u7684\u6e90\u4ee3\u7801, \u4f60\u7684\u7a0b\u5e8f\u5e94\u8be5\u80fd\u591f\u68c0\u6d4b\u51fa\u9519\u8bef\u62a5\u9519\u540e\u8fd4\u56de\u975e0\u503c, \u6211\u4eec\u5bf9\u62a5\u9519\u7684\u683c\u5f0f\u6ca1\u6709\u8981\u6c42. \u6d4b\u8bd5\u6587\u4ef6\u4e2d\u7684\u62a5\u9519\u6ce8\u91ca\u4f9b\u4f60\u53c2\u8003. </p>"},{"location":"semantics/#_7","title":"\u5b9e\u9a8c\u63d0\u4ea4","text":"<p>\u5b9e\u9a8c\u4e00\u548c\u5b9e\u9a8c\u4e8c\u7edf\u4e00\u63d0\u4ea4\u4e00\u6b21. \u4f60\u9700\u8981\u63d0\u4f9b:</p> <ol> <li>\u6e90\u7a0b\u5e8f\uff0c\u5305\u62ec\u5fc5\u8981\u7684\u6784\u5efa\u7cfb\u7edf\u6587\u4ef6\uff08Makefile/CMakeLists.txt/Cargo.toml/dune-project \u7b49\uff09. </li> <li> <p>\u4e00\u4efd PDF \u683c\u5f0f\u7684\u5b9e\u9a8c\u62a5\u544a, \u5185\u5bb9\u5305\u62ec:</p> <ul> <li>\u4f60\u7684\u7a0b\u5e8f\u5b9e\u73b0\u4e86\u54ea\u4e9b\u529f\u80fd? \u7b80\u8981\u8bf4\u660e\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd.</li> <li>\u4f60\u7684\u7a0b\u5e8f\u5e94\u8be5\u5982\u4f55\u88ab\u7f16\u8bd1? \u8bf7\u8be6\u7ec6\u8bf4\u660e\u5e94\u8be5\u5982\u4f55\u7f16\u8bd1\u4f60\u7684\u7a0b\u5e8f\uff0c\u5305\u62ec\u6784\u5efa\u7cfb\u7edf\u9700\u8981\u4f20\u5165\u7684\u989d\u5916\u547d\u4ee4\u884c\u53c2\u6570\u3001\u53ef\u80fd\u9700\u8981\u52a9\u6559\u5b89\u88c5\u7684\u67d0\u4e9b\u7b2c\u4e09\u65b9\u5e93\u7b49\u91cd\u8981\u4fe1\u606f\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528\u8bf8\u5982\u201c\u5728 Dev-C++ \u4e2d\u6253\u5f00\u5e76\u6309 F9 \u7f16\u8bd1\"\u201c\u5728 Vscode \u4e2d\u6253\u5f00\u201d\u7684\u6a21\u7cca\u63cf\u8ff0. \u65e0\u6cd5\u987a\u5229\u7f16\u8bd1\u5c06\u5bfc\u81f4\u52a9\u6559\u65e0\u6cd5\u5bf9\u4f60\u7684\u7a0b\u5e8f\u6240\u5b9e\u73b0\u7684\u529f\u80fd\u8fdb\u884c\u4efb\u4f55\u6d4b\u8bd5, \u4ece\u800c\u4e22\u5931\u76f8\u5e94\u7684\u5206\u6570.</li> <li>\u5b9e\u9a8c\u62a5\u544a\u7684\u957f\u5ea6\u4e0d\u5f97\u8d85\u8fc7 6 \u9875. \u6240\u4ee5\u5b9e\u9a8c\u62a5\u544a\u4e2d\u9700\u8981\u91cd\u70b9\u63cf\u8ff0\u7684\u662f\u4f60\u7684\u7a0b\u5e8f\u4e2d\u7684\u4eae\u70b9, \u662f\u4f60\u8ba4\u4e3a\u6700\u4e2a\u6027\u5316/\u6700\u5177\u72ec\u521b\u6027\u7684\u5185\u5bb9, \u5c24\u5176\u8981\u907f\u514d\u5927\u6bb5\u5730\u5411\u62a5\u544a\u91cc\u8d34\u4ee3\u7801.</li> <li>\u6d4b\u8bd5\u96c6\u4e2d\u5e76\u6ca1\u6709\u8986\u76d6\u6240\u6709\u7684\u8bed\u6cd5/\u8bed\u4e49\u89c4\u5219, \u4f60\u53ef\u4ee5\u5c06\u4f60\u9047\u5230\u7684\u672a\u8986\u76d6\u7684\u60c5\u51b5\u5199\u5230\u62a5\u544a\u4e2d, \u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e9b\u65b0\u7684\u6d4b\u8bd5\u4e00\u5e76\u63d0\u4ea4\u4e0a\u6765. </li> </ul> </li> </ol> <p>\u6e90\u4ee3\u7801\uff1a\u4f60\u5e94\u5f53\u63d0\u4f9b\u4e00\u4e2a <code>.zip</code> \u6587\u4ef6, \u6587\u4ef6\u540d\u4e3a <code>compiler-lab1-lab2-g&lt;\u5c0f\u7ec4\u5e8f\u53f7&gt;.zip</code>\uff08\u4f8b\u5982\u7b2c 0 \u7ec4\u4e3a <code>compiler-lab1-lab2-g0.zip</code>\uff09, \u5305\u542b\u4ee5\u4e0a\u4e24\u9879\u5185\u5bb9. \u5982\u679c\u4f60\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684 C++ \u6a21\u677f\u4ee3\u7801\uff0c\u5728\u538b\u7f29\u5305\u89e3\u538b\u540e\uff0c\u5728\u6839\u76ee\u5f55\u4e0b\u7684\u7ed3\u6784\u5e94\u5f53\u5982\u4e0b:</p> <pre><code>compiler-lab1-lab2-g0.zip\n\u251c\u2500\u2500 src/\n\u251c\u2500\u2500 include/\n\u251c\u2500\u2500 third_party/\n\u251c\u2500\u2500 ... # other files\n\u2514\u2500\u2500 CMakeLists.txt\n</code></pre> <ul> <li>\u5982\u679c\u4f60\u4f7f\u7528\u5176\u4ed6\u8bed\u8a00\u6216\u8005\u4e0d\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u6a21\u677f\u81ea\u5df1\u9020\u8f6e\u5b50\uff0c\u63d0\u4ea4\u65f6\u53ef\u4ee5\u53c2\u8003\u4e0a\u8ff0\u6587\u4ef6\u7ed3\u6784. \u7b80\u8a00\u4e4b\uff0c\u5c3d\u91cf\u4e0d\u8981\u51fa\u73b0\u591a\u4f59\u7684\u6587\u4ef6\u5939\u5d4c\u5957.</li> <li>\u5982\u679c\u4f60\u4f7f\u7528 macOS\uff0c\u8bf7\u5220\u9664 zip \u6587\u4ef6\u91cc\u7684 <code>__MACOSX</code> \u7b49\u6587\u4ef6\u5939.</li> </ul> <p>\u62a5\u544a\uff1a\u4f60\u5e94\u5f53\u63d0\u4f9b\u4e00\u4e2a <code>.pdf</code> \u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u4e3a <code>compiler-lab1-lab2-g&lt;\u5c0f\u7ec4\u5e8f\u53f7&gt;.pdf</code>\uff08\u4f8b\u5982\u7b2c 0 \u7ec4\u4e3a <code>compiler-lab1-lab2-g0.pdf</code>\uff09\uff0c\u5185\u5bb9\u8981\u6c42\u5982\u4e0a.</p> <p>\u5efa\u8bae\u4f7f\u7528 Git \u7ba1\u7406\u4f60\u7684\u4ee3\u7801</p>"},{"location":"syntax/","title":"\u5b9e\u9a8c1 \u8bcd\u6cd5\u4e0e\u8bed\u6cd5\u5206\u6790","text":"<p>Warning</p> <p>\u8bf7\u53ca\u65f6\u5173\u6ce8\u5de5\u5177/\u6a21\u677f/\u6837\u4f8b\u7684\u66f4\u65b0, \u8fd9\u4e9b\u6750\u6599\u90fd\u4f1a\u653e\u5728\u8fd9\u91cc</p>"},{"location":"syntax/#_1","title":"\u8bcd\u6cd5\u5206\u6790","text":"<p>\u8bcd\u6cd5\u5206\u6790\u7684\u76ee\u7684\u662f\u5c06\u6e90\u4ee3\u7801 (\u4e00\u4e2a\u4e2a\u5b57\u7b26) \u89e3\u6790\u6210\u4e00\u4e2a\u4e2a token. Token \u5c31\u662f\u8bcd\u6cd5\u5206\u6790\u7684\u6700\u5c0f\u5355\u5143, \u8868\u793a\u4e00\u4e2a\u7a0b\u5e8f\u6709\u610f\u4e49\u7684\u6700\u5c0f\u5206\u5272. \u4e0b\u8868\u4e3a\u5e38\u89c1\u7684 token \u7c7b\u578b\u548c\u6837\u4f8b:</p> \u7c7b\u578b \u6837\u4f8b \u6807\u8bc6\u7b26 x, sum, i \u5173\u952e\u5b57 if, while, return \u5206\u9694\u7b26 }, (, ), ; \u8fd0\u7b97\u7b26 +, &lt; , = \u5b57\u9762\u91cf true, 666, \"hello world\" \u6ce8\u91ca // this is a comment. <pre><code>x\u00a0=\u00a0a\u00a0+\u00a0b\u00a0*\u00a02;\n</code></pre> <p>\u4e0a\u9762\u7684\u7b80\u5355\u4ee3\u7801\u4f1a\u88ab\u89e3\u6790\u4e3a: <code>[(identifier, x), (operator, =), (identifier, a), (operator, +), (identifier, b), (operator, *), (literal, 2), (separator,\u00a0;)]</code>.</p> <p>\u8bcd\u6cd5\u5206\u6790\u5e76\u4e0d\u590d\u6742, \u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u6709\u9650\u72b6\u6001\u673a (\u6b63\u5219\u6587\u6cd5) \u7684\u5339\u914d. \u53ea\u9700\u8981\u7b80\u5355\u7684\u904d\u5386\u6e90\u4ee3\u7801\u4e2d\u7684\u5b57\u7b26, \u6839\u636e\u5b57\u7b26\u7684\u503c\u5206\u522b\u5224\u65ad\u5373\u53ef.</p>"},{"location":"syntax/#_2","title":"\u8bed\u6cd5\u5206\u6790","text":"<p>\u7531\u8bcd\u6cd5\u5206\u6790\u5f97\u5230\u7684\u4e00\u4e2a\u4e2a token \u5728\u8bed\u6cd5\u5206\u6790\u9636\u6bb5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u89e3\u6790. \u5177\u4f53\u6765\u8bf4, \u9700\u8981:</p> <ol> <li>\u5bf9\u4e8e\u4e00\u4e32\u5408\u6cd5\u7684 tokens, \u751f\u6210\u8bed\u6cd5\u6811.</li> <li>\u5bf9\u4e8e\u7684\u4e00\u4e32\u4e0d\u5408\u6cd5\u7684 token, \u68c0\u6d4b\u5230\u53ef\u80fd\u7684\u9519\u8bef\u5e76\u62a5\u544a\u7ed9\u7528\u6237.</li> </ol> <p>\u5982\u679c\u8bf4\u8bcd\u6cd5\u5206\u6790\u7531\u6b63\u5219\u6587\u6cd5\u4e3a\u57fa\u7840, \u8bed\u6cd5\u5206\u6790\u5219\u4ee5\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u4f5c\u4e3a\u57fa\u77f3. </p> <p>\u800c\u5728\u5b9e\u9645\u5f00\u53d1\u8fc7\u7a0b\u4e2d, \u6211\u4eec\u5f80\u5f80\u4f1a\u9009\u7528\u4e00\u4e9b\u73b0\u6709\u7684\u5de5\u5177\u6765\u81ea\u52a8\u751f\u6210\u8bcd\u6cd5\u5206\u6790\u5668\u548c\u8bed\u6cd5\u5206\u6790\u5668. \u672c\u5b9e\u9a8c\u4e2d\u6211\u4eec\u5efa\u8bae\u5927\u5bb6\u4f7f\u7528 Flex, Bison \u5de5\u5177\u94fe\u6765\u8fdb\u884c\u8bcd\u6cd5\u4e0e\u8bed\u6cd5\u5206\u6790. </p>"},{"location":"syntax/#_3","title":"\u4f60\u7684\u4efb\u52a1","text":"<p>\u4f60\u9700\u8981\u5b8c\u6210\u7f16\u8bd1\u5668\u7684\u8bcd\u6cd5\u5206\u6790\u548c\u8bed\u6cd5\u5206\u6790\u90e8\u5206, \u80fd\u591f\u89e3\u6790\u51fa\u7b26\u5408\u8bcd\u6cd5\u4e0e\u8bed\u6cd5\u7684 SysY \u8bed\u8a00\u6e90\u4ee3\u7801.</p> <p>\u6211\u4eec\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f7f\u7528 rust \u7f16\u5199\u7684\u6837\u4f8b parser, \u5b83\u8db3\u4ee5\u901a\u8fc7 Lab 1 \u7684\u6d4b\u8bd5. \u540c\u65f6\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4efd CMake \u7684\u9879\u76ee\u6a21\u677f, \u91cc\u9762\u5f15\u5165\u4e86 <code>fmt</code> \u5e93, \u5e76\u4ee5\u4e0a\u8ff0\u5b9e\u73b0\u5efa\u8bae\u4e2d C++ \u7684\u7b2c\u4e8c\u79cd\u5199\u6cd5\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u8fbe\u5f0f parser (\u8fd9\u79cd\u98ce\u683c\u66f4\u63a5\u8fd1 LLVM, \u4f60\u4f1a\u5728 Lab 3 \u4e2d\u518d\u6b21\u89c1\u5230\u5b83).</p> <p>\u5f53\u7136\u6211\u4eec\u4e0d\u8981\u6c42\u4f60\u5fc5\u987b\u4f7f\u7528\u8fd9\u4e2a\u6a21\u677f, \u4f60\u53ef\u4ee5\u81ea\u884c\u7f16\u5199\u6784\u5efa\u7cfb\u7edf (make/xmake/cargo/dune) \u4f46\u8981\u5728\u62a5\u544a\u4e2d\u6ce8\u660e\u6784\u5efa\u65b9\u6cd5. \u4e0a\u9762\u6240\u8bf4\u7684\u6240\u6709\u5de5\u5177\u548c\u98ce\u683c\u4ec5\u4f5c\u63a8\u8350, \u4f60\u4e0d\u5fc5\u53d7\u6b64\u7ea6\u675f. </p> <p>\u6211\u4eec\u5efa\u8bae\u4f60\u5b9e\u73b0\u4e00\u4e2a\u6253\u5370\u8bed\u6cd5\u6811\u7684\u51fd\u6570, \u4ee5\u4fbf\u4e8e\u540e\u7eed\u8c03\u8bd5. \u4ee5\u5982\u4e0b\u7684\u9636\u4e58\u51fd\u6570\u4e3a\u4f8b <pre><code>int factorial(int n) {\n    if (n == 0)\n        return 1;\n    return n * factorial(n - 1);\n}\nint main() {\n    int n = getint();\n    int result = factorial(n);\n    putint(result);\n    return 0;\n}\n</code></pre> \u4f60\u6253\u5370\u51fa\u7684\u8bed\u6cd5\u6811\u53ef\u4ee5\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code> CompUnit\n \u251c\u2500 FuncDef factorial 'int(int)'\n \u2502  \u251c\u2500 FuncFParam n 'int'\n \u2502  \u2514\u2500 Block\n \u2502     \u251c\u2500 IfStmt\n \u2502     \u2502  \u251c\u2500 RelationOp ==\n \u2502     \u2502  \u2502  \u251c\u2500 Ident n\n \u2502     \u2502  \u2502  \u2514\u2500 IntConst 0\n \u2502     \u2502  \u2514\u2500 ReturnStmt\n \u2502     \u2502     \u2514\u2500 IntConst 1\n \u2502     \u2514\u2500 ReturnStmt\n \u2502        \u2514\u2500 BinaryOp *\n \u2502           \u251c\u2500 Ident n\n \u2502           \u2514\u2500 Call factorial\n \u2502              \u2514\u2500 BinaryOp -\n \u2502                 \u251c\u2500 Ident n\n \u2502                 \u2514\u2500 IntConst 1\n \u2514\u2500 FuncDef main 'int()'\n    \u2514\u2500 Block\n       \u251c\u2500 VarDecl\n       \u2502  \u2514\u2500 Ident n\n       \u2502     \u2514\u2500 Call getint\n       \u251c\u2500 VarDecl\n       \u2502  \u2514\u2500 Ident result\n       \u2502     \u2514\u2500 Call factorial\n       \u2502        \u2514\u2500 Ident n\n       \u251c\u2500 ExpStmt\n       \u2502  \u2514\u2500 Call putint\n       \u2502     \u2514\u2500 Ident result\n       \u2514\u2500 ReturnStmt\n          \u2514\u2500 IntConst 0\n</code></pre> <p>\u4e3a\u4e86\u51cf\u8f7b\u4f60\u7684\u8d1f\u62c5, \u6211\u4eec\u53ea\u8981\u6c42\u4f60\u5b9e\u73b0\u7b80\u5316\u7248\u7684 SysY \u8bed\u8a00, \u89c1\u9644\u5f55. </p> <p>\u5176\u5b9e\u662f\u7b80\u5316\u4e86\u4e24\u6b21\u7684 SysY, \u6211\u4eec\u751a\u81f3\u5220\u53bb\u4e86 Const \u548c\u6570\u7ec4\u521d\u59cb\u5316\u5217\u8868\u8fd9\u4e24\u4e2a\u9887\u4e3a\u9ebb\u70e6\u7684\u8bed\u6cd5.</p> <p>\u4f60\u7684\u7f16\u8bd1\u5668\u5fc5\u987b\u652f\u6301\u4e00\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u60c5\u5f62. \u5047\u8bbe\u4f60\u7684\u7a0b\u5e8f\u540d\u4e3a compiler \u4e14\u5728\u5f53\u524d\u76ee\u5f55\u4e0b, \u90a3\u4e48\u4f60\u7684\u7f16\u8bd1\u5668\u5e94\u8be5\u80fd\u591f\u4ee5\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c\uff1a</p> <pre><code>./compiler &lt;input_file&gt;\n</code></pre> <p>\u8be5\u7a0b\u5e8f\u5fc5\u987b\u63a5\u53d7\u4e00\u4e2a\u8f93\u5165\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u540d\u4f5c\u4e3a\u53c2\u6570, \u6211\u4eec\u53ea\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u6d4b\u8bd5\u4f60\u7684\u7f16\u8bd1\u5668. </p>"},{"location":"syntax/#_4","title":"\u6d4b\u8bd5","text":"<p>\u6d4b\u8bd5\u6837\u4f8b\u653e\u5728\u4e86 <code>tests</code> \u6587\u4ef6\u5939\u4e0b\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u811a\u672c <code>test.py</code> \u6765\u6d4b\u8bd5\u4f60\u7684\u7f16\u8bd1\u5668, \u4f7f\u7528 <code>python test.py -h</code> \u67e5\u770b\u5e2e\u52a9. </p> <p>\u5047\u8bbe\u4f60\u7684\u7a0b\u5e8f\u540d\u4e3a compiler \u4e14\u5728\u5f53\u524d\u76ee\u5f55\u4e0b, \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u6d4b\u8bd5\u4f60\u7684\u7f16\u8bd1\u5668\uff1a</p> <pre><code>python3 test.py ./compiler lab1\n</code></pre> <p>\u5728 lab1 \u4e2d, \u6211\u4eec\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u4e24\u79cd\u6d4b\u8bd5\u6837\u4f8b\uff1a</p> <ul> <li>\u5982 <code>tests/lab1/main.sy</code> \u6240\u793a, \u6e90\u6587\u4ef6\u4e2d\u7684\u8bed\u6cd5\u662f\u6b63\u786e\u7684, \u4f60\u7684\u7f16\u8bd1\u5668\u5e94\u8be5\u80fd\u591f\u6b63\u786e\u7684\u89e3\u6790\u51fa\u8bed\u6cd5\u6811\u5e76\u9000\u51fa. </li> </ul> <pre><code>int main(){\n    return 0;\n}\n</code></pre> <ul> <li>\u5982 <code>tests/lab1/error2.sy</code> \u6240\u793a, \u6e90\u6587\u4ef6\u4e2d\u7684\u8bed\u6cd5\u662f\u9519\u8bef\u7684, \u4f60\u7684\u7f16\u8bd1\u5668\u5e94\u8be5\u80fd\u591f\u68c0\u6d4b\u51fa\u9519\u8bef\u5e76\u62a5\u9519\u540e\u4ee5\u975e0\u8fd4\u56de\u503c\u9000\u51fa. </li> </ul> <pre><code>// Syntax Error Line 8: identifier \"3c\"\n\nint foo(int x){\n  return x + 1;\n}\n\nint main(){\n  int 3c = foo(1);\n}\n</code></pre> <p>\u6211\u4eec\u7684\u6d4b\u8bd5\u5b8c\u5168\u91c7\u7528\u8f93\u5165\u8f93\u51fa\u5f62\u5f0f, \u5373\u5bf9\u4e8e\u7b26\u5408\u8bed\u6cd5\u7684\u6e90\u4ee3\u7801, \u4f60\u7684\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u540e\u6b63\u5e38\u9000\u51fa, \u5bf9\u4e8e\u4e0d\u7b26\u5408\u8bed\u6cd5\u7684\u6e90\u4ee3\u7801, \u4f60\u7684\u7a0b\u5e8f\u5e94\u8be5\u80fd\u591f\u68c0\u6d4b\u51fa\u9519\u8bef\u62a5\u9519\u540e\u8fd4\u56de\u975e0\u503c, \u6211\u4eec\u5bf9\u62a5\u9519\u7684\u683c\u5f0f\u6ca1\u6709\u8981\u6c42. \u6d4b\u8bd5\u6587\u4ef6\u4e2d\u7684\u6ce8\u91ca\u4f9b\u4f60\u53c2\u8003. </p>"},{"location":"syntax/#_5","title":"\u5b9e\u9a8c\u63d0\u4ea4","text":"<p>\u5b9e\u9a8c\u4e00\u548c\u5b9e\u9a8c\u4e8c\u7edf\u4e00\u63d0\u4ea4\u4e00\u6b21. \u4f60\u9700\u8981\u63d0\u4f9b:</p> <ol> <li>\u6e90\u7a0b\u5e8f. </li> <li> <p>\u4e00\u4efd PDF \u683c\u5f0f\u7684\u5b9e\u9a8c\u62a5\u544a, \u5185\u5bb9\u5305\u62ec:</p> <ul> <li>\u4f60\u7684\u7a0b\u5e8f\u5b9e\u73b0\u4e86\u54ea\u4e9b\u529f\u80fd? \u7b80\u8981\u8bf4\u660e\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd.</li> <li>\u4f60\u7684\u7a0b\u5e8f\u5e94\u8be5\u5982\u4f55\u88ab\u7f16\u8bd1? \u8bf7\u8be6\u7ec6\u8bf4\u660e\u5e94\u8be5\u5982\u4f55\u7f16\u8bd1\u4f60\u7684\u7a0b\u5e8f. \u65e0\u6cd5\u987a\u5229\u7f16\u8bd1\u5c06\u5bfc\u81f4\u52a9\u6559\u65e0\u6cd5\u5bf9\u4f60\u7684\u7a0b\u5e8f\u6240\u5b9e\u73b0\u7684\u529f\u80fd\u8fdb\u884c\u4efb\u4f55\u6d4b\u8bd5, \u4ece\u800c\u4e22\u5931\u76f8\u5e94\u7684\u5206\u6570.</li> <li>\u5b9e\u9a8c\u62a5\u544a\u7684\u957f\u5ea6\u4e0d\u5f97\u8d85\u8fc7 6 \u9875. \u6240\u4ee5\u5b9e\u9a8c\u62a5\u544a\u4e2d\u9700\u8981\u91cd\u70b9\u63cf\u8ff0\u7684\u662f\u4f60\u7684\u7a0b\u5e8f\u4e2d\u7684\u4eae\u70b9, \u662f\u4f60\u8ba4\u4e3a\u6700\u4e2a\u6027\u5316/\u6700\u5177\u72ec\u521b\u6027\u7684\u5185\u5bb9, \u5c24\u5176\u8981\u907f\u514d\u5927\u6bb5\u5730\u5411\u62a5\u544a\u91cc\u8d34\u4ee3\u7801.</li> </ul> </li> </ol> <p>\u5efa\u8bae\u4f7f\u7528 Git \u7ba1\u7406\u4f60\u7684\u4ee3\u7801</p>"},{"location":"syntax/#_6","title":"\u5b9e\u73b0\u5efa\u8bae","text":"<p>\u5173\u4e8e Parser</p> <p>\u7531\u4e8e\u6211\u4eec\u7684\u6d4b\u8bd5\u53ea\u9488\u5bf9\u8f93\u5165\u8f93\u51fa, \u4f60\u5b8c\u5168\u53ef\u4ee5\u4e0d\u4f7f\u7528 Flex \u548c Bison \u800c\u53bb\u4f7f\u7528 ANTLR \u7b49\u5de5\u5177. Bison/Yacc/ANTLR \u8fd9\u7c7b\u5de5\u5177\u4e00\u822c\u88ab\u79f0\u4e3a Parser Generator, \u4ed6\u4eec\u63a5\u53d7\u4e00\u7cfb\u5217\u6587\u6cd5\u5b9a\u4e49\u7136\u540e\u751f\u6210\u4e00\u4e2a parser (\u66f4\u786e\u5207\u7684\u8bf4 Bison \u751f\u6210\u7684\u662f parser \u7684\u6e90\u7801, \u8fd9\u6837\u751a\u81f3\u4e0d\u9700\u8981\u6709\u4efb\u4f55\u989d\u5916\u7684\u4f9d\u8d56). </p> <p>\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u5199\u4e00\u4e2a\u8bcd\u6cd5\u5206\u6790\u5668\u548c\u57fa\u4e8e\u9012\u5f52\u4e0b\u964d\u7684\u8bed\u6cd5\u5206\u6790\u5668. \u8fd9\u4ef6\u4e8b\u5e76\u4e0d\u50cf\u4f60\u60f3\u8c61\u7684\u90a3\u6837\u56f0\u96be, \u6211\u4eec\u63a8\u8350 crafting interpreter \u4e2d\u8bed\u6cd5\u5206\u6790\u5185\u5bb9\u4f9b\u4f60\u53c2\u8003. </p> <p>\u5982\u679c\u4f60\u60f3\u5c1d\u8bd5\u624b\u5199\u9012\u5f52\u4e0b\u964d\u6216\u8005\u60f3\u5c1d\u8bd5 Parser Generator \u4e4b\u5916\u7684\u8bed\u6cd5\u5206\u6790\u624b\u6bb5, \u52a9\u6559\u63a8\u8350\u4e00\u79cd\u53eb Parser Combinator \u7684\u8303\u5f0f. \u4e00\u822c Parser Combinator \u5e93\u4f1a\u63d0\u4f9b\u4e00\u4e9b\u7b80\u5355\u7684 parser (\u6bd4\u5982\u8bf4\"\u5403\u6389\u4e00\u4e2a\u56fa\u5b9a\u7684\u5b57\u7b26\u4e32\", \u4f60\u5728\u624b\u5199\u9012\u5f52\u4e0b\u964d\u7684\u65f6\u5019\u4e5f\u4f1a\u7528\u5230) \u5e76\u63d0\u4f9b\u7ec4\u5408\u4ed6\u4eec\u7684\u65b9\u6cd5 (\u4e5f\u5c31\u662f combinator, \u6bd4\u5982\u8bf4\u4e32\u8054/\u9009\u62e9). \u6240\u4ee5\u672c\u8d28\u4e0a Parser Combinator \u662f\u4e00\u79cd\u7f16\u5199\u9012\u5f52\u4e0b\u964d parser \u7684\u5de5\u5177.</p> <p>\u4e5f\u8bb8\u8bfe\u4e0a\u8bb2\u7684\u987a\u5e8f\u662f\u4ece\u9012\u5f52\u4e0b\u964d\u5206\u6790\u8fc7\u6e21\u5230 LL(k) \u9884\u6d4b\u5206\u6790\u7684, \u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u9012\u5f52\u4e0b\u964d parser \u8bc6\u522b\u7684\u8bed\u8a00\u662f LL(k) \u8bc6\u522b\u7684\u8bed\u8a00\u7684\u5b50\u96c6, \u4f46\u662f\u5b9e\u9645\u4e0a\u5141\u8bb8\u56de\u6eaf\u7684\u9012\u5f52\u4e0b\u964d parser \u662f\u66f4\u5f3a\u7684. \u6211\u4eec\u7528 Parsing Expression Grammar (PEG) \u6765\u5f62\u5f0f\u5316\u63cf\u8ff0\u9012\u5f52\u4e0b\u964d parser, \u6b63\u5982 CFG \u53ef\u4ee5\u5bf9\u5e94 Pushdown Automaton.</p> <p>PEG \u7684\u795e\u5947\u4e4b\u5904\u5728\u4e8e, \u5b83\u53ef\u4ee5\u8bc6\u522b\u4e00\u4e9b\u975e CFG \u8bed\u8a00, \u6bd4\u5982 \\(a^n b^n c^n\\) (\u4e5f\u8bb8\u4f60\u5728\u8ba1\u7b97\u7406\u8bba\u91cc\u89c1\u8fc7\u5982\u4f55\u901a\u8fc7 pumping lemma \u8bc1\u660e\u8fd9\u4e2a\u8bed\u8a00\u4e0d\u662f CFL). \u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740 PEG \u6bd4 CFG \u5f3a, \u9996\u5148\u4f60\u5728\u5b9e\u9645\u4f7f\u7528\u7684\u65f6\u5019\u4ecd\u7136\u9700\u8981\u8003\u8651\u5de6\u9012\u5f52\u7684\u95ee\u9898, \u5176\u6b21\u6709\u4e00\u4e9b CFL \u96be\u4ee5\u7528 PEG \u8bc6\u522b, \u6bd4\u5982\u8bf4\u56de\u6587\u4e32. \u76ee\u524d\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u65e0\u6cd5\u88ab PEG \u8bc6\u522b\u7684 CFL \u4ecd\u7136\u662f\u4e00\u4e2a open problem. </p> <p>\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u9879\u76ee\u91cc\u770b\u5230\u4e00\u4e2a PEG parser \u662f\u5982\u4f55\u8bc6\u522b \\(a^n b^n c^n\\) \u7684, \u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b83\u96be\u4ee5\u8bc6\u522b\u56de\u6587\u4e32(\u9879\u76ee\u91cc\u7684\u5199\u6cd5\u5b9e\u9645\u4e0a\u53ea\u80fd\u8bc6\u522b\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u56de\u6587\u524d\u7f00, \u8fd9\u548c PEG \u7684\u786e\u5b9a\u6027\u6709\u5173).</p> <p>\u6211\u4eec\u7684 IR \u5de5\u5177\u548c\u6837\u4f8b\u7f16\u8bd1\u5668\u4f7f\u7528\u4e86 Rust \u7684 Parser Combinator \u5e93 chumsky \u548c nom, \u4ed6\u4eec\u90fd\u652f\u6301\u56de\u6eaf\u529f\u80fd, \u6240\u4ee5\u53ef\u4ee5\u8bc6\u522b\u4efb\u4f55 PEG, \u4e5f\u5373\u53ef\u4ee5\u751f\u6210(\u5e26\u56de\u6eaf\u7684)\u9012\u5f52\u4e0b\u964d parser.</p> <p>AST\u8868\u793a\u4e0e\u6253\u5370</p> <p>AST \u662f\u7f16\u8bd1\u5668\u7684\u6838\u5fc3\u6570\u636e\u7ed3\u6784\u4e4b\u4e00, \u5728\u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\u65f6\u4f1a\u6709\u4e0d\u540c\u7684\u6280\u672f\u65b9\u6848, \u6211\u4eec\u4ee5 <code>Stmt</code> \u4e3a\u4f8b, \u4ecb\u7ecd\u5728 C, C++, Rust \u4e2d\u8868\u793a\u8bed\u6cd5\u6811\u8fd9\u7c7b\u6570\u636e\u7ed3\u6784\u7684\u4e00\u79cd\u65b9\u6cd5. </p> CC++Rust/OCaml/Modern C++ <p>C\u8bed\u8a00\u5e38\u7528\u7684\u6280\u5de7\u662f enum + union: ast.h<pre><code>enum StmtKind {\n    STMT_EXPR,\n    STMT_IF,\n    STMT_WHILE,\n    STMT_RETURN,\n};\n\nstruct Stmt {\n    enum StmtKind kind;\n    union {\n        struct Expr *expr;\n        struct IfStmt *if_stmt;\n        struct WhileStmt *while_stmt;\n        struct ReturnStmt *return_stmt;\n    };\n}; \n</code></pre></p> <p>\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\u6765\u8868\u793a\u8bed\u6cd5\u6811\u7684\u8282\u70b9\u7c7b\u578b, \u5e76\u4e14\u4f7f\u7528 union \u6765\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9.  \u800c\u5728\u6253\u5370\u8bed\u6cd5\u6811\u65f6, \u53ea\u9700\u8981 switch \u9012\u5f52\u904d\u5386\u5373\u53ef:</p> ast.h<pre><code>void print_stmt(struct Stmt *stmt) {\n    switch (stmt-&gt;kind) {\n        case STMT_EXPR:\n            print_expr(stmt-&gt;expr);\n            break;\n        case STMT_IF:\n            print_if_stmt(stmt-&gt;if_stmt);\n            break;\n        case STMT_WHILE:\n            print_while_stmt(stmt-&gt;while_stmt);\n            break;\n        case STMT_RETURN:\n            print_return_stmt(stmt-&gt;return_stmt);\n            break;\n        default:\n            raise_error();\n    }\n}\n</code></pre> <p>C++ \u9664\u4e86\u53ef\u4ee5\u4f7f\u7528 C \u7684\u65b9\u6cd5\u5916, \u8fd8\u53ef\u4ee5\u4f7f\u7528\u57fa\u4e8e\u9762\u5411\u5bf9\u8c61\u7684\u6280\u672f\uff1a</p> ast.h<pre><code>struct Node {\n};\n\nstruct IfStmt : public Node {\n    Node *condition;\n    Node *then;\n    Node *els;\n    IfStmt(Node *condition, Node *then, Node *els) {}\n}\n</code></pre> <p>\u5728\u6253\u5370\u8bed\u6cd5\u6811\u65f6, \u57fa\u4e8e\u9762\u5411\u5bf9\u8c61\u7684\u6280\u672f\u53ef\u4ee5\u4f7f\u7528\u865a\u51fd\u6570\u6765\u5b9e\u73b0: </p> ast.h<pre><code>struct Node {\n    virtual void print() = 0;\n};\n\nstruct IfStmt : public Node {\n    Node *condition;\n    Node *then;\n    Node *els;\n    IfStmt(Node *condition, Node *then, Node *els) {/* ... */}\n    void print() override {\n        printf(\"If\\n\");\n        condition-&gt;print();\n        printf(\"Then\\n\");\n        then-&gt;print();\n        if (els != nullptr) {\n            printf(\"Else\\n\");\n            els-&gt;print();\n        }\n    }\n}\n...\n</code></pre> <p>\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u8003\u8651\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a\u7b80\u6613\u7684 RTTI (Runtime Type Identification), \u7c7b\u4f3c\u4e8e python \u4e2d\u7684 <code>isinstance</code>, \u672c\u8d28\u4e0a\u8fd8\u662f C \u7684 enum + union.</p> ast.h<pre><code>enum NodeKind {\n    ND_Expr,\n    ND_IfStmt,\n    ND_WhileStmt,\n    ...\n}\nstruct Node {\n    NodeKind node_kind;\n    Node(NodeKind kind): node_kind(kind) { }\n    template &lt;typename T&gt;\n    bool is() {\n        return value_type == std::remove_pointer_t&lt;T&gt;::this_kind;\n    }\n    template &lt;typename T&gt;\n    T as() {\n        if (is&lt;T&gt;()) {\n            return static_cast&lt;T&gt;(this);\n        } else {\n            return nullptr;\n        }\n    }\n};\n\nstruct IfStmt : public Node {\n    constexpr static NodeKind this_kind = ND_IfStmt;\n    Node *condition;\n    Node *then;\n    Node *els;\n    IfStmt(Node *condition, Node *then, Node *els): Node(this_kind) {/* ... */}\n}\n\nvoid print(Node *node) {\n    if (IfStmt *stmt = node-&gt;as&lt;IfStmt *&gt;()) {\n        /* ... */\n    }\n}\n</code></pre> <p>\u719f\u6089 Rust \u7684\u540c\u5b66\u4e00\u5b9a\u4f1a\u4f7f\u7528 enum, \u5373\u679a\u4e3e\u7c7b\u578b\u6765\u8868\u793aAST\uff1a</p> <pre><code>enum Node {\n    Expr(Expr),\n    IfStmt(IfStmt),\n    WhileStmt(WhileStmt),\n    ReturnStmt(ReturnStmt),\n}\n\nstruct IfStmt {\n    ...\n}\n</code></pre> <p>\u5728\u6253\u5370\u8bed\u6cd5\u6811\u65f6, \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 match \u8bed\u6cd5\u6765\u5b9e\u73b0\uff1a</p> <pre><code>fn print_node(node: &amp;Node) {\n    match node {\n        Node::Expr(expr) =&gt; print_expr(expr),\n        Node::IfStmt(if_stmt) =&gt; print_if_stmt(if_stmt),\n        Node::WhileStmt(while_stmt) =&gt; print_while_stmt(while_stmt),\n        Node::ReturnStmt(return_stmt) =&gt; print_return_stmt(return_stmt),\n    }\n}\n</code></pre> <p>\u8fd9\u5957\u4e1c\u897f\u53eb\u4ee3\u6570\u6570\u636e\u7c7b\u578b (Algebraic Data Type, ADT) \u548c\u6a21\u5f0f\u5339\u914d (pattern matching), \u4f60\u53ef\u4ee5\u5728\u5f88\u591a\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u4e2d\u89c1\u5230\u5b83 (\u6bd4\u5982 OCaml/Haskell). </p> <p>\u5f53\u7136\u5982\u679c\u4f60\u8db3\u591f\u70ed\u7231 C++ \u6216\u8005\u8db3\u591f\u75db\u6068 Rust \u8fd8\u60f3\u7528\u8fd9\u5957\u7684\u8bdd\u4e5f\u4e0d\u662f\u4e0d\u884c, \u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u57fa\u4e8e <code>std::variant</code> \u548c <code>std::visit</code> \u7684\u5b9e\u73b0 (\u8fd9\u4e2a\u65b9\u6cd5\u6765\u81ea\u4e8e cppreference). \u8fd9\u5c31\u662f Modern C++.</p>"},{"location":"appendix/","title":"\u9644\u5f55","text":"<p>\u672c\u6761\u76ee\u5305\u542b\u4e00\u4e9b\u9605\u8bfb\u6750\u6599\u3001\u524d\u7aef\u8bed\u8a00\u548c IR \u89c4\u8303\u7b49\u8f85\u52a9\u6027\u5185\u5bb9</p>"},{"location":"appendix/accipit-spec/","title":"Accipit IR Specification","text":""},{"location":"appendix/accipit-spec/#conventions","title":"Conventions","text":"<p>Accipit IR \u7684\u8bed\u6cd5\u548c\u7ed3\u6784\u7531\u62bd\u8c61\u8bed\u6cd5\u5b9a\u4e49.</p> <p>\u6ce8\u610f\uff1a \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4f60\u7684\u4efb\u52a1\u5e76\u4e0d\u4f1a\u6d89\u53ca parse Accipit IR\uff0c\u672c\u6587\u6863\u7684\u4e3b\u8981\u76ee\u7684\u662f\u8ba9\u4f60\u719f\u6089 Accipit IR \u7684\u8bed\u6cd5\u5e76\u65b9\u4fbf\u4f60\u8fdb\u884c\u540e\u7eed\u7684 debug \u548c test.</p>"},{"location":"appendix/accipit-spec/#grammar-notations","title":"Grammar Notations","text":"<p>\u4ee5\u4e0b\u8bb0\u53f7\u4f1a\u5728\u5b9a\u4e49\u62bd\u8c61\u8bed\u6cd5\u7684\u8bed\u6cd5\u89c4\u5219\u65f6\u7528\u5230\uff1a</p> <ul> <li>\u4ea7\u751f\u5f0f\u5199\u4f5c <code>sym ::= expr1 | expr2 | ... | exprn</code>\uff0c\u5176\u4e2d expr \u662f\u4efb\u610f\u5408\u6cd5\u7684\u8bed\u6cd5\u8868\u8fbe\u5f0f.</li> <li>\u5f15\u7528\u5176\u4ed6\u4ea7\u751f\u5f0f\u4f7f\u7528\u5c16\u62ec\u53f7\u5305\u88f9\u7684\u8be5\u4ea7\u751f\u5f0f\u5bf9\u5e94\u7684\u7b26\u53f7\uff0c\u4f8b\u5982 <code>&lt;sym&gt;</code>.</li> <li>\u7a7a\u5b57\u7b26\u4e32\u4f7f\u7528 <code>&lt;empty&gt;</code> \u6807\u8bb0.</li> <li>\u5b57\u9762\u91cf\u7684\u5b57\u7b26\u6216\u8005\u5b57\u7b26\u4e32\u4f7f\u7528\u5355\u5f15\u53f7\uff0c\u4f8b\u5982 <code>'a'</code> <code>'string'</code>.</li> <li>\u5b57\u9762\u91cf\u5b57\u7b26\u7684\u96c6\u5408 <code>[ character-set ]</code>\uff0c\u8868\u793a\u5339\u914d\u96c6\u5408\u4efb\u610f\u4e00\u4e2a\u4e14\u4ec5\u4e00\u4e2a\u5b57\u7b26\uff0c\u5408\u6cd5\u7684\u96c6\u5408\u5305\u62ec\uff1a\u5355\u4e2a\u5b57\u7b26 <code>'c'</code>\uff1b\u4e00\u4e2a\u8303\u56f4\u5185\u7684\u5b57\u7b26 <code>'c1'-'c2'</code> \uff08c1 \u548c c2 \u4e4b\u95f4\u7684\u5b57\u7b26\uff0c\u5305\u542b\u4e24\u4e2a\u7aef\u70b9\uff09\uff1b\u4e24\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u7684\u5e76 <code>['c1' 'c2' 'c3' ... 'cn']</code>.</li> <li><code>expr *</code> \u8868\u793a 0 \u4e2a\u6216\u591a\u4e2a\u7b26\u5408 expr \u5b57\u7b26\u4e32\u7684\u62fc\u63a5.</li> <li><code>expr +</code> \u8868\u793a 1 \u4e2a\u6216\u591a\u4e2a\u7b26\u5408 expr \u5b57\u7b26\u4e32\u7684\u62fc\u63a5.</li> <li><code>expr ?</code> \u8868\u793a 0 \u4e2a\u6216 1 \u4e2a\u7b26\u5408 expr \u5b57\u7b26\u4e32\u7684\u62fc\u63a5.</li> <li><code>expr1 | expr2</code> \u8868\u793a\u4efb\u4f55\u7b26\u5408 expr1 \u6216\u8005 expr2 \u7684\u5b57\u7b26\u4e32.</li> <li><code>{ expr }</code> \u8868\u793a\u7b26\u5408 expr \u7684\u5b57\u7b26\u4e32.</li> <li><code>expr1 expr2</code> \u8868\u793a\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\uff0c\u7b2c\u4e00\u4e2a\u7b26\u5408 expr1\uff0c\u7b2c\u4e8c\u4e2a\u7b26\u5408 expr2.</li> </ul> <p>\u4ee5\u53ca\u4e00\u4e9b\u9ad8\u7ea7\u7684\u51fd\u6570\uff0c\u4ed6\u4eec\u4e0d\u96be\u4f7f\u7528\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u5b9a\u4e49\uff1a</p> <ul> <li><code>list(expr)</code> \u8868\u793a 0 \u4e2a\u6216\u8005\u591a\u4e2a\u7b26\u5408 expr \u7684\u5b57\u7b26\u4e32\u62fc\u63a5.</li> <li><code>nonempty_list(expr)</code> \u8868\u793a 1 \u4e2a\u6216\u8005\u591a\u4e2a\u7b26\u5408 expr \u7684\u5b57\u7b26\u4e32\u62fc\u63a5.</li> <li><code>separated_list(expr, character)</code> \u8868\u793a 0 \u4e2a\u6216\u8005\u591a\u4e2a\u7b26\u5408 expr \u7684\u5b57\u7b26\u4e32\uff0c\u5176\u95f4\u4ee5\u5b57\u7b26 character \u5206\u9694. \u4f8b\u5982\u7b26\u5408 <code>separected_list(expr, ',')</code> \u7684\u5b57\u7b26\u4e32\u6709\uff1a <code>&lt;empty&gt;</code>\uff0c<code>expr</code>\uff0c<code>expr,expr,expr</code>.</li> <li><code>separated_nonempty_list(expr, character)</code> \u542b\u4e49\u7c7b\u4f3c separated_list\uff0c\u4f46\u662f\u4e0d\u5141\u8bb8\u7a7a\u5b57\u7b26\u4e32 <code>&lt;empty&gt;</code>.</li> </ul> <p>\u7531\u4e8e\u672c\u6587\u6863\u8bf4\u660e\u6309\u6a21\u5757\u5212\u5206\uff0c\u6240\u4ee5\u53ef\u80fd\u5b58\u5728\u90e8\u5206\u4ea4\u53c9\u5f15\u7528</p>"},{"location":"appendix/accipit-spec/#common-symbols","title":"Common Symbols","text":"<p>\u4ee5\u4e0b\u7684\u5e38\u7528\u7684\u7b26\u53f7\u5728\u6240\u6709\u7ae0\u8282\u4e2d\u90fd\u662f\u5171\u4eab\u7684\uff1a</p> <pre><code>digit      ::=  ['0'-'9']\nletter     ::=  ['a'-'z' 'A'-'Z']\nident      ::=  ['%' '#' '@'] [&lt;letter&gt; '-' '_' '.'] [&lt;letter&gt; &lt;digit&gt; '_' '.']*\n               | &lt;digit&gt;+\n</code></pre> <p>digit \u5b9a\u4e49\u4e86\u6570\u5b57\u5b57\u7b26\u96c6\u5408.</p> <p>letter \u5b9a\u4e49\u4e86\u5b57\u6bcd\u6570\u5b57\u96c6\u5408\uff0c\u7b80\u5355\u8d77\u89c1\u53ea\u5305\u542b\u62c9\u4e01\u5b57\u6bcd.</p> <p>ident \u5b9a\u4e49\u4e86\u6807\u8bc6\u7b26 (identifier) \u96c6\u5408\uff0c\u4f60\u53ef\u4ee5\u7406\u89e3\u4e3a Accipit IR \u5185\u90e8\u6240\u4f7f\u7528\u5404\u79cd\u4e0d\u540c\u7ed3\u6784\uff0c\u503c\u7684\u540d\u5b57. \u5177\u4f53\u6765\u8bf4\u6709\u4e24\u79cd\u547d\u540d\u4e60\u60ef\uff1a</p> <ul> <li>\u5e26\u6709\u540d\u79f0\u7684\u53d8\u91cf\uff0c\u4f8b\u5982 <code>%foo</code> <code>@DivisionByZero</code> <code>%a.really.long.identifier</code>.</li> <li>\u533f\u540d\u7684\u53d8\u91cf\u6216\u8005\u4e34\u65f6\u53d8\u91cf\uff0c\u901a\u5e38\u6309\u51fa\u73b0\u7684\u987a\u5e8f\u4f7f\u7528\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u547d\u540d\uff0c\u4f8b\u5982 <code>%12</code> <code>@2</code> <code>%0</code>.</li> </ul> <p>\u5176\u4e2d\uff0c<code>%</code> <code>#</code> \u548c <code>@</code> \u524d\u7f00\u7528\u4e8e\u8868\u793a\u4e0d\u540c\u4f5c\u7528\u57df\u7684\u503c\uff1a</p> <ul> <li><code>%</code> \u524d\u7f00\u7528\u4e8e\u5c40\u90e8\u7684\u503c\uff0c\u4f8b\u5982\u6307\u4ee4\u5b9a\u4e49\u7684\u7b26\u53f7\u3001\u57fa\u672c\u5757\u7b26\u53f7.</li> <li><code>#</code> \u524d\u7f00\u7528\u4e8e\u51fd\u6570\u7684\u53c2\u6570\u7b26\u53f7.</li> <li><code>@</code> \u524d\u7f00\u7528\u4e8e\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u7b26\u53f7.</li> </ul> <pre><code>int_const    ::=  '-'? &lt;digit&gt;+\nnone_const   ::=  'none'\nunit_const   ::=  '()'\nconst        ::=  &lt;int_const&gt; | &lt;none_const&gt; | &lt;unit_const&gt;\n</code></pre> <p>\u9664\u4e86\u53ef\u4ee5\u7528\u4e0a\u8ff0\u5177\u540d\u6216\u533f\u540d\u7684\u6807\u8bc6\u7b26\u6765\u5f15\u7528\u67d0\u4e2a\u503c\uff0cAccipit IR \u8fd8\u6709\u5e38\u6570\u503c.</p> <p><code>int_const</code> \u5b9a\u4e49\u4e86 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u5e38\u6570\uff0c\u6211\u4eec\u53ea\u8003\u8651\u666e\u901a\u7684\u5341\u8fdb\u5236\u6574\u6570\u7684\u6587\u672c\u5f62\u5f0f.</p> <p><code>none_const</code> \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5e38\u6570\uff0c\u7528\u4e8e offset \u6307\u4ee4\uff08\u89c1\u4e0b\uff09.</p> <p><code>unit_const</code> \u662f\u5355\u503c\u7c7b\u578b <code>()</code> \u7684\u5e38\u6570.</p> <pre><code>symbol     ::= &lt;ident&gt;\nvalue      ::= &lt;symbol&gt; | &lt;const&gt;\n</code></pre> <p>\u7b26\u53f7 (symbol) \u5305\u542b\u6240\u6709\u6807\u8bc6\u7b26\uff0c\u4ee3\u8868\u4e86\u4e2d\u95f4\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf\uff0c\u5305\u62ec\u5e26\u6709\u540d\u79f0\u7684\u548c\u533f\u540d\u7684\u4e34\u65f6\u53d8\u91cf. \u800c IR \u4e2d\u5408\u6cd5\u7684\u503c (value) \u65e2\u53ef\u4ee5\u662f\u7b26\u53f7\uff0c\u8868\u793a\u5bf9\u5e94\u53d8\u91cf\u7684\u503c\uff1b\u4e5f\u53ef\u4ee5\u662f\u5e38\u6570\uff0c\u8868\u793a\u5e38\u6570\u672c\u8eab\u7684\u503c.</p>"},{"location":"appendix/accipit-spec/#structures","title":"Structures","text":"<p>\u4e0b\u9762\u6211\u4eec\u5b9a\u4e49 Accipit IR \u7684\u5404\u4e2a\u7ed3\u6784.</p>"},{"location":"appendix/accipit-spec/#types","title":"Types","text":"<p>Accipit IR \u4e2d\u7684\u4f17\u591a\u5b9e\u4f53\u6309\u7c7b\u578b\u533a\u5206\uff0c\u7c7b\u578b\u5173\u4e4e\u5230\u7a0b\u5e8f\u7684\u5408\u6cd5\u6027\u3001\u6267\u884c\u7684\u8fc7\u7a0b.</p> <pre><code>type    ::=   'i32'\n            | '()'\n            | &lt;type&gt; '*'\n            | 'fn' '(' separated_list(&lt;type&gt;, ',') ')' '-&gt;' &lt;type&gt;\n</code></pre> <p><code>i32</code>\uff0c32 \u4f4d\u5e26\u7b26\u53f7\u6574\u6570.</p> <p>\u5355\u503c\u7c7b\u578b <code>()</code>\uff0c\u8bfb\u4f5c unit\uff0c\u548c C \u8bed\u8a00\u4e2d\u7684\u7a7a\u7c7b\u578b void \u7c7b\u4f3c. <code>()</code> \u7c7b\u578b\u53ea\u6709\u4e00\u4e2a\u503c <code>()</code>\uff0c\u5e76\u4e14\u7528\u4e8e\u8868\u793a\u6ca1\u6709\u8bf4\u660e\u6709\u610f\u4e49\u7684\u503c\u53ef\u4ee5\u4f5c\u4e3a\u6307\u4ee4\u7684\u7ed3\u679c\u3001\u51fd\u6570\u7684\u8fd4\u56de\u503c.</p> <p>\u6307\u9488\u7c7b\u578b\uff0c\u7531\u88ab\u6307\u7684\u7c7b\u578b (pointee type) \u52a0\u4e0a\u540e\u7f00 * \u8868\u793a. \u4f8b\u5982 <code>i32 *</code> \u8868\u793a\u6307\u5411 <code>i32</code> \u7c7b\u578b\u7684\u6307\u9488\u7c7b\u578b.</p> <p>\u51fd\u6570\u7c7b\u578b\uff0c\u7c7b\u4f3c\u4e8e\u51fd\u6570\u58f0\u660e\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u52a0\u6cd5 add\uff0c\u4e24\u4e2a <code>i32</code> \u53c2\u6570\uff0c\u4e00\u4e2a <code>i32</code> \u8fd4\u56de\u503c <code>fn(i32, i32) -&gt; i32</code>.</li> <li>\u8bfb\u5165\uff0c\u65e0\u53c2\u6570\uff0c\u4e00\u4e2a <code>i32</code> \u8fd4\u56de\u503c <code>fn() -&gt; i32</code>.</li> <li>\u8f93\u51fa\uff0c\u4e00\u4e2a <code>i32</code> \u53c2\u6570\uff0c\u65e0\u8fd4\u56de\u503c <code>fn(i32) -&gt; ()</code>.</li> <li><code>fn(i32*) -&gt; i32*</code>\uff0c\u63a5\u53d7\u4e00\u4e2a <code>i32*</code> \u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a <code>i32*</code> \u7c7b\u578b\u7684\u8fd4\u56de\u503c.</li> </ul>"},{"location":"appendix/accipit-spec/#instructions","title":"Instructions","text":"<p>Accipit IR \u7684\u4ee3\u7801\u7531\u4e00\u7cfb\u5217\u6307\u4ee4 (instruction) \u7ec4\u6210.</p> <pre><code>valuebinding   ::= 'let' &lt;symbol&gt; '=' {&lt;binexpr&gt; | &lt;gep&gt; | &lt;fncall&gt; | &lt;alloca&gt; | &lt;load&gt; | &lt;store&gt;}\nterminator     ::= &lt;jmp&gt; | &lt;br&gt; | &lt;ret&gt;\n</code></pre> <p>\u6240\u6709\u7684\u6307\u4ee4\u5177\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a</p> <ul> <li>value binding\uff0c\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf <code>&lt;symbol&gt;</code>\uff0c\u5e76\u7ed9\u5b83\u8d4b\u503c\uff0c\u5373\u5c06\u53f3\u4fa7\u6307\u4ee4\u7684\u503c\u8d4b\u7ed9\u5de6\u4fa7 <code>&lt;symbol&gt;</code> \u4ee3\u8868\u7684\u53d8\u91cf.</li> <li>terminator\uff0c\u4e0d\u8fdb\u884c\u4efb\u4f55\u8d4b\u503c\uff0c\u6807\u8bb0\u57fa\u672c\u5757\u7684\u7ec8\u7ed3\uff0c\u5bf9\u5e94\u63a7\u5236\u6d41\u7684\u8df3\u8f6c.</li> </ul> <p>\u6ce8\u610f</p> <p>\u51fa\u4e8e\u67d0\u79cd\u795e\u79d8\u7684\u539f\u56e0\uff0c\u6211\u4eec\u89c4\u5b9a\u6bcf\u4e2a\u53d8\u91cf\u53ea\u80fd\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u88ab\u8d4b\u503c\u4e00\u6b21\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u6761\u6307\u4ee4\u5de6\u4fa7\u7684\u53d8\u91cf <code>&lt;symbol&gt;</code> \u5728\u5bf9\u5e94\u7684\u4f5c\u7528\u57df\u5185\u8981\u6c42\u662f\u552f\u4e00\u7684\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u9644\u5f55\uff1a\u4ece\u56db\u5143\u7ec4\u5230\u9759\u6001\u5355\u8d4b\u503c\u5f62\u5f0f. \u6240\u4ee5\uff0c\u6211\u4eec\u5728\u8bed\u6cd5\u4e0a\u7528 <code>let</code> \u6765\u6697\u793a\u8fd9\u4e00\u70b9. \u6709\u4e00\u4e9b\u76f8\u5e94\u7684\u7ffb\u8bd1\u6280\u5de7\u5904\u7406\u6e90\u4ee3\u7801\u51fa\u73b0\u591a\u6b21\u8d4b\u503c\u7684\u60c5\u51b5\uff0c\u8be6\u7ec6\u8bf7\u770b\u9644\u5f55\uff1aSysY \u7ed3\u6784\u4e0e Accipit IR \u7684\u5bf9\u5e94</p>"},{"location":"appendix/accipit-spec/#binary-instructions","title":"Binary Instructions","text":"<pre><code>binop     ::=  'add' | 'sub' | 'mul' | 'div' | 'rem' |\n               'and' | 'or' | 'xor' |\n               'lt' | 'gt' | 'le' | 'ge' | 'eq' | 'ne'\nbinexpr   ::=  &lt;binop&gt; &lt;value&gt; ',' &lt;value&gt;\n</code></pre>"},{"location":"appendix/accipit-spec/#_1","title":"\u8bf4\u660e","text":"<p><code>rem</code> \u610f\u4e3a remainder\uff0c\u8868\u793a\u53d6\u4f59\u6570\u64cd\u4f5c.</p> <p>\u6570\u503c\u8ba1\u7b97\u6307\u4ee4\u64cd\u4f5c\u7b26\u4e2d\u4e0d\u5305\u542b\u5355\u76ee\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982 lnot (logic not) \u548c neg (numeric negation)\uff0c\u56e0\u4e3a\u4ed6\u4eec\u662f\u591a\u4f59\u7684\uff1a</p> <ul> <li>\u6309\u4f4d\u53d6\u53cd\uff0c<code>not %src</code> \u7b49\u4ef7\u4e8e <code>xor %src: i32, -1</code>.</li> <li>\u903b\u8f91\u53d6\u53cd\uff0c<code>lnot %src</code> \u7b49\u4ef7\u4e8e <code>eq %src, 0</code>.</li> <li>\u53d6\u8d1f\u6570\uff0c<code>neg %src</code> \u7b49\u4ef7\u4e8e <code>sub 0, %src</code>.</li> </ul> <p>\u8fd9\u79cd\u8f6c\u6362\u5f88\u5bb9\u6613\u5728\u524d\u7aef\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u65f6\u5b9e\u73b0\uff0c\u5e76\u4e14\u4f7f\u5f97\u8fd9\u4e9b\u8ba1\u7b97\u6709\u4e00\u4e2a\u7edf\u4e00\u7684\u8868\u793a\u5f62\u5f0f (canonical form)\uff0c\u8fd9\u5c06\u6709\u5229\u4e8e\u540e\u7aef\u4ee3\u7801\u751f\u6210.</p>"},{"location":"appendix/accipit-spec/#_2","title":"\u7c7b\u578b\u89c4\u5219","text":"<p>\u63a5\u53d7\u4e24\u4e2a <code>i32</code> \u7c7b\u578b\u64cd\u4f5c\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a <code>i32</code> \u7c7b\u578b\u7684\u503c.</p>"},{"location":"appendix/accipit-spec/#memory-instructions","title":"Memory Instructions","text":"<pre><code>alloca ::= 'alloca' &lt;type&gt; ',' &lt;int_const&gt;\nload   ::= 'load' &lt;symbol&gt;\nstore  ::= 'store' &lt;value&gt; ',' &lt;symbol&gt; \n</code></pre>"},{"location":"appendix/accipit-spec/#_3","title":"\u8bf4\u660e","text":"<p>alloca \u6307\u4ee4\u7684\u4f5c\u7528\u662f\u4e3a\u5c40\u90e8\u53d8\u91cf\u5f00\u8f9f\u6808\u7a7a\u95f4\uff0c\u5e76\u83b7\u5f97\u4e00\u4e2a\u6307\u5411 <code>&lt;type&gt;</code> \u7c7b\u578b\uff0c\u957f\u5ea6\u4e3a <code>&lt;int_const&gt;</code> \u7684\u6307\u9488. \u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5728\u6808\u4e0a\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4 <code>&lt;type&gt;[&lt;int_const&gt;]</code>\uff0c\u5e76\u83b7\u53d6\u6570\u7ec4\u9996\u5143\u7d20\u7684\u5730\u5740. \u6216\u8005\u7c7b\u6bd4 C \u4ee3\u7801 <code>int *a = (int *)malloc(100 * sizeof(int))</code>\uff0c \u5bf9\u5e94 <code>let %a = alloca i32, 100</code>\uff0c\u53ea\u4e0d\u8fc7 alloca \u5206\u914d\u7684\u662f\u6808\u7a7a\u95f4\uff0c\u8fd4\u56de\u7684\u662f\u6808\u4e0a\u7684\u5730\u5740.</p> <p>load \u6307\u4ee4\u63a5\u53d7\u4e00\u4e2a\u6307\u9488\u7c7b\u578b <code>T*</code> \u7684\u7b26\u53f7\uff0c\u8fd4\u56de\u4e00\u4e2a <code>T</code> \u7c7b\u578b\u7684\u503c.</p> <p>store \u6307\u4ee4\u63a5\u53d7\u4e00\u4e2a\u7c7b\u578b <code>T</code> \u7684\u503c\uff0c\u5c06\u5176\u5b58\u5165\u4e00\u4e2a <code>T*</code> \u7c7b\u578b\u7684\u7b26\u53f7\uff0c\u5e76\u8fd4\u56de unit \u7c7b\u578b\u7684\u503c.</p>"},{"location":"appendix/accipit-spec/#offset","title":"Offset","text":"<pre><code>gep  ::=  'offset' &lt;type&gt; ',' &lt;symbol&gt; { ',' '[' &lt;value&gt; '&lt;' {&lt;int_const&gt; | &lt;none_const&gt;} ']' }+\n</code></pre>"},{"location":"appendix/accipit-spec/#_4","title":"\u8bf4\u660e","text":"<p>offset \u6307\u4ee4\u7684\u8bed\u4e49\u6bd4\u8f83\u590d\u6742\uff0c\u5b83\u662f\u7528\u4e8e\u8ba1\u7b97\u5730\u5740\u504f\u79fb\u91cf\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u5b83\u5f52\u4e3a Memory Instructions. \u5728\u5927\u5bb6\u6bd4\u8f83\u719f\u6089\u7684 C \u8bed\u8a00\u4e2d\uff0c\u53ef\u80fd\u6d89\u53ca\u5230\u9ad8\u7ef4\u6570\u7ec4\u3001\u7ed3\u6784\u4f53\u7b49\u7b49\u5bfb\u5740\u6bd4\u8f83\u590d\u6742\u7684\u7ed3\u6784\uff0c\u8fd9\u662f offset \u5c1d\u8bd5\u89e3\u51b3\u7684\u95ee\u9898.</p> <p>\u51fa\u4e8e\u7b80\u5316\u8003\u8651\uff0cAccipit IR \u90fd\u4f7f\u7528\u666e\u901a\u7684\u6307\u9488\u7c7b\u578b\u8868\u793a\u4e00\u7ef4\u6570\u7ec4\u548c\u9ad8\u7ef4\u6570\u7ec4\uff0c\u6570\u7ec4\u4e0a\u7684\u504f\u79fb\u8ba1\u7b97\u4f7f\u7528\u82e5\u5e72\u7ec4 size \u6765\u6807\u8bb0\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u5927\u5c0f\uff0c\u82e5\u5e72\u7ec4 index \u6765\u6807\u8bb0\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u504f\u79fb\u91cf\uff1a</p> <p>offset \u6307\u4ee4\u6709\u4e00\u4e2a\u7c7b\u578b\u6807\u6ce8\uff0c\u7528\u6765\u8868\u660e\u6570\u7ec4\u4e2d\u5143\u7d20\u7c7b\u578b\uff1b \u4e00\u5171\u6709 <code>2n + 1</code> \u4e2a\u53c2\u6570\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u8868\u793a\u57fa\u5730\u5740\uff1b \u540e <code>2n</code> \u4e2a\u53c2\u6570\u6bcf\u4e24\u4e2a\u4e00\u7ec4\uff0c \u6bcf\u4e00\u7ec4\u7684\u5f62\u5f0f\u4e3a <code>[index &lt; size]</code> \u5176\u4e2d index \u8868\u793a\u8be5\u7ef4\u5ea6\u4e0a\u7684\u504f\u79fb\u91cf\uff0csize \u8868\u793a\u8be5\u7ef4\u5ea6\u7684\u5927\u5c0f.</p> <p>\u4f8b\u5982 C \u8bed\u8a00\u4e2d\u58f0\u660e\u6570\u7ec4 <code>int g[3][2][5]</code>\uff0c\u83b7\u53d6\u5730\u5740 <code>&amp;g[x][y][z]</code> \u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 C \u4ee3\u7801 <code>(int *)g + x * 2 * 5 + y * 5 + z</code>\uff0c\u5bf9\u5e94\u7684 offset \u6307\u4ee4\u4e3a <code>offset i32, %g.addr, [%x &lt; 3], [%y &lt; 2], [%z &lt; 5]</code>.</p> <p>\u5f53\u7136\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u9ad8\u4f4d\u6570\u7ec4\u6709\u4e00\u7ef4\u4e0d\u77e5\u9053\u5927\u5c0f\u6216\u8005\u5728\u5355\u4e2a\u6307\u9488\u4e0a\u7b97\u504f\u79fb\u7684\u60c5\u51b5\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bf9\u5e94\u7684\u7ef4\u5ea6\u4f7f\u7528 none \u6807\u8bb0\uff1a</p> <ul> <li>\u4e8c\u7ef4\u6570\u7ec4 <code>int g[][5]</code> \u83b7\u53d6\u5730\u5740 <code>&amp;g[x][y]</code>\uff0c\u53ef\u4ee5\u4f7f\u7528 C \u4ee3\u7801 <code>(int *)g + y * 5</code>. \u5bf9\u5e94 offset \u6307\u4ee4\u4e3a <code>offset i32, %g.addr, [%x &lt; none], [%y &lt; 5]</code>. \u5176\u4e2d <code>%g.addr</code> \u662f\u6570\u7ec4\u9996\u5730\u5740\u5bf9\u5e94\u7684 value\uff0c<code>%x</code> \u548c <code>%y</code> \u5206\u522b\u662f\u6570\u7ec4\u4e0b\u6807 <code>x</code> \u548c <code>y</code> \u5bf9\u5e94\u7684 value.</li> <li>\u5355\u4e2a\u6307\u9488 <code>int *p</code> \u83b7\u53d6\u5730\u5740 <code>p + 10</code>\uff0c\u5bf9\u5e94 offset \u6307\u4ee4\u4e3a <code>offset i32, %p, [10 &lt; none]</code>. \u5176\u4e2d\uff0c<code>%p</code> \u662f\u6307\u9488 <code>p</code> \u5bf9\u5e94\u7684 value\uff0c<code>10</code> \u662f\u5b57\u9762\u91cf 10 \u5728\u5bf9\u5e94\u7684 value.</li> </ul> <p>\u4e3a\u4ec0\u4e48\u8981\u6709 size \u8fd9\u4e2a\u53c2\u6570\u4f5c\u4e3a\u4e00\u4e2a\u4e0b\u6807\u7684\u4e0a\u754c\uff1a</p> <ul> <li>\u8bbe\u8ba1\u7684\u53d6\u820d\uff1a\u4e3a\u4e86\u4f60\u65b9\u4fbf\u5904\u7406\uff0c\u6211\u4eec\u5728\u7c7b\u578b\u4e2d\u820d\u5f03\u4e86\u9ad8\u7ef4\u6570\u7ec4\uff0c\u56e0\u4e3a\u6570\u7ec4\u7c7b\u578b\u5728\u540e\u7aef\u4ee3\u7801\u751f\u6210\u65f6\u5904\u7406\u76f8\u5bf9\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4f46\u662f\u5728\u524d\u7aef\u5904\u7406\u8fd9\u4e9b\u4fe1\u606f\u76f8\u5bf9\u5bb9\u6613.</li> <li>\u5e73\u53f0\u65e0\u5173\uff1a\u56fa\u7136\u53ef\u4ee5\u5728\u524d\u7aef\u5c31\u8ba1\u7b97\u51fa\u76f8\u5bf9\u4e8e\u57fa\u5730\u5740\u7684\u504f\u79fb\uff0c\u4f46\u662f\u8fd9\u6d89\u53ca\u5230\u540e\u7aef\u7ec6\u8282\u2014\u2014\u7c7b\u578b\u5728\u5185\u5b58\u4e2d\u7684\u5927\u5c0f\u2014\u2014\u4e0d\u7b26\u5408\u4e2d\u95f4\u5e73\u53f0\u65e0\u5173\u4ee3\u7801\u7684\u521d\u8877.</li> <li>\u9519\u8bef\u68c0\u67e5\uff1a\u65b9\u4fbf\u89e3\u91ca\u5668\u68c0\u67e5\uff08\u8fd0\u884c\u65f6\uff09\u4e0b\u6807\u8d8a\u754c\u9519\u8bef.</li> </ul>"},{"location":"appendix/accipit-spec/#_5","title":"\u7c7b\u578b\u89c4\u5219","text":"<p>\u5047\u8bbe\u57fa\u5730\u5740\u53d8\u91cf <code>&lt;symbol&gt;</code> \u662f\u6307\u9488\u7c7b\u578b T*\uff0c\u5219\u8981\u6c42\u6807\u6ce8\u7684\u6570\u7ec4\u4e2d\u5143\u7d20\u7c7b\u578b <code>&lt;type&gt;</code> \u5fc5\u987b\u4e3a T.</p> <p>\u5047\u8bbe\uff0c\u6709 <code>n</code> \u7ec4\u504f\u79fb\u91cf\u548c\u7ef4\u5ea6 <code>[index_0 &lt; size_0], [index_1 &lt; size_1], ... [index_{n-1} &lt; size_{n-1}]</code>\uff0c \u4e3a\u4e86\u4fdd\u8bc1\u8bed\u4e49\u7684\u5408\u6cd5\u6027\uff0c\u6240\u6709 index \u90fd\u5fc5\u987b\u662f\u6574\u6570\u7c7b\u578b\uff0c\u4e14\u8981\u6c42\u8fd0\u884c\u65f6\u7684\u503c\u5fc5\u987b\u4e3a\u975e\u8d1f\u6574\u6570\uff1b\u6240\u6709 size \u4e2d\u53ea\u6709 <code>size_0</code> \u53ef\u4ee5\u4e3a <code>none</code>\uff0c\u9664\u6b64\u4e4b\u5916\u5fc5\u987b\u662f\u4e00\u4e2a\u6b63\u6574\u6570\u5e38\u6570.</p>"},{"location":"appendix/accipit-spec/#function-call-instructions","title":"Function Call Instructions","text":"<pre><code>fncall ::= 'call' &lt;symbol&gt; list({',' &lt;value&gt;})\n</code></pre>"},{"location":"appendix/accipit-spec/#_6","title":"\u8bf4\u660e","text":"<p>fncall \u6307\u4ee4\u8fdb\u884c\u51fd\u6570\u8c03\u7528\uff0c\u7b26\u53f7 <code>&lt;symbol&gt;</code> \u5fc5\u987b\u662f\u88ab\u8c03\u7528\u7684\u51fd\u6570\uff0c\u540e\u8ddf\u4e00\u4e2a\u53c2\u6570\u5217\u8868.</p>"},{"location":"appendix/accipit-spec/#_7","title":"\u7c7b\u578b\u89c4\u5219","text":"<p>\u5982\u679c\u88ab\u8c03\u7528\u7684\u51fd\u6570 <code>&lt;symbol&gt;</code> \u662f <code>fn(T_1, T_2, ..., T_{n-1}) -&gt; T_0</code> \u7c7b\u578b\uff0c\u90a3\u4e48\u53c2\u6570\u5217\u8868\u7684\u53c2\u6570\u5fc5\u987b\u4f9d\u6b21\u4e3a <code>T_1</code> <code>T_2</code> ... <code>T_{n-1}</code> \u7c7b\u578b\uff0c\u8fd9\u6761\u6307\u4ee4\u8bb2\u8fd4\u56de\u4e00\u4e2a <code>T_0</code> \u7c7b\u578b\u7684\u503c\u3002</p> <p>\u5047\u8bbe <code>&lt;symbol&gt;</code> \u6ca1\u6709\u53c2\u6570\uff0c\u5373\u4e3a <code>fn() -&gt; T</code> \u7c7b\u578b\uff0c\u90a3\u4e48\u53ef\u4ee5\u4e0d\u5199\u53c2\u6570\u5217\u8868\uff0c\u5373 <code>let %ret = call &lt;symbol&gt;</code>.</p> <p>\u5047\u8bbe <code>&lt;symbol&gt;</code> \u7684\u8fd4\u56de\u503c\u662f unit\uff0c\u5373 <code>fn(T_1, T_2, ...) -&gt; ()</code> \u7c7b\u578b\uff0c\u90a3\u4e48\u8fd4\u56de\u503c\u4e5f\u4e3a unit \u7c7b\u578b.</p>"},{"location":"appendix/accipit-spec/#terminator-instructions","title":"Terminator Instructions","text":"<pre><code>br    ::=  'br' &lt;value&gt; ',' 'label' &lt;ident&gt; ',' 'label' &lt;ident&gt;\njmp   ::=  'jmp' 'label' &lt;ident&gt;\nret   ::=  'ret' &lt;value&gt; \n</code></pre>"},{"location":"appendix/accipit-spec/#_8","title":"\u8bf4\u660e","text":"<p>br \u8fdb\u884c\u6761\u4ef6\u8df3\u8f6c\uff0c\u63a5\u53d7\u7684 <code>&lt;value&gt;</code> \u5e94\u5f53\u662f <code>i32</code> \u7c7b\u578b. \u82e5\u4e3a true\uff0c\u8df3\u8f6c\u5230\u7b2c\u4e00\u4e2a <code>&lt;label&gt;</code> \u6807\u8bb0\u7684\u57fa\u672c\u5757\u8d77\u59cb\u5904\u6267\u884c\uff1b \u82e5\u4e3a false\uff0c\u8df3\u8f6c\u5230\u7b2c\u4e8c\u4e2a <code>&lt;label&gt;</code> \u6807\u8bb0\u7684\u57fa\u672c\u5757\u8d77\u59cb\u5904\u6267\u884c.</p> <p>jmp \u8fdb\u884c\u65e0\u6761\u4ef6\u8df3\u8f6c\uff0c\u8df3\u8f6c\u5230 <code>&lt;label&gt;</code> \u6807\u8bb0\u7684\u57fa\u672c\u5757\u8d77\u59cb\u5904\u6267\u884c.</p> <p>ret \u8fdb\u884c\u51fd\u6570\u8303\u56f4\uff0c\u5e76\u5c06 <code>&lt;value&gt;</code> \u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u5e94\u5f53\u4e0e\u51fd\u6570\u7b7e\u540d\u4e00\u81f4.</p>"},{"location":"appendix/accipit-spec/#functions","title":"Functions","text":"<p>\u51fd\u6570\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u6307\u4ee4\u5e8f\u5217</p> <pre><code>plist ::= separated_list({&lt;ident&gt; ':' &lt;type&gt;}, ',')\nfun   ::= 'fn' &lt;ident&gt; '(' &lt;plist&gt; ')' '-&gt;' &lt;type&gt; {';' | &lt;body&gt;}\n</code></pre> <p>\u51fd\u6570\u5305\u542b\u51fd\u6570\u5934\u4ee5\u53ca\u53ef\u9009\u7684\u51fd\u6570\u4f53. \u5982\u679c\u6ca1\u6709\u51fd\u6570\u4f53\uff0c\u5219\u4ee5\u4e00\u4e2a\u5206\u53f7 <code>;</code> \u7ed3\u5c3e\uff0c\u4f8b\u5982 <code>fn getchar() -&gt; i32;</code>.</p> <p>\u51fd\u6570\u5934\u4ee5\u5173\u952e\u5b57 <code>fn</code> \u5f00\u5934\uff0c\u5305\u542b\u51fd\u6570\u547d\u4ee4\u548c\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\uff0c\u53c2\u6570\u5217\u8868\u5fc5\u987b\u663e\u5f0f\u5730\u6807\u51fa\u6bcf\u4e2a\u53c2\u6570\u7684\u7c7b\u578b.</p> <pre><code>body  ::= '{' &lt;bb&gt;+ '}'\nlabel ::= &lt;ident&gt; ':'\nbb    ::= &lt;label&gt; &lt;instr&gt;* &lt;terminator&gt;\n</code></pre> <p>\u51fd\u6570\u4f53\u7531\u4e00\u7cfb\u5217\u57fa\u672c\u5757 (basic block) \u7ec4\u6210\uff0c\u6bcf\u4e2a\u57fa\u672c\u5757\u6709\u4e00\u4e2a\u6807\u53f7 (label) \u548c\u57fa\u672c\u5757\u4e2d\u7684\u6307\u4ee4\u5e8f\u5217\uff0c\u5176\u4e2d\u6700\u540e\u4e00\u6761\u6307\u4ee4\u5fc5\u987b\u662f terminator.</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u9636\u4e58\u51fd\u6570\u7684\u4f8b\u5b50\uff1a <pre><code>fn @factorial(#n: i32) -&gt; i32 {\n%Lentry:\n    /* Create a stack slot of i32 type as the space of the return value.\n     * if n equals 1, store `1` to this address, i.e. `return 1`,\n     * otherwise, do recursive call, i.e. return n * factorial(n - 1).\n     */\n    let %ret.addr = alloca i32, 1\n    let %cmp = eq #n, 0\n    br %cmp, label %Ltrue, label %Lfalse\n%Ltrue:\n    let %6 = store 1, %ret.addr\n    jmp label %Lret\n%Lfalse:\n    let %9 = sub #n, 1\n    let %res = call @factorial, %9\n    let %11 = mul %9, %res\n    let %12 = store %11, %ret.addr\n    jmp label %Lret\n%Lret:\n    let %ret.val = load %ret.addr\n    ret %ret.val\n}\n</code></pre></p>"},{"location":"appendix/accipit-spec/#globals","title":"Globals","text":"<pre><code>global ::= &lt;symbol&gt; ':' 'region' &lt;type&gt; ',' &lt;int_const&gt;\n</code></pre>"},{"location":"appendix/accipit-spec/#_9","title":"\u8bf4\u660e","text":"<p>\u58f0\u660e\u5168\u5c40\u53d8\u91cf <code>&lt;symbol&gt;</code>\uff0c\u53d8\u91cf\u5177\u6709 <code>&lt;type&gt;</code> \u7c7b\u578b\u548c <code>&lt;int_const&gt;</code>.</p>"},{"location":"appendix/accipit-spec/#_10","title":"\u7c7b\u578b\u89c4\u5219","text":"<p>\u548c alloca \u7c7b\u4f3c\uff0c<code>&lt;type&gt;</code> \u662f\u5168\u5c40\u53d8\u91cf\u53ef\u5b58\u50a8\u7684\u5143\u7d20\u7c7b\u578b\uff0c<code>&lt;symbol&gt;</code> \u7684\u7c7b\u578b\u662f\u5bf9\u5e94\u7684\u6307\u9488\u7c7b\u578b <code>&lt;type&gt; *</code>.</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>@a : region i32, 2\n</code></pre> <p>\u5219 <code>@a</code> \u4e3a <code>i32*</code> \u7c7b\u578b\uff0c\u6240\u6307\u5411\u7684\u5730\u5740\u80fd\u5b58\u653e 2 \u4e2a <code>i32</code> \u7c7b\u578b\u7684\u5143\u7d20.</p>"},{"location":"appendix/accipit-spec/#comments","title":"Comments","text":"<p>Accipit IR \u4e2d\u6ce8\u91ca\u7684\u89c4\u8303\u4e0e C \u8bed\u8a00\u7c7b\u4f3c, \u5982\u4e0b:</p> <ul> <li>\u5355\u884c\u6ce8\u91ca: \u4ee5\u5e8f\u5217 <code>//</code> \u5f00\u59cb, \u76f4\u5230\u6362\u884c\u7b26\u7ed3\u675f, \u4e0d\u5305\u62ec\u6362\u884c\u7b26.</li> <li>\u591a\u884c\u6ce8\u91ca: \u4ee5\u5e8f\u5217 <code>/*</code> \u5f00\u59cb, \u76f4\u5230\u7b2c\u4e00\u6b21\u51fa\u73b0 <code>*/</code> \u65f6\u7ed3\u675f, \u5305\u62ec\u7ed3\u675f\u5904 <code>*/</code>.</li> </ul> <p>\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u9ed8\u8ba4\u4e0d\u4f1a\u51fa\u73b0\u5d4c\u5957\u6ce8\u91ca.</p>"},{"location":"appendix/accipit-spec/#execution","title":"Execution","text":"<p>TBD</p>"},{"location":"appendix/accipit-spec/#acknowledgement","title":"Acknowledgement","text":"<p>IR \u7684\u8bbe\u8ba1\u53c2\u8003\u4e86\u4ee5\u4e0b\u8bfe\u7a0b\u4e0e\u8d44\u6599\uff1a</p> <ul> <li>\u5317\u4eac\u5927\u5b66\u7f16\u8bd1\u539f\u7406\u8bfe\u7a0b \u7684 Koopa IR.</li> <li>LLVM \u9879\u76ee \u7684 IR \u8bbe\u8ba1.</li> <li>SyOC \u7684 IR \u8bbe\u8ba1\uff0c\u611f\u8c22 @waterlens \u7684\u70ed\u5fc3\u5e2e\u52a9.</li> </ul>"},{"location":"appendix/faq/","title":"FAQ","text":""},{"location":"appendix/faq/#lexerparser","title":"\u4e3a\u4ec0\u4e48\u6211\u7684 lexer/parser \u5361\u4f4f\u4e86","text":"<p>flex/bison \u9ed8\u8ba4\u4ece <code>stdin</code> \u8bfb\u5165\u8f93\u5165, \u7531\u4e8e <code>\\n</code> \u4e5f\u4f1a\u89c6\u4e3a\u8f93\u5165\u7684\u4e00\u90e8\u5206, \u4f60\u9700\u8981\u624b\u52a8\u8f93\u5165 <code>EOF</code> \u7ed3\u675f, \u8fd9\u5728 <code>bash</code> \u4e0a\u662f <code>Ctrl+D</code>. </p> <p>\u5982\u679c\u4f60\u60f3\u4ece\u6587\u4ef6\u91cc\u8f93\u5165\u7684\u8bdd (\u6bd4\u5982 <code>./compiler test.in</code>), \u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u4f9b\u53c2\u8003\u7684\u89e3\u51b3\u65b9\u6cd5: </p> <pre><code>extern int yyparse();\n\nextern FILE* yyin;\n\nint main(int argc, char **argv) {\n    yyin = fopen(argv[1], \"r\");\n    yyparse();\n    return 0;\n}\n</code></pre>"},{"location":"appendix/faq/#debug-asan-yylex","title":"\u4e3a\u4ec0\u4e48\u5728 Debug \u6a21\u5f0f\u4e0b ASAN \u63d0\u793a\u6211 yylex \u5b58\u5728\u5185\u5b58\u6cc4\u6f0f","text":"<p>\u8bf7\u8c03\u7528 <code>yylex_destroy</code> \u9500\u6bc1 buffer.</p>"},{"location":"appendix/faq/#accipit-ir-alloca-free","title":"\u4e3a\u4ec0\u4e48 Accipit IR \u6709 <code>alloca</code> \u6307\u4ee4\u4f46\u662f\u6ca1\u6709 <code>free</code>","text":"<p>Accipit IR \u7684\u5b9a\u4f4d\u662f\u5e73\u53f0\u65e0\u5173\u7684\u4e2d\u95f4\u4ee3\u7801\uff0c\u5728\u663e\u5f0f\u5730\u8868\u8fbe\u524d\u7aef\u8bed\u4e49\u7684\u540c\u65f6\uff0c\u5728\u4e00\u4e9b\u5f62\u5f0f\u53c8\u63a5\u8fd1\u5e95\u5c42\u7684\u6c47\u7f16\uff08\u4f8b\u5982\u63a7\u5236\u6d41\u8df3\u8f6c\uff0c\u6307\u4ee4\u7684\u64cd\u4f5c\u7801\u7b49\uff09.</p> <p><code>alloca</code> \u6307\u4ee4\u7684\u8bed\u4e49\u662f\u5206\u914d\u6808\u4e0a\u7684\u7a7a\u95f4\uff0c\u7528\u4e8e\u5b58\u653e\u5c40\u90e8\u53d8\u91cf. <code>alloca</code> \u6307\u4ee4\u544a\u8bc9\u4e86\u7f16\u8bd1\u5668\u540e\u7aef\u5c40\u90e8\u53d8\u91cf\u9700\u8981\u7684\u7a7a\u95f4\uff0c\u5e76\u5728\u6c47\u7f16\u4e2d\u7531\u51fd\u6570\u7684 prologue \u90e8\u5206\u5b8c\u6210\uff0c\u5373 <code>sub sp, sp, #size</code>. \u5728\u51fd\u6570\u4f53\u4e2d\uff0c\u4f7f\u7528 <code>sp + #offset</code> \u7684\u5f62\u5f0f\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740. \u56e0\u6b64\u5728\u9000\u51fa\u51fd\u6570\u65f6\uff0cepilogue \u90e8\u5206\u590d\u539f\u6808\u6307\u9488\u5373\u5b8c\u6210\u4e86\u91ca\u653e\u5c40\u90e8\u53d8\u91cf\u7a7a\u95f4\u7684\u52a8\u4f5c.</p>"},{"location":"appendix/quads2ssa/","title":"\u4ece\u56db\u5143\u7ec4\u5230\u9759\u6001\u5355\u8d4b\u503c\u5f62\u5f0f","text":"<p>\u63d0\u793a\uff1a\u4f60\u53ef\u4ee5\u8df3\u8fc7\u9605\u8bfb\u8fd9\u4e00\u90e8\u5206\uff0c\u4f46\u662f\u9605\u8bfb\u8be5\u90e8\u5206\u53ef\u80fd\u6709\u52a9\u4e8e\u4f60\u7406\u89e3\u672c\u5b9e\u9a8c\u4e2d\u95f4\u4ee3\u7801\u7684\u8bbe\u8ba1.</p> <p>\u5e38\u89c1\u7684\u5e73\u53f0\u65e0\u5173\u4e2d\u95f4\u4ee3\u7801\u662f\u7ebf\u6027\u7684\u4e00\u4e32\u6307\u4ee4. \u5728\u65e9\u671f\uff0c\u6307\u4ee4\u7684\u8bbe\u8ba1\u98ce\u683c\u901a\u5e38\u662f\u56db\u5143\u7ec4 (quads) \u5f62\u5f0f\uff0c\u4f8b\u5982 <code>x = y binop z</code>. \u5176\u4e2d\u6709\u64cd\u4f5c\u7801 <code>binop</code>\uff0c\u4e24\u4e2a\u6e90\u53d8\u91cf <code>y</code> \u548c <code>z</code>\uff0c\u4ee5\u53ca\u4e00\u4e2a\u76ee\u6807\u53d8\u91cf <code>x</code>\uff0c\u56e0\u6b64\u88ab\u79f0\u4e3a\u201c\u56db\u5143\u7ec4\u201d. \u4e00\u79cd\u53ef\u80fd\u7684\u56db\u5143\u7ec4\u98ce\u683c IR \u8bbe\u8ba1\u5f62\u5982\u4e0b\uff1a</p> \u7c7b\u578b \u683c\u5f0f \u8bf4\u660e \u6570\u636e\u6d41\u6307\u4ee4 <code>x = y binop z</code> \u5c06y\u548cz\u7684\u53cc\u76ee\u8fd0\u7b97\u7ed3\u679c\u5b58\u653e\u5230x\u4e2d <code>x = #k</code> \u5c06\u5e38\u91cfk\u52a0\u8f7d\u5230x\u4e2d <code>x = *y</code> \u5c06y\u6240\u6307\u5411\u7684\u503c\u5b58\u653e\u5230x\u4e2d <code>*x = y</code> \u5c06y\u7684\u503c\u5b58\u653e\u5230x\u6307\u5411\u7684\u4f4d\u7f6e\u4e2d <p>\u5bf9\u5e94\u7684\u5e38\u89c1\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>class Instruction {\n    // all possible opcode.\n    enum Opcode { ... };\n    Opcode op;\n    // id of destination variable.\n    int dst;\n    // id of first and second source variable.\n    int src0, src1;\n\n    // instructions connected as a linked list.\n    Instruction *next;\n}\n</code></pre> <p>\u5176\u4e2d <code>Opcode</code> \u662f\u6240\u6709\u53ef\u80fd\u7684\u6307\u4ee4\u64cd\u4f5c\u7801\uff0c\u6307\u4ee4\u7684\u6e90\u53d8\u91cf <code>src0</code> \u548c <code>src1</code>\u3001\u6307\u4ee4\u7684\u76ee\u6807\u53d8\u91cf <code>dst</code> \u4f7f\u7528\u4e00\u4e2a\u6574\u6570\u4f5c\u4e3a\u7d22\u5f15\uff08\u6216\u8005\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\u540d\u7684\u5b57\u7b26\u4e32\uff09\uff0c<code>next</code> \u4ee5\u94fe\u8868\u7684\u5f62\u5f0f\u987a\u5e8f\u8fde\u63a5\u4e0b\u4e00\u6761\u6307\u4ee4.</p> <p>\u56db\u5143\u7ec4\u770b\u4f3c\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u6bd4\u8f83\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u5c31\u662f\u4e0d\u592a\u65b9\u4fbf\u505a\u4ee3\u7801\u4f18\u5316\uff0c\u8bf7\u770b\u4e0b\u9762\u8fd9\u6761\u4f8b\u5b50\uff1a</p> <pre><code>%y = %a add 1\n%x = %y sub %b\n%y = %x add %b\n...\n\n%result = %x add %y\n</code></pre> <p>\u4ee3\u7801\u7684\u4f18\u5316\u7ecf\u5e38\u9700\u8981\u8ffd\u8e2a\u6570\u636e\u6d41\uff0c\u4e5f\u5c31\u662f\u8ffd\u8e2a\u56db\u5143\u7ec4\u4e2d\u4e24\u4e2a\u6e90\u53d8\u91cf\u7684\u503c\u662f\u7531\u54ea\u6761\u6307\u4ee4\u8fdb\u884c\u7684\u8d4b\u503c\uff0c\u53c8\u88ab\u54ea\u4e9b\u6307\u4ee4\u4f7f\u7528. \u6211\u4eec\u4e00\u6b65\u4e00\u6b65\u770b. \u9996\u5148\u662f <code>y = a add 1</code> \u8fd9\u6761\u6307\u4ee4\uff0c\u4f3c\u4e4e\u5f88\u663e\u7136\uff0c\u4e0d\u662f\u5417\uff1f \u6e90\u53d8\u91cf <code>a</code> \u548c\u5e38\u6570 <code>1</code>.</p> <p>\u4f46\u662f\u9047\u5230 <code>x = y sub b</code> \u65f6\uff0c\u6211\u4eec\u5f88\u5feb\u9047\u5230\u4e86\u9ebb\u70e6: \u8fd9\u6761\u6307\u4ee4\u9700\u8981\u7684 <code>y</code> \u7684\u503c\u662f\u54ea\u91cc\u88ab\u8d4b\u503c\u7684\uff0c\u6216\u8005\u8bf4 <code>y</code> \u6700\u65b0\u7684\u503c\u5728\u54ea\u91cc\uff0c\u662f <code>y = a add 1</code> \u8fd8\u662f <code>y = x add b</code>\uff1f</p> <p></p> <p>\u63a5\u4e0b\u6765\u7684 <code>y = x add b</code>\uff0c\u6e90\u53d8\u91cf <code>b</code> \u8fd8\u662f\u4e0a\u4e00\u6761\u6307\u4ee4 <code>x = y sub b</code> \u4e2d\u7528\u5230\u7684\u90a3\u4e2a <code>b</code> \u5417\uff1f\u8fd8\u662f\u6709\u5176\u4ed6\u6307\u4ee4\u4e3a b \u8d4b\u4e86\u65b0\u503c\uff1f</p> <p></p> <p>\u67d0\u4e00\u6761\u548c\u5b83\u4eec\u9694\u5f97\u5f88\u8fdc\u7684\u6307\u4ee4 <code>result = x add y</code>\uff0c\u5b83\u4eec\u7684 <code>x</code> \u548c <code>y</code> \u53c8\u4ece\u54ea\u91cc\u6765\uff1f</p> <p></p> <p>\u4f60\u4f1a\u53d1\u73b0\uff0c\u6211\u4eec\u4e00\u76f4\u9700\u8981\u77e5\u9053\u67d0\u4e2a\u6e90\u53d8\u91cf\u6700\u65b0\u7684\u8d4b\u503c\u53d1\u751f\u5728\u54ea\u91cc\uff0c\u8fd9\u610f\u5473\u8fd9\uff1a</p> <ul> <li>\u8981\u4e48\u6bcf\u6b21\u4ece\u540e\u5f80\u524d\u626b\u63cf\uff0c\u7b2c\u4e00\u4e2a\u9047\u5230\u7684\u5bf9\u6e90\u53d8\u91cf\u7684\u8d4b\u503c\uff0c\u5c31\u662f\u6700\u65b0\u7684\u503c\uff0c\u800c\u4e14\u5bf9\u4e8e\u5faa\u73af\u53ef\u80fd\u9700\u8981\u7279\u6b8a\u5904\u7406\uff0c\u8fd9\u6837\u65f6\u95f4\u5f00\u9500\u5f88\u5927.</li> <li>\u8981\u4e48\u7ef4\u62a4\u4e00\u4e2a\u7a20\u5bc6\u7684\u96c6\u5408\uff0c\u8bb0\u5f55\u5f53\u524d\u6307\u4ee4\u524d\u6240\u6709\u53d8\u91cf\u6700\u65b0\u7684\u8d4b\u503c\u53d1\u751f\u5728\u54ea\u91cc\uff0c\u8fd9\u6837\u5728\u53d8\u91cf\u5f88\u591a\u7684\u60c5\u51b5\u4e0b\u7a7a\u95f4\u5f00\u9500\u5f88\u5927.</li> </ul> <p>\u4e0a\u8ff0\u8fd9\u79cd\u201c\u67d0\u4e2a\u6e90\u53d8\u91cf\u6700\u65b0\u7684\u8d4b\u503c\u53d1\u751f\u5728\u54ea\u91cc\u201d\u5173\u7cfb\u88ab\u79f0\u4e3a\u4f7f\u7528-\u5b9a\u4e49\u94fe (use-def chain)\uff0c\u9759\u6001\u5355\u8d4b\u503c\u5f62\u5f0f (SSA) \u7684\u4f18\u70b9\u4e4b\u4e00\u5c31\u5728\u4e8e\u5b83\u80fd\u8f83\u597d\u5730\u7ef4\u62a4 use-def chain. SSA \u7684\u4e00\u4e2a\u7279\u70b9\u662f\u6bcf\u4e2a\u53d8\u91cf\u4ec5\u8d4b\u503c\u4e00\u6b21\uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e2a\u591a\u6b21\u8d4b\u503c\u7684\u53d8\u91cf <code>x</code>\uff0c\u4f60\u9700\u8981\u5bf9\u5b83\u91cd\u547d\u540d\uff0c\u4f8b\u5982\u628a\u7b2c 0 \u6b21\u3001\u7b2c 1 \u6b21...\u7b2c n \u6b21\u91cd\u65b0\u8d4b\u503c\u91cd\u547d\u540d\u4e3a <code>x.0</code> <code>x.1</code> ... <code>x.n</code>\uff0c\u5e76\u4e14\u4f7f\u7528\u53d8\u91cf <code>x</code> \u4e5f\u53ef\u4ee5\u4e5f\u5fc5\u987b\u51c6\u786e\u5730\u6307\u660e\u662f\u91cd\u547d\u540d\u540e\u7684 <code>x.0</code> <code>x.1</code> ... <code>x.n</code> \u4e4b\u4e2d\u7684\u54ea\u4e2a. \u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u9700\u8981\u5199\u6210:</p> <pre><code>%y.0 = %a.0 add 1\n%x.0 = %y.0 sub %b.0\n%y.1 = %x.0 add %b.0\n...\n\n%result.1 = %x.0 add %y.1\n</code></pre> <ul> <li>\u7531\u4e8e\u53ea\u8d4b\u503c\u4e00\u6b21\uff0c\u6bcf\u4e2a\u8d4b\u503c\u7684\u53d8\u91cf\u540d\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u628a\u8d4b\u503c\u770b\u4f5c\u201c\u5b9a\u4e49\u201d (define) \u4e86\u4e00\u4e2a\u65b0\u53d8\u91cf\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u660e\u786e\u5730\u77e5\u9053\u6e90\u64cd\u4f5c\u6570\u7684\u503c\u662f\u600e\u4e48\u4ea7\u751f\u7684.</li> <li>\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u7531\u4e8e\u53d8\u91cf\u53ea\u8d4b\u503c\u4e00\u6b21\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u8bb0\u5f55\u539f\u53d8\u91cf\u7684 id \u6216\u8005 name\uff0c\u6e90\u53d8\u91cf\u7684\u4f7f\u7528 (use) \u53ea\u9700\u8981\u4e00\u4e2a\u6307\u5411\u5b9a\u4e49\u8fd9\u4e2a\u53d8\u91cf\u7684\u6307\u4ee4\u7684\u6307\u9488\u5c31\u53ef\u4ee5\u8868\u793a.</li> <li>\u518d\u8fdb\u4e00\u6b65\uff0c\u65e2\u7136\u539f\u53d8\u91cf\u4f7f\u7528\u6307\u9488\u7d22\u5f15\uff0c\u90a3\u4e48\u6307\u4ee4\u91cc\u9762\u76ee\u6807\u53d8\u91cf\u4e5f\u5931\u53bb\u4e86\u610f\u4e49\uff0c\u6307\u4ee4\u672c\u8eab\u5c31\u53ef\u4ee5\u6307\u4ee3\u88ab\u65b0\u5b9a\u4e49\u201c\u53d8\u91cf\u201d\u672c\u8eab.</li> </ul> <p>\u7ecf\u8fc7\u8fd9\u4e48\u4e00\u756a\u6539\u9020\uff0c\u6307\u4ee4\u7684\u5b9e\u73b0\u5927\u81f4\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>class Instruction {\n    // all possible opcode.\n    enum Opcode { ... };\n    Opcode op;\n\n    // first and second source variable.\n    // `use` of the `definition` of src0 and src1.\n    Instruction *src0, *src1;\n\n    // instructions connected as a linked list.\n    Instruction *next;\n}\n</code></pre> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u7e41\u7410\u7684\u91cd\u547d\u540d\uff0c\u76f4\u63a5\u7b80\u5316\u4e3a\uff1a</p> <pre><code>// somewhere `a` is defined as `%0`\n%0 = ...\n// somewhere `b` is defines as `%1`\n%1 = ...\n\n%2 = %0 add 1\n%3 = %2 sub %1\n%4 = %3 add %1\n...\n\n%i_dont_know_the_number = %3 add %4\n</code></pre> <p>\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0cSSA \u98ce\u683c\u7684\u6307\u4ee4\u4e2d\uff0c\u6307\u4ee4\u4f7f\u7528 (use) \u7684\u64cd\u4f5c\u6570 <code>src0</code> \u548c <code>src1</code> \u76f4\u63a5\u6307\u5411\u4e86\u53d8\u91cf\u7684\u5b9a\u4e49 (definition) \u5904\uff0c\u56e0\u6b64\u6307\u4ee4\u4e4b\u95f4\u5c31\u50cf\u4e00\u4e2a\u56fe\u4e00\u6837\u6807\u8bb0\u4e86\u6570\u636e\u7684\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002 \u540c\u6837\u5bf9\u5076\u5730\uff0c\u5728 SSA \u5f62\u5f0f\u4e0a\u53ef\u4ee5\u65b9\u4fbf\u5730\u8ba1\u7b97\u51fa\uff0c\u67d0\u4e2a\u53d8\u91cf\u7684\u5b9a\u4e49 (definition) \u7684\u6240\u6709\u88ab\u4f5c\u4e3a\u64cd\u4f5c\u6570\u4f7f\u7528 (use) \u7684\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u5173\u7cfb\u53eb\u505a\u5b9a\u4e49-\u4f7f\u7528\u94fe (def-use chain). \u5b9a\u4e49-\u4f7f\u7528\u94fe\u548c\u4f7f\u7528-\u5b9a\u4e49\u94fe\u90fd\u662f\u6570\u636e\u4f9d\u8d56 (data dependency) \u7684\u8868\u73b0\u5f62\u5f0f.</p> <p>\u4f7f\u7528 SSA \u98ce\u683c\u76f8\u6bd4\u56db\u5143\u7ec4\u98ce\u683c\u5177\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a</p> <ul> <li> <p>\u51cf\u5c11\u201c\u590d\u5236\u201d\u64cd\u4f5c\uff0c\u4f8b\u5982\u8fd9\u662f\u56db\u5143\u7ec4\u98ce\u683c\uff1a     <pre><code>t1 = #1\nt2 = #2\nt3 = t1 + t2\nres = t3\n</code></pre>     SSA \u8bed\u5883\u4e0b\uff0c\u7531\u4e8e\u6307\u4ee4\u5c31\u662f\u6307\u672c\u8eab\uff0c\u6307\u5411\u6307\u4ee4 <code>t1 = #1</code> \u7684\u6307\u9488\u5b9e\u9645\u4e0a\u5c31\u662f\u6307\u5411\u5e38\u6570\u503c <code>#1</code>\uff0c\u56e0\u6b64\u590d\u5236\u64cd\u4f5c\u662f\u5197\u4f59\u7684\uff0c\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u53ef\u8868\u793a\u4e3a\uff1a     <pre><code>res = #1 + #2\n</code></pre></p> </li> <li> <p>\u65b9\u4fbf\u4f18\u5316\uff0c\u4f8b\u5982\u57fa\u4e8e\u8fed\u4ee3\u7684\u6570\u636e\u6d41\u5206\u6790\u53ef\u4ee5\u76f4\u63a5\u6cbf\u7740 use-def chain \u8ffd\u8e2a\uff0c\u8fd9\u79cd\u65b9\u5f0f\u662f\u201c\u7a00\u758f\u201d\u7684\uff0c\u56e0\u4e3a\u4e0d\u7528\u50cf\u7ecf\u5178\u65b9\u6cd5\u90a3\u6837\u5728\u6bcf\u4e2a\u7a0b\u5e8f\u70b9\u7ef4\u62a4\u4e00\u4e2a\u5305\u542b\u6240\u6709\u53d8\u91cf\u7684\u7a20\u5bc6\u96c6\u5408.</p> </li> </ul> <p>\u5982\u679c\u4f60\u6709\u5174\u8da3\uff0c\u53ef\u4ee5\u9605\u8bfb Cliff Click \u7684 From Quads to Graphs\uff0c\u4ee5\u53ca SSA Book\u3002</p>"},{"location":"appendix/sysy-accipit-mapping/","title":"SysY \u7ed3\u6784\u4e0e Accipit IR \u7684\u5bf9\u5e94","text":""},{"location":"appendix/sysy-accipit-mapping/#_1","title":"\u57fa\u672c\u7ed3\u6784","text":"<p>\u5728\u8fd9\u4e00\u90e8\u5206\u6211\u4eec\u5173\u6ce8 SysY \u8bed\u8a00\u6700\u57fa\u672c\u7684\u7ed3\u6784.</p>"},{"location":"appendix/sysy-accipit-mapping/#_2","title":"\u5c40\u90e8\u53d8\u91cf","text":"<p>\u5728 Accipit \u4e2d\uff0c\u4f60\u80fd\u770b\u5230\u4e24\u79cd\u5f62\u5f0f\u7684\u5c40\u90e8\u53d8\u91cf\uff1a</p> <ul> <li>\u4e34\u65f6\u53d8\u91cf/\u865a\u62df\u5bc4\u5b58\u5668.</li> <li>\u5728\u6808\u4e0a\u5206\u914d\u7684\u4e34\u65f6\u53d8\u91cf.</li> </ul> <p>\u524d\u4e00\u79cd\u5c40\u90e8\u53d8\u91cf\u662f\u9876\u5c42\u53d8\u91cf (top level variable). \u53d6\u8fd9\u4e2a\u540d\u5b57\uff0c\u662f\u56e0\u4e3a\u4ed6\u4eec\u5728 Accipit IR \u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u7684\u7b26\u53f7\uff0c\u8fd9\u4e2a\u7b26\u53f7\u5728\u5b9a\u4e49\u65f6\u88ab\u8d4b\u7684\u503c\u5c31\u662f\u53d8\u91cf\u7684\u503c\uff1a</p> <pre><code>/// SysY source code:\n/// int result = lhs + rhs;\n/// `lhs` and `rhs` are local variables.\nlet %result = add %lhs, %rhs\n</code></pre> <p>\u5728 RISC-V \u548c ARM \u4e4b\u7c7b\u7684 RISC \u6307\u4ee4\u96c6\u4e2d\uff0c\u6307\u4ee4\u96c6\u7684\u64cd\u4f5c\u6570\u548c\u76ee\u6807\u6570\u90fd\u53ea\u80fd\u662f\u5bc4\u5b58\u5668. \u60f3\u8c61\u4e00\u4e0b\uff0c\u5047\u5982\u4e0a\u9762\u8fd9\u6bb5 IR \u6700\u540e\u7ffb\u8bd1\u5230 RISC-V \u6c47\u7f16\u4e3a <code>add t0,t1, t2</code>\uff0c\u90a3\u4e48 <code>%result</code> \u5bf9\u5e94\u76ee\u6807\u5bc4\u5b58\u5668 <code>t0</code>\uff0c<code>%lhs</code> \u548c <code>%rhs</code> \u5206\u522b\u5bf9\u5e94\u6e90\u5bc4\u5b58\u5668 <code>t1</code> \u548c <code>t2</code>. \u6e90\u64cd\u4f5c\u6570 <code>%lhs</code> \u548c <code>%rhs</code> \u7684\u503c\u5c31\u662f\u5c40\u90e8\u53d8\u91cf <code>lhs</code> \u548c <code>rhs</code> \u7684\u503c\uff0c\u7ed3\u679c <code>%result</code> \u5c31\u662f\u52a0\u6cd5\u7684\u503c\uff0c\u5b58\u653e\u4e86\u6e90\u4ee3\u7801\u53d8\u91cf <code>result</code> \u7684\u503c. \u8fd9\u79cd\u884c\u4e3a\u548c\u771f\u5b9e\u7684\u6307\u4ee4\u96c6\u4e2d\u7684\u5bc4\u5b58\u5668\u6709\u4e9b\u7c7b\u4f3c\uff0c\u4f46\u662f\u548c\u6709\u9650\u6570\u91cf\u7684\u7269\u7406\u5bc4\u5b58\u5668\u4e0d\u540c\u7684\u662f\uff0cIR \u4e2d\u7684\u7b26\u53f7\u53ef\u4ee5\u6709\u65e0\u9650\u591a\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u5e94\u7684\u201c\u5c40\u90e8\u53d8\u91cf\u201d\u53ef\u4ee5\u65e0\u9650\u591a\uff0c\u56e0\u6b64\u79f0\u5176\u4e3a\u201c\u865a\u62df\u5bc4\u5b58\u5668\u201d.</p> <p>\u540e\u4e00\u79cd\u5c40\u90e8\u53d8\u91cf\u662f\u53d6\u5730\u5740\u53d8\u91cf (address taken variable). \u53d6\u8fd9\u4e2a\u540d\u5b57\uff0c\u662f\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u50cf\u9876\u5c42\u53d8\u91cf\u6709\u4e00\u4e2a\u65b0\u7684\u7b26\u53f7\uff0c\u4ed6\u4eec\u53ea\u6709\u5c40\u90e8\u53d8\u91cf\u6240\u5bf9\u5e94\u7684\u5730\u5740\uff0c\u53ea\u80fd\u901a\u8fc7 <code>alloca</code> \u6307\u4ee4\u521b\u5efa\uff1a</p> <pre><code>let %result.var.addr = alloca i32, 1\nlet %lhs.var.addr = alloca i32, 1\nlet %rhs.var.addr = alloca i32, 1\n</code></pre> <p>\u5728\u8fd9\u91cc\u6211\u4eec\u901a\u8fc7 <code>alloca</code> \u521b\u5efa\u4e09\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c\u7531\u4e8e\u8fd9\u4e09\u4e2a\u5c40\u90e8\u53d8\u91cf\u90fd\u662f <code>i32</code> \u7c7b\u578b\uff0c\u56e0\u6b64\u5f97\u5230\u7684\u7ed3\u679c <code>%result.var.addr</code> <code>%lhs.var.addr</code> \u548c <code>%rhs.var.addr</code> \u8fd9\u4e09\u4e2a\u865a\u62df\u5bc4\u5b58\u5668\u7684\u503c\u90fd\u662f <code>i32*</code> \u7c7b\u578b\uff0c\u4ee3\u8868\u8fd9\u4e09\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740. \u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e09\u4e2a\u5c40\u90e8\u53d8\u91cf\u53eb\u4ec0\u4e48\u540d\u5b57\uff0c\u4e5f\u4e0d\u5173\u5fc3\u8fd9\u4e09\u4e2a\u5c40\u90e8\u53d8\u91cf\u53eb\u4ec0\u4e48\u540d\u5b57\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u8fd9\u4e09\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\u662f\u4ec0\u4e48\uff1a<code>%result.var.addr</code> <code>%lhs.var.addr</code> \u548c <code>%rhs.var.addr</code>. \u901a\u8fc7\u8fd9\u4e9b\u5730\u5740\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5bf9\u8fd9\u4e9b\u5c40\u90e8\u53d8\u91cf\u8bfb\u5199\uff1a</p> <pre><code>// read value from the address `%lhs.var.addr`\nlet %lhs.var.load.0 = load %lhs.var.addr\n// write constant int `1` to address `%lhs.var.addr`\nlet %3 = store 1, %lhs.var.addr\n// read again\nlet %lhs.var.load.1 = load %rhs.var.addr\n</code></pre> <p>\u56de\u60f3 SSA \u5f62\u5f0f\u7684\u9650\u5236\uff1a\u201c\u51fa\u4e8e\u67d0\u79cd\u795e\u79d8\u7684\u539f\u56e0\uff0c\u6211\u4eec\u89c4\u5b9a\u6bcf\u4e2a\u53d8\u91cf\u53ea\u80fd\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u88ab\u8d4b\u503c\u4e00\u6b21\u201d\uff0c\u5982\u679c\u4f60\u91cd\u590d\u8d4b\u503c\uff0c\u5c31\u4f1a\u53d1\u751f\u9519\u8bef\uff1a</p> <pre><code>let %tmp = add 4, 2\nlet %tmp = add 4, 1 // Error here!\n</code></pre> <p>\u4f46\u662f\uff0cSysY \u6e90\u4ee3\u7801\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u90fd\u662f\u53ef\u4ee5\u591a\u6b21\u8d4b\u503c\u7684\uff0c<code>alloca</code> \u6307\u4ee4\u4ee5\u53ca\u540e\u4e00\u79cd\u53d6\u5730\u5740\u5f62\u5f0f\u7684\u5c40\u90e8\u53d8\u91cf\u662f\u4e3a\u4e86\u7ed5\u5f00 SSA \u5f62\u5f0f\u7684\u9650\u5236\uff0c\u65b9\u4fbf\u4f60\u5b9e\u73b0\u201c\u591a\u6b21\u8d4b\u503c\u201d.</p> <p>\u6bd4\u8f83\u5e38\u89c1\u7684\u4f5c\u6cd5\u662f\u663e\u5f0f\u5730\u4f7f\u7528 <code>alloca</code> \u4e3a\u6240\u6709\u53d8\u91cf\u5206\u914d\u6808\u7a7a\u95f4\uff0c\u5305\u62ec\u51fd\u6570\u53c2\u6570\uff0c\u5f53\u8fd9\u4e9b\u53d8\u91cf\u4f5c\u4e3a\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u65f6\uff0c\u5148\u4f7f\u7528\u4e00\u4e2a <code>load</code> \u5c06\u4ed6\u4eec\u8bfb\u5165\u4e34\u65f6\u53d8\u91cf\uff08\u6b64\u65f6\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 top level variable\uff09\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u7528\u4e8e\u8fd0\u7b97\uff1b\u5f53\u8fd9\u4e9b\u53d8\u91cf\u4f5c\u4e3a\u6307\u4ee4\u7684\u76ee\u6807\u65f6\uff0c\u4f7f\u7528\u4e00\u4e2a <code>store</code> \u5c06\u4ee3\u8868\u6307\u4ee4\u7ed3\u679c\u7684\u4e34\u65f6\u53d8\u91cf\uff08\u8fd0\u7b97\u7ed3\u679c\u5bf9\u5e94\u7684 top level variable\uff09\u5b58\u5165\u5730\u5740\uff1a</p> <pre><code>/// `lhs`, `rhs` and `result` are local variables, initialized by constant.\nint lhs = 1;\nint rhs = 2;\nint result = 0;\n// fist assignment to `result`\nresult = lhs + rhs;\n// second assignment to `result`\nresult = result + 1;\n</code></pre> <p>\u9996\u5148\u4e3a\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u6808\u7a7a\u95f4\uff1a</p> <pre><code>let %lhs.addr = alloca i32, 1\nlet %rhs.addr = alloca i32, 1\nlet %result.addr = alloca i32, 1\n</code></pre> <p>\u7136\u540e\u4f7f\u7528 <code>store</code> \u6307\u4ee4\u5b8c\u6210\u8fd9\u4e9b\u5c40\u90e8\u53d8\u91cf\u7684\u521d\u59cb\u5316\uff1a</p> <pre><code>let %store.lhs = store 1, %lhs.addr\nlet %store.rhs = store 2, %rhs.addr\nlet %store.result = store 0, %result.addr\n</code></pre> <p><code>store</code> \u4ea7\u751f\u7684\u9876\u5c42\u53d8\u91cf/\u4e34\u65f6\u53d8\u91cf\u6ca1\u4ec0\u4e48\u610f\u4e49\uff0c\u6240\u4ee5\u4ed6\u4eec\u7684\u7b26\u53f7\u53ef\u4ee5\u662f\u533f\u540d\u7684\uff0c\u7b80\u5316\u4e3a\u7528\u6570\u5b57\u8868\u793a\u7684\u533f\u540d\u503c\uff1a</p> <pre><code>let %0 = store 1, %lhs.addr\nlet %1 = store 2, %rhs.addr\nlet %2 = store 0, %result.addr\n</code></pre> <p>\u7b2c\u4e00\u6b21\u8d4b\u503c\uff0c\u64cd\u4f5c\u6570\u9700\u8981\u5c40\u90e8\u53d8\u91cf <code>lhs</code> \u548c <code>rhs</code>\uff0c\u56e0\u6b64\u9700\u8981 <code>load</code> \u6307\u4ee4\u8bfb\u53d6\u5b83\u4eec\u7684\u503c\uff1a</p> <pre><code>let %3 = load %lhs.addr\nlet %4 = load %rhs.addr\n</code></pre> <p>\u540c\u6837\u7684\uff0c<code>load</code> \u4ea7\u751f\u7684\u9876\u5c42\u53d8\u91cf/\u4e34\u65f6\u53d8\u91cf\u53ea\u662f\u8ba1\u7b97\u4e2d\u7684\u4e2d\u95f4\u7ed3\u679c\uff0c\u662f\u4e34\u65f6\u7684\u503c\uff0c\u6240\u4ee5\u4ed6\u4eec\u7684\u7b26\u53f7\u6700\u597d\u662f\u533f\u540d\u7684\uff0c\u7b80\u5316\u4e3a\u7528\u6570\u5b57\u8868\u793a\u7684\u533f\u540d\u503c.</p> <p>\u8d4b\u503c\u7684\u76ee\u6807\u53d8\u91cf\u662f <code>result</code>\uff0c\u56e0\u6b64\u9700\u8981 <code>store</code> \u5c06\u8ba1\u7b97\u7684\u4e2d\u95f4\u7ed3\u679c\u5199\u5165\u5730\u5740\uff1a</p> <pre><code>let %5 = add %3, %4\nlet %6 = store %5, %result.addr\n</code></pre> <p>\u7b2c\u4e8c\u6b21\u8d4b\u503c\uff0c\u64cd\u4f5c\u6570\u9700\u8981\u5c40\u90e8\u53d8\u91cf <code>result</code> \u548c \u5e38\u6570 <code>1</code>\uff0c\u56e0\u6b64\u9700\u8981 <code>load</code> \u6307\u4ee4\u8bfb\u53d6 <code>lhs</code> \u7684\u503c\uff0c\u5e38\u6570\u4f1a\u88ab\u5185\u8054\u5230\u52a0\u6cd5\u8ba1\u7b97\u4e2d\uff1a</p> <pre><code>let %7 = load %result.addr\n</code></pre> <p>\u540c\u6837\u7684\uff0c<code>load</code> \u4ea7\u751f\u7684\u9876\u5c42\u53d8\u91cf/\u4e34\u65f6\u53d8\u91cf\u53ea\u662f\u8ba1\u7b97\u4e2d\u7684\u4e2d\u95f4\u7ed3\u679c\uff0c\u662f\u4e34\u65f6\u7684\u503c\uff0c\u6240\u4ee5\u4ed6\u4eec\u7684\u7b26\u53f7\u6700\u597d\u662f\u533f\u540d\u7684\uff0c\u7b80\u5316\u4e3a\u7528\u6570\u5b57\u8868\u793a\u7684\u533f\u540d\u503c.</p> <p>\u8d4b\u503c\u7684\u76ee\u6807\u53d8\u91cf\u662f <code>result</code>\uff0c\u56e0\u6b64\u9700\u8981 <code>store</code> \u5c06\u8ba1\u7b97\u7684\u4e2d\u95f4\u7ed3\u679c\u5199\u5165\u5730\u5740\uff1a</p> <pre><code>let %8 = add %7, 1\nlet %9 = store %8, %result.addr\n</code></pre> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u5728\u4e0d\u7834\u574f SSA \u5f62\u5f0f\u9650\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u5b8c\u6210\u4e86\u53d8\u91cf\u7684\u591a\u6b21\u8d4b\u503c\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u5728\u8fd9\u79cd\u5904\u7406\u6a21\u5f0f\u4e0b\uff0c\u8fd0\u7b97 / load / store \u6240\u5b9a\u4e49\u7684 top level variable \u5f80\u5f80\u662f\u4e2d\u95f4\u7684\u4e34\u65f6\u53d8\u91cf. \u5b8c\u6574\u7684\u4ee3\u7801\u6e05\u5355\u5982\u4e0b\uff1a</p> <pre><code>// allocate\nlet %lhs.addr = alloca i32, 1\nlet %rhs.addr = alloca i32, 1\nlet %result.addr = alloca i32, 1\n// initialize\nlet %0 = store 1, %lhs.addr\nlet %1 = store 2, %rhs.addr\nlet %2 = store 0, %result.addr\n// result = lhs + rhs\nlet %3 = load %lhs.addr\nlet %4 = load %rhs.addr\nlet %5 = add %3, %4\nlet %6 = store %5, %result.addr\n// result = result + 1\nlet %7 = load %result.addr\nlet %8 = add %7, 1\nlet %9 = store %8, %result.addr\n</code></pre> <p>\u6216\u8005\u4f60\u53ef\u4ee5\u4e0d\u5173\u5fc3\u540d\u5b57\uff0c\u5168\u90e8\u7b80\u5199\u4e3a\uff1a</p> <pre><code>// allocate\nlet %0 = alloca i32, 1\nlet %1 = alloca i32, 1\nlet %2 = alloca i32, 1\n// initialize\nlet %3 = store 1, %0\nlet %4 = store 2, %1\nlet %5 = store 0, %2\n// result = lhs + rhs\nlet %6 = load %0\nlet %7 = load %1\nlet %8 = add %3, %4\nlet %9 = store %8, %2\n// result = result + 1\nlet %10 = load %2\nlet %11 = add %10, 1\nlet %12 = store %11, %2\n</code></pre> <p>\u603b\u4e4b\uff0c\u6211\u4eec\u770b\u5230\uff0c\u6e90\u4ee3\u7801\u4e2d\u7684 <code>lhs</code> \u7b49\u53d8\u91cf\u5728\u7ffb\u8bd1\u5f97\u5230\u7684 IR \u4e2d\u5e76\u6ca1\u6709\u4e00\u4e2a\u663e\u5f0f\u7684\u865a\u62df\u5bc4\u5b58\u5668\uff08\u4e5f\u5c31\u662f\u9876\u5c42\u53d8\u91cf\uff09\u4e0e\u4e4b\u5bf9\u5e94\uff0c\u800c\u53ea\u6709 alloca \u6307\u4ee4\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u53d6\u5730\u5740\u53d8\u91cf\u6765\u5904\u7406\uff1b\u4f46\u662f alloca \u6307\u4ee4\u5f97\u5230\u7684\u6307\u9488 <code>%lhs.addr</code> \u662f\u4e00\u4e2a\u9876\u5c42\u53d8\u91cf\uff0c\u6211\u4eec\u501f\u52a9\u9876\u5c42\u53d8\u91cf <code>%lhs.addr</code> \u6765\u64cd\u4f5c <code>lhs</code> \u8fd9\u4e2a\u53d6\u5730\u5740\u53d8\u91cf. \u8fd9\u79cd\u4e24\u79cd\u5c40\u90e8\u53d8\u91cf\u7684\u201c\u533a\u5206\u201d\u5728\u4e2d\u7aef\u65e0\u5173\u4ee3\u7801\u7684\u6307\u9488\u5206\u6790\uff08\u522b\u540d\u5206\u6790\uff09\u4e2d\u6709\u7740\u91cd\u8981\u610f\u4e49.</p>"},{"location":"appendix/sysy-accipit-mapping/#_3","title":"\u5e38\u6570","text":"<p>\u7531\u4e8e SSA \u5f62\u5f0f\u7684\u7279\u6027\uff0c\u5e38\u91cf\u4e0d\u9700\u8981\u5148\u201c\u590d\u5236\u201d\u7ed9\u67d0\u4e00\u4e2a\u4e34\u65f6\u7684\u4e34\u65f6\u53d8\u91cf\uff0c\u800c\u662f\u76f4\u63a5\u5185\u8054\u5728\u6307\u4ee4\u4e2d\uff1a</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>int result = 4 + 2\n</code></pre> <p>\u53d8\u6210\uff1a</p> <pre><code>let %result = add 4, 2\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u4ee4\u54ea\u91cc\u8981\u7528\u5e38\u91cf\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u628a\u5e38\u91cf\u63d2\u5165\u5728\u90a3\u4e2a\u5730\u65b9.</p>"},{"location":"appendix/sysy-accipit-mapping/#_4","title":"\u51fd\u6570\u58f0\u660e\u548c\u5b9a\u4e49","text":""},{"location":"appendix/sysy-accipit-mapping/#_5","title":"\u51fd\u6570\u58f0\u660e","text":"<p>\u4e00\u4e2a\u51fd\u6570\u539f\u578b\uff0c\u5728 Accipit IR \u4e2d\u80fd\u7ffb\u8bd1\u5230\u7b49\u4ef7\u7684 <code>fn</code> \u58f0\u660e\uff1a</p> <pre><code>int bar(int value);\n</code></pre> <p>\u53d8\u6210\uff1a</p> <pre><code>fn %bar(%value: i32) -&gt; i32;\n</code></pre> <p>\u7531\u4e8e\u6ca1\u6709\u51fd\u6570\u4f53\uff0c\u51fd\u6570\u53c2\u6570\u7684\u540d\u5b57\u65e0\u5173\u7d27\u8981\uff0c\u56e0\u6b64\u4f60\u4e5f\u53ef\u4ee5\u7565\u53bb\u53c2\u6570\u540d\uff0c\u53ea\u4fdd\u7559\u53c2\u6570\u7c7b\u578b\uff1a</p> <pre><code>fn %bar(i32) -&gt; i32;\n</code></pre> <p>\u7531\u4e8e SysY \u7684\u8fd0\u884c\u65f6\u5e93\u65e0\u9700\u58f0\u660e\u5373\u53ef\u4f7f\u7528\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u5728\u8bfb\u5165\u7684 SysY \u6e90\u4ee3\u7801\u524d\u5148\u201c\u62fc\u63a5\u201d\u4e0a\u8fd0\u884c\u65f6\u5e93\u51fd\u6570\u7684\u58f0\u660e\uff0c\u8ba9\u4f60\u7684\u7f16\u8bd1\u5668\u524d\u7aef\u5e2e\u4f60\u5b8c\u6210\u4ece\u8fd0\u884c\u65f6\u5e93\u51fd\u6570\u58f0\u660e\u5230 Accipit IR \u51fd\u6570\u58f0\u660e\u7684\u8fc7\u7a0b\uff1b \u6216\u8005\u4f60\u53ef\u4ee5\u624b\u52a8\u5728\u751f\u6210 Accipit IR \u65f6\u6784\u9020\u5e76\u63d2\u5165\u6240\u6709\u8fd0\u884c\u65f6\u51fd\u6570\u7684\u58f0\u660e.</p>"},{"location":"appendix/sysy-accipit-mapping/#_6","title":"\u63a7\u5236\u6d41\u7ed3\u6784","text":"<p>\u7c7b\u4f3c\u4e8e\u6c47\u7f16\uff0cAccipit IR \u7531\u4e00\u8fde\u4e32\u6307\u4ee4\u6784\u6210\uff0c\u8fd9\u4e9b\u6307\u4ee4\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u987a\u5e8f\u6267\u884c. \u6307\u4ee4\u6309\u7ec4\u5212\u5206\u4e3a\u57fa\u672c\u5757\uff0c\u6bcf\u4e2a\u57fa\u672c\u5757\u7684\u7ec8\u7ed3\u6307\u4ee4\u90fd\u4ee3\u8868\u63a7\u5236\u6d41\u7684\u8f6c\u79fb.</p>"},{"location":"appendix/sysy-accipit-mapping/#if-then-else","title":"\u7b80\u5355\u7684 <code>if-then-else</code> \u5206\u652f","text":"<p>\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e2a\u63a7\u5236\u6d41\uff1a</p> <pre><code>int max(int a, int b) {\n    if (a &gt; b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n</code></pre> <p>\u9996\u5148\uff0c\u8bf7\u94ed\u8bb0\uff0c\u63a7\u5236\u6d41\u7684\u8f6c\u79fb\u662f\u901a\u8fc7\u57fa\u672c\u5757\u4e4b\u95f4\u7684\u8df3\u8f6c\u5b9e\u73b0\u7684. \u57fa\u672c\u5757\u5185\u662f\u6309\u987a\u5e8f\u6267\u884c\u7684\u6307\u4ee4\u5e8f\u5217\uff0c\u5b83\u4eec\u4e0d\u6539\u53d8\u63a7\u5236\u6d41\uff01 \u53ea\u6709\u57fa\u672c\u5757\u5185\u7684\u6700\u540e\u4e00\u6761\u6307\u4ee4\uff08\u7ec8\u7ed3\u6307\u4ee4\uff09\u624d\u80fd\u6539\u53d8\u63a7\u5236\u6d41\uff0c\u8fdb\u884c\u8df3\u8f6c. \u6700\u5e38\u89c1\u7684\u662f\u6761\u4ef6\u8df3\u8f6c\u7ec8\u7ed3\u6307\u4ee4 <code>br</code>\uff0c\u6839\u636e <code>%cond</code> \u51b3\u5b9a\u63a7\u5236\u6d41\u8df3\u8f6c\u5230\u54ea\u4e2a label\uff1a</p> <pre><code>br %cond, label %ifture, label %iffalse\n</code></pre> <p>\u548c\u65e0\u6761\u4ef6\u8df3\u8f6c\u7ec8\u7ed3\u6307\u4ee4 <code>jmp</code>\uff0c\u76f4\u63a5\u8df3\u8f6c\u5230\u67d0\u4e2a\u57fa\u672c\u5757\uff1a</p> <pre><code>jmp label %dest\n</code></pre> <pre><code>fn max(%a: i32, %b: i32) -&gt; i32 {\n%entry:\n    let %a.addr = alloca i32, 1\n    let %b.addr = alloca i32, 1\n    let %0 = store %a, %a.addr\n    let %1 = store %b, %b.addr\n    let %retval = alloca i32, 1\n    let %2 = load %a.addr\n    let %3 = load %b.addr\n    let %4 = gt %2, %3\n    br %4, label %btrue, label %bfalse\n%btrue: // preds = %2\n    let %5 = store %a, %retval\n    br label %end\n%bfalse: // preds = %2\n    let %6 = store %b, %retval\n    br label %end\n%end: // preds = %btrue, %bfalse\n    let %7 = load %retval\n    ret %7\n}\n</code></pre> <p>\u5728\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6709 4 \u4e2a\u57fa\u672c\u5757. \u7b2c\u4e00\u4e2a\u662f\u51fd\u6570\u7684\u5165\u53e3\uff0c\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528 <code>alloca</code> \u5206\u914d\u6808\u7a7a\u95f4. \u4e24\u4e2a\u53c2\u6570 <code>%a</code> <code>%b</code> \u4f7f\u7528 <code>gt</code> \u6307\u4ee4\u6bd4\u8f83\u5927\u5c0f\uff0c\u7ed3\u679c\u5c06\u4f5c\u4e3a <code>br</code> \u8df3\u8f6c\u7684\u6807\u5fd7\u4f4d. \u63a5\u4e0b\u6765\u6839\u636e\u4e0d\u540c\u5206\u652f\u7684\u9009\u62e9\uff0c<code>%a</code> \u6216\u8005 <code>%b</code> \u4f1a\u88ab\u5199\u5165\u8fd4\u56de\u503c\u4e34\u65f6\u53d8\u91cf\u7684\u5730\u5740 <code>%retval</code>. \u6bcf\u4e2a\u5206\u652f\u6700\u540e\u90fd\u4f1a\u6709\u4e00\u6761\u65e0\u6761\u4ef6\u8df3\u8f6c <code>jmp</code> \u5408\u5e76\u63a7\u5236\u6d41\u5230\u6700\u540e\u7684\u57fa\u672c\u5757 <code>%end</code>\uff0c\u8fd4\u56de\u503c\u5c06\u4ece <code>%retval</code> \u8bfb\u53d6\u5e76\u8fd4\u56de.</p>"},{"location":"appendix/sysy-runtime/","title":"SysY \u8fd0\u884c\u65f6\u5e93","text":"<p>SysY \u5b98\u65b9\u7684\u8fd0\u884c\u65f6\u5e93\u89c4\u8303\u89c1\u8fd9\u91cc.   \u7f16\u8bd1\u5b9e\u8df5\u8bfe\u6240\u4f7f\u7528\u7684 SysY \u8fd0\u884c\u65f6\u5e93\u548c\u5b98\u65b9\u5b9a\u4e49\u7565\u6709\u4e0d\u540c: \u5b9e\u8df5\u8bfe\u7684 <code>getch</code> \u5b9a\u4e49\u4e86\u9047\u5230 <code>EOF</code> \u65f6\u7684\u884c\u4e3a, \u540c\u65f6\u8ba1\u65f6\u51fd\u6570\u7684\u5b9a\u4e49\u6bd4\u5b98\u65b9\u5b9a\u4e49\u66f4\u52a0\u7b80\u5355.</p> <p>SysY \u8fd0\u884c\u65f6\u5e93\u63d0\u4f9b\u4e00\u7cfb\u5217 I/O \u51fd\u6570, \u8ba1\u65f6\u51fd\u6570\u7b49\u7528\u4e8e\u5728 SysY \u7a0b\u5e8f\u4e2d\u8868\u8fbe\u8f93\u5165/\u8f93\u51fa, \u8ba1\u65f6\u7b49\u529f\u80fd\u9700\u6c42. \u7531\u4e8e SysY \u5e76\u4e0d\u5177\u5907 <code>include</code> \u548c\u51fd\u6570\u58f0\u660e\u7684\u8bed\u6cd5, \u8fd9\u4e9b\u5e93\u51fd\u6570\u65e0\u9700\u5728 SysY \u7a0b\u5e8f\u4e2d\u58f0\u660e, \u5373\u53ef\u5728 SysY \u7684 \u51fd\u6570\u4e2d\u4f7f\u7528.</p>"},{"location":"appendix/sysy-runtime/#_1","title":"\u76f8\u5173\u5b9e\u73b0","text":"<p>\u4f60\u53ef\u4ee5\u4ece\u8fd9\u91cc\u83b7\u53d6 SysY \u8fd0\u884c\u65f6\u5e93\u7684\u76f8\u5173\u5b9e\u73b0, \u8be6\u60c5\u89c1\u4ed3\u5e93\u7684 README.</p>"},{"location":"appendix/sysy-runtime/#io","title":"I/O \u51fd\u6570","text":"<p>SysY \u8fd0\u884c\u65f6\u5e93\u63d0\u4f9b\u4e00\u7cfb\u5217 I/O \u51fd\u6570, \u652f\u6301\u5bf9\u6574\u6570, \u5b57\u7b26\u4ee5\u53ca\u4e00\u4e32\u6574\u6570\u7684\u8f93\u5165\u548c\u8f93\u51fa.</p> <p>\u4ee5\u4e0b\u672a\u88ab\u5217\u51fa\u7684\u51fd\u6570\u5c06\u4e0d\u4f1a\u51fa\u73b0\u5728\u4efb\u4f55 SysY \u8bc4\u6d4b\u7528\u4f8b\u4e2d.</p>"},{"location":"appendix/sysy-runtime/#getint","title":"getint","text":"<p>\u51fd\u6570\u58f0\u660e: <code>int getint()</code></p> <p>\u63cf\u8ff0: \u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u4e00\u4e2a\u6574\u6570, \u8fd4\u56de\u5bf9\u5e94\u7684\u6574\u6570\u503c. \u5982\u679c\u672a\u80fd\u8bfb\u53d6\u5230\u4efb\u4f55\u6574\u6570 (\u4f8b\u5982\u9047\u5230\u4e86 <code>EOF</code>), \u5219\u8fd4\u56de\u503c\u672a\u5b9a\u4e49.</p> <p>\u793a\u4f8b:</p> <pre><code>int n;\nn = getint();\n</code></pre>"},{"location":"appendix/sysy-runtime/#getch","title":"getch","text":"<p>\u51fd\u6570\u58f0\u660e: <code>int getch()</code></p> <p>\u63cf\u8ff0: \u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26, \u8fd4\u56de\u5b57\u7b26\u5bf9\u5e94\u7684 ASCII \u7801\u503c. \u5982\u679c\u8bfb\u53d6\u5230\u4e86 <code>EOF</code>, \u5219\u8fd4\u56de <code>-1</code>.</p> <p>\u793a\u4f8b:</p> <pre><code>int n;\nn = getch();\n</code></pre>"},{"location":"appendix/sysy-runtime/#getarray","title":"getarray","text":"<p>\u51fd\u6570\u58f0\u660e: <code>int getarray(int[])</code></p> <p>\u63cf\u8ff0: \u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u4e00\u4e32\u6574\u6570, \u5176\u4e2d\u7b2c\u4e00\u4e2a\u6574\u6570\u4ee3\u8868\u540e\u7eed\u51fa\u73b0\u6574\u6570\u7684\u4e2a\u6570, \u8be5\u6570\u503c\u901a\u8fc7\u8fd4\u56de\u503c\u8fd4\u56de; \u540e\u7eed\u7684\u6574\u6570\u901a\u8fc7\u4f20\u5165\u7684\u6570\u7ec4\u53c2\u6570\u8fd4\u56de.</p> <p><code>getarray</code> \u51fd\u6570\u53ea\u83b7\u53d6\u4f20\u5165\u6570\u7ec4\u7684\u8d77\u59cb\u5730\u5740, \u800c\u4e0d\u68c0\u67e5\u8c03\u7528\u8005\u63d0\u4f9b\u7684\u6570\u7ec4\u662f\u5426\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5bb9\u7eb3\u8f93\u5165\u7684\u4e00\u4e32\u6574\u6570.</p> <p>\u793a\u4f8b:</p> <pre><code>int a[10][10];\nint n;\nn = getarray(a[0]);\n</code></pre>"},{"location":"appendix/sysy-runtime/#putint","title":"putint","text":"<p>\u51fd\u6570\u58f0\u660e: <code>void putint(int)</code></p> <p>\u63cf\u8ff0: \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u7684\u503c.</p> <p>\u793a\u4f8b:</p> <pre><code>int n = 10;\nputint(n);\nputint(10);\nputint(n);\n</code></pre> <p>\u5c06\u8f93\u51fa: <code>101010</code>.</p>"},{"location":"appendix/sysy-runtime/#putch","title":"putch","text":"<p>\u51fd\u6570\u58f0\u660e: <code>void putch(int)</code></p> <p>\u63cf\u8ff0: \u5c06\u6574\u6570\u53c2\u6570\u7684\u503c\u4f5c\u4e3a ASCII \u7801, \u8f93\u51fa\u8be5 ASCII \u7801\u5bf9\u5e94\u7684\u5b57\u7b26.</p> <p>\u4f20\u5165\u7684\u6574\u6570\u53c2\u6570\u53d6\u503c\u8303\u56f4\u5e94\u4e3a 0 \u5230 255, <code>putch</code> \u4e0d\u68c0\u67e5\u53c2\u6570\u7684\u5408\u6cd5\u6027.</p> <p>\u793a\u4f8b:</p> <pre><code>int n = 10;\nputch(n);\n</code></pre> <p>\u5c06\u8f93\u51fa\u6362\u884c\u7b26.</p>"},{"location":"appendix/sysy-runtime/#putarray","title":"putarray","text":"<p>\u51fd\u6570\u58f0\u660e: <code>void putarray(int, int[])</code></p> <p>\u63cf\u8ff0: \u7b2c 1 \u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u8f93\u51fa\u6574\u6570\u7684\u4e2a\u6570 (\u5047\u8bbe\u4e3a <code>N</code>), \u7b2c 2 \u4e2a\u53c2\u6570\u6307\u5411\u7684\u6570\u7ec4\u4e2d\u5305\u542b N \u4e2a\u6574\u6570. <code>putarray</code> \u5728\u8f93\u51fa\u65f6\u4f1a\u5728\u6574\u6570\u4e4b\u95f4\u5b89\u63d2\u7a7a\u683c.</p> <p><code>putarray</code> \u51fd\u6570\u4e0d\u68c0\u67e5\u53c2\u6570\u7684\u5408\u6cd5\u6027.</p> <p>\u793a\u4f8b:</p> <pre><code>int n = 2;\nint a[2] = {2, 3};\nputarray(n, a);\n</code></pre> <p>\u5c06\u8f93\u51fa: <code>2: 2 3</code>.</p>"},{"location":"appendix/sysy-runtime/#_2","title":"\u8ba1\u65f6\u51fd\u6570","text":"<p>SysY \u8fd0\u884c\u65f6\u5e93\u63d0\u4f9b <code>starttime</code> \u548c <code>stoptime</code> \u201c\u51fd\u6570\u201d, \u7528\u4e8e\u6d4b\u91cf SysY \u4e2d\u67d0\u6bb5\u4ee3\u7801\u7684\u8fd0\u884c\u65f6\u95f4. \u5728\u4e00\u4e2a SysY \u7a0b\u5e8f\u4e2d, \u53ef\u4ee5\u63d2\u5165\u591a\u5bf9 <code>starttime</code>, <code>stoptime</code> \u8c03\u7528, \u4ee5\u6b64\u6765\u83b7\u5f97\u6bcf\u5bf9\u8c03\u7528\u4e4b\u95f4\u7684\u4ee3\u7801\u7684\u6267\u884c\u65f6\u957f, \u5e76\u5728 SysY \u7a0b\u5e8f\u6267\u884c\u7ed3\u675f\u540e\u5f97\u5230\u8fd9\u4e9b\u8ba1\u65f6\u7684\u7d2f\u8ba1\u6267\u884c\u65f6\u957f.</p> <p>\u4f60\u9700\u8981\u6ce8\u610f:</p> <ol> <li> <p><code>starttime</code> \u548c <code>stoptime</code> \u53ea\u4f1a\u51fa\u73b0\u5728\u8bfe\u7a0b\u63d0\u4f9b\u7684\u6027\u80fd\u6d4b\u8bd5\u7528\u4f8b\u4e2d.</p> </li> <li> <p><code>starttime</code>, <code>stoptime</code> \u4e0d\u652f\u6301\u5d4c\u5957\u8c03\u7528\u7684\u5f62\u5f0f, \u5373\u4e0d\u652f\u6301:</p> <pre><code>starttime();\n...\nstarttime();\n...\nstoptime();\n...\nstoptime();\n</code></pre> <p>\u8fd9\u6837\u7684\u8c03\u7528\u6267\u884c\u5e8f\u5217.</p> </li> </ol> <p>\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u6240\u63d0\u4f9b\u7684\u8ba1\u65f6\u51fd\u6570\u7684\u8bbf\u95ee\u63a5\u53e3.</p>"},{"location":"appendix/sysy-runtime/#starttime","title":"starttime","text":"<p>\u51fd\u6570\u58f0\u660e: <code>void starttime()</code>.</p> <p>\u63cf\u8ff0: \u5f00\u542f\u8ba1\u65f6\u5668. \u6b64\u51fd\u6570\u5e94\u548c <code>stoptime()</code> \u8054\u7528.</p>"},{"location":"appendix/sysy-runtime/#stoptime","title":"stoptime","text":"<p>\u51fd\u6570\u58f0\u660e: <code>void stoptime()</code>.</p> <p>\u63cf\u8ff0: \u505c\u6b62\u8ba1\u65f6\u5668. \u6b64\u51fd\u6570\u5e94\u548c <code>starttime()</code> \u8054\u7528.</p> <p>\u7a0b\u5e8f\u4f1a\u5728\u6700\u540e\u7ed3\u675f\u7684\u65f6\u5019, \u6574\u4f53\u8f93\u51fa\u6bcf\u4e2a\u8ba1\u65f6\u5668\u6240\u82b1\u8d39\u7684\u65f6\u95f4, \u5e76\u7edf\u8ba1\u6240\u6709\u8ba1\u65f6\u5668\u7684\u7d2f\u8ba1\u503c. \u683c\u5f0f\u4e3a <code>Timer#\u7f16\u53f7: \u65f6-\u5206-\u79d2-\u5fae\u79d2</code>.</p> <p>\u793a\u4f8b:</p> <pre><code>void foo(int n) {\n  starttime();\n  int i = 0;\n  while (i &lt; n) {\n    // do something...\n    i = i + 1;\n  }\n  stoptime();\n}\n\nint main() {\n  starttime();\n  int i = 0;\n  while (i &lt; 3) {\n    // do something...\n    i = i + 1;\n  }\n  stoptime();\n  foo(2);\n  return 0;\n}\n</code></pre> <p>\u8f93\u51fa (\u4ec5\u4f5c\u793a\u4f8b):</p> <pre><code>Timer#001: 0H-0M-3S-3860us\nTimer#002: 0H-0M-2S-2660us\nTOTAL: 0H-0M-5S-6520us\n</code></pre>"},{"location":"appendix/sysy-spec/","title":"SysY \u8bed\u8a00\u89c4\u8303","text":"<p>SysY\u8bed\u8a00\u662f\u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\u4e2d\u7f16\u8bd1\u7cfb\u7edf\u8bbe\u8ba1\u8d5b\u8981\u5b9e\u73b0\u7684\u7f16\u7a0b\u8bed\u8a00.</p> <p>\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6b63\u5f0f\u7684 SysY \u7684\u6587\u6cd5\u548c\u8bed\u4e49\u7ea6\u675f. \u672c\u5b9e\u9a8c\u6240\u4f7f\u7528\u7684 SysY \u8bed\u8a00\u548c\u5b98\u65b9\u5b9a\u4e49\u7565\u6709\u4e0d\u540c. \u6211\u4eec\u5bf9SysY\u8bed\u8a00\u505a\u4e86\u4e00\u4e9b\u4fee\u6539, \u5177\u4f53\u5982\u4e0b: </p> <ul> <li>\u5220\u9664\u4e86 <code>float</code> \u7c7b\u578b, \u5373\u4e0d\u9700\u8981\u5b9e\u73b0\u6d6e\u70b9\u6570\u7c7b\u578b. </li> <li>\u5220\u9664\u4e86 <code>ConstDecl</code>\uff0c\u5373\u4e0d\u9700\u8981\u5b9e\u73b0\u5e38\u91cf\u58f0\u660e\u3002\u540c\u65f6\u6570\u7ec4\u4ec5\u652f\u6301\u6574\u6570\u5b57\u9762\u91cf\u58f0\u660e\u7ef4\u5ea6\u3002</li> <li>\u5220\u9664\u4e86 <code>InitVal</code> \u7684\u5d4c\u5957, \u5373\u4e0d\u9700\u8981\u5b9e\u73b0\u6570\u7ec4\u7684\u521d\u59cb\u5316.</li> <li>\u5220\u9664\u4e86\u5341\u8fdb\u5236\u4e4b\u5916\u7684\u6574\u6570\u5b57\u9762\u91cf.</li> </ul>"},{"location":"appendix/sysy-spec/#_1","title":"\u6587\u6cd5\u5b9a\u4e49","text":"<p>SysY \u8bed\u8a00\u7684\u6587\u6cd5\u91c7\u7528\u6269\u5c55\u7684 Backus \u8303\u5f0f (EBNF, Extended Backus-Naur Form) \u8868\u793a, \u5176\u4e2d:</p> <ul> <li>\u7b26\u53f7 <code>[...]</code> \u8868\u793a\u65b9\u62ec\u53f7\u5185\u5305\u542b\u7684\u9879\u53ef\u88ab\u91cd\u590d 0 \u6b21\u6216 1 \u6b21.</li> <li>\u7b26\u53f7 <code>{...}</code> \u8868\u793a\u82b1\u62ec\u53f7\u5185\u5305\u542b\u7684\u9879\u53ef\u88ab\u91cd\u590d 0 \u6b21\u6216\u591a\u6b21.</li> <li>\u7ec8\u7ed3\u7b26\u662f\u7531\u53cc\u5f15\u53f7\u62ec\u8d77\u7684\u4e32, \u6216\u8005\u662f <code>IDENT</code>, <code>INT_CONST</code> \u8fd9\u6837\u7684\u5927\u5199\u8bb0\u53f7. \u5176\u4f59\u5747\u4e3a\u975e\u7ec8\u7ed3\u7b26.</li> </ul> <p>SysY \u8bed\u8a00\u7684\u6587\u6cd5\u8868\u793a\u5982\u4e0b, <code>CompUnit</code> \u4e3a\u5f00\u59cb\u7b26\u53f7:</p> <pre><code>CompUnit      ::= [CompUnit] (Decl | FuncDef);\n\nBType         ::= \"int\";\nDecl          ::= VarDecl;\n\n\nVarDecl       ::= BType VarDef {\",\" VarDef} \";\";\nVarDef        ::= IDENT \"=\" InitVal\n                | IDENT {\"[\" INT_CONST \"]\"};\nInitVal       ::= Exp;\n\nFuncDef       ::= FuncType IDENT \"(\" [FuncFParams] \")\" Block;\nFuncType      ::= \"void\" | \"int\";\nFuncFParams   ::= FuncFParam {\",\" FuncFParam};\nFuncFParam    ::= BType IDENT [\"[\" \"]\" {\"[\" INT_CONST \"]\"}];\n\nBlock         ::= \"{\" {BlockItem} \"}\";\nBlockItem     ::= Decl | Stmt;\nStmt          ::= LVal \"=\" Exp \";\"\n                | Exp \";\"\n                | Block\n                | \"if\" \"(\" Exp \")\" Stmt [\"else\" Stmt]\n                | \"while\" \"(\" Exp \")\" Stmt\n                | \"break\" \";\"\n                | \"continue\" \";\"\n                | \"return\" [Exp] \";\";\n\nExp           ::= LOrExp;\nLVal          ::= IDENT {\"[\" Exp \"]\"};\nPrimaryExp    ::= \"(\" Exp \")\" | LVal | Number;\nNumber        ::= INT_CONST;\nUnaryExp      ::= PrimaryExp | IDENT \"(\" [FuncRParams] \")\" | UnaryOp UnaryExp;\nUnaryOp       ::= \"+\" | \"-\" | \"!\";\nFuncRParams   ::= Exp {\",\" Exp};\n\nMulExp        ::= UnaryExp | MulExp (\"*\" | \"/\" | \"%\") UnaryExp;\nAddExp        ::= MulExp | AddExp (\"+\" | \"-\") MulExp;\n\nRelExp        ::= AddExp | RelExp (\"&lt;\" | \"&gt;\" | \"&lt;=\" | \"&gt;=\") AddExp;\nEqExp         ::= RelExp | EqExp (\"==\" | \"!=\") RelExp;\nLAndExp       ::= EqExp | LAndExp \"&amp;&amp;\" EqExp;\nLOrExp        ::= LAndExp | LOrExp \"||\" LAndExp;\n</code></pre>"},{"location":"appendix/sysy-spec/#sysy_1","title":"SysY \u8bed\u8a00\u7684\u7ec8\u7ed3\u7b26\u7279\u5f81","text":""},{"location":"appendix/sysy-spec/#_2","title":"\u6807\u8bc6\u7b26","text":"<p>SysY \u8bed\u8a00\u4e2d\u6807\u8bc6\u7b26 <code>IDENT</code> (identifier) \u7684\u89c4\u8303\u5982\u4e0b:</p> <pre><code>identifier ::= identifier-nondigit\n             | identifier identifier-nondigit\n             | identifier digit;\n</code></pre> <p>\u5176\u4e2d, <code>identifier-nondigit</code> \u4e3a\u4e0b\u5212\u7ebf, \u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u6216\u5927\u5199\u82f1\u6587\u5b57\u6bcd; <code>digit</code> \u4e3a\u6570\u5b57 0 \u5230 9.</p> <p>\u5173\u4e8e\u5176\u4ed6\u4fe1\u606f, \u8bf7\u53c2\u8003 ISO/IEC 9899 \u7b2c 51 \u9875\u5173\u4e8e\u6807\u8bc6\u7b26\u7684\u5b9a\u4e49.</p> <p>\u5bf9\u4e8e\u540c\u540d\u6807\u8bc6\u7b26, SysY \u4e2d\u6709\u4ee5\u4e0b\u7ea6\u5b9a:</p> <ul> <li>\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53ef\u4ee5\u91cd\u53e0, \u91cd\u53e0\u90e8\u5206\u5c40\u90e8\u53d8\u91cf\u4f18\u5148.</li> <li>\u540c\u540d\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u4e0d\u80fd\u91cd\u53e0.</li> <li>\u53d8\u91cf\u540d\u53ef\u4ee5\u548c\u51fd\u6570\u540d\u76f8\u540c (\u8fd9\u91cc\u53ef\u4ee5\u5c06\u51fd\u6570\u89c6\u4e3a\u5168\u5c40\u53d8\u91cf).</li> <li>\u53d8\u91cf\u540d\u4e0d\u53ef\u4ee5\u548c\u4fdd\u7559\u5b57 (keyword) \u76f8\u540c.</li> </ul>"},{"location":"appendix/sysy-spec/#_3","title":"\u6570\u503c\u5e38\u91cf","text":"<p>SysY \u8bed\u8a00\u4e2d\u6570\u503c\u5e38\u91cf\u53ef\u4ee5\u662f\u6574\u578b\u6570 <code>INT_CONST</code> (integer-const), \u5176\u89c4\u8303\u5982\u4e0b:</p> <pre><code>integer-const ::= digit { digit };\n</code></pre> <p>\u6570\u503c\u5e38\u91cf\u7684\u8303\u56f4\u4e3a \\([0, 2^{31} - 1]\\), \u4e0d\u5305\u542b\u8d1f\u53f7.</p>"},{"location":"appendix/sysy-spec/#_4","title":"\u6ce8\u91ca","text":"<p>SysY \u8bed\u8a00\u4e2d\u6ce8\u91ca\u7684\u89c4\u8303\u4e0e C \u8bed\u8a00\u4e00\u81f4, \u5982\u4e0b:</p> <ul> <li>\u5355\u884c\u6ce8\u91ca: \u4ee5\u5e8f\u5217 <code>//</code> \u5f00\u59cb, \u76f4\u5230\u6362\u884c\u7b26\u7ed3\u675f, \u4e0d\u5305\u62ec\u6362\u884c\u7b26.</li> <li>\u591a\u884c\u6ce8\u91ca: \u4ee5\u5e8f\u5217 <code>/*</code> \u5f00\u59cb, \u76f4\u5230\u7b2c\u4e00\u6b21\u51fa\u73b0 <code>*/</code> \u65f6\u7ed3\u675f, \u5305\u62ec\u7ed3\u675f\u5904 <code>*/</code>.</li> </ul> <p>\u5173\u4e8e\u5176\u4ed6\u4fe1\u606f, \u8bf7\u53c2\u8003 ISO/IEC 9899 \u7b2c 66 \u9875\u5173\u4e8e\u6ce8\u91ca\u7684\u5b9a\u4e49.</p>"},{"location":"appendix/sysy-spec/#_5","title":"\u8bed\u4e49\u7ea6\u675f","text":"<p>\u4e0b\u9762, \u6211\u4eec\u8fdb\u4e00\u6b65\u7ed9\u51fa SysY \u8bed\u8a00\u7684\u8bed\u4e49\u7ea6\u675f.</p>"},{"location":"appendix/sysy-spec/#_6","title":"\u7f16\u8bd1\u5355\u5143","text":"<pre><code>CompUnit ::= [CompUnit] (Decl | FuncDef);\nDecl ::=  VarDecl;\n</code></pre> <ol> <li>\u4e00\u4e2a SysY \u7a0b\u5e8f\u7531\u5355\u4e2a\u6587\u4ef6\u7ec4\u6210, \u6587\u4ef6\u5185\u5bb9\u5bf9\u5e94 EBNF \u8868\u793a\u4e2d\u7684 <code>CompUnit</code>. \u5728\u8be5 <code>CompUnit</code> \u4e2d, \u5fc5\u987b\u5b58\u5728\u4e14\u4ec5\u5b58\u5728\u4e00\u4e2a\u6807\u8bc6\u4e3a <code>main</code>, \u65e0\u53c2\u6570, \u8fd4\u56de\u7c7b\u578b\u4e3a <code>int</code> \u7684 <code>FuncDef</code> (\u51fd\u6570\u5b9a\u4e49). <code>main</code> \u51fd\u6570\u662f\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9.</li> <li><code>CompUnit</code> \u7684\u9876\u5c42\u53d8\u91cf/\u5e38\u91cf\u58f0\u660e\u8bed\u53e5 (\u5bf9\u5e94 <code>Decl</code>), \u51fd\u6570\u5b9a\u4e49 (\u5bf9\u5e94 <code>FuncDef</code>) \u90fd\u4e0d\u53ef\u4ee5\u91cd\u590d\u5b9a\u4e49\u540c\u540d\u6807\u8bc6\u7b26 (<code>IDENT</code>), \u5373\u4fbf\u6807\u8bc6\u7b26\u7684\u7c7b\u578b\u4e0d\u540c\u4e5f\u4e0d\u5141\u8bb8.</li> <li><code>CompUnit</code> \u7684\u53d8\u91cf/\u5e38\u91cf/\u51fd\u6570\u58f0\u660e\u7684\u4f5c\u7528\u57df\u4ece\u8be5\u58f0\u660e\u5904\u5f00\u59cb, \u76f4\u5230\u6587\u4ef6\u7ed3\u5c3e.</li> </ol>"},{"location":"appendix/sysy-spec/#_7","title":"\u53d8\u91cf\u5b9a\u4e49","text":"<pre><code>VarDef ::= IDENT {\"[\" INT_CONST \"]\"}\n         | IDENT {\"[\" INT_CONST \"]\"} \"=\" InitVal;\n</code></pre> <ol> <li><code>VarDef</code> \u7528\u4e8e\u5b9a\u4e49\u53d8\u91cf. \u5f53\u4e0d\u542b\u6709 <code>=</code> \u548c\u521d\u59cb\u503c\u65f6, \u5176\u8fd0\u884c\u65f6\u5b9e\u9645\u521d\u503c\u672a\u5b9a\u4e49.</li> <li><code>VarDef</code> \u7684\u6570\u7ec4\u7ef4\u5ea6\u548c\u5404\u7ef4\u957f\u5ea6\u7684\u5b9a\u4e49\u90e8\u5206\u4e0d\u5b58\u5728\u65f6, \u8868\u793a\u5b9a\u4e49\u5355\u4e2a\u53d8\u91cf; \u5b58\u5728\u65f6, \u8868\u793a\u5b9a\u4e49\u591a\u7ef4\u6570\u7ec4</li> </ol>"},{"location":"appendix/sysy-spec/#_8","title":"\u51fd\u6570\u5f62\u53c2\u4e0e\u5b9e\u53c2","text":"<pre><code>FuncFParam ::= BType IDENT [\"[\" \"]\" {\"[\" INT_CONST \"]\"}];\nFuncRParams ::= Exp {\",\" Exp};\n</code></pre> <ol> <li><code>FuncFParam</code> \u5b9a\u4e49\u51fd\u6570\u7684\u4e00\u4e2a\u5f62\u5f0f\u53c2\u6570. \u5f53 <code>IDENT</code> \u540e\u9762\u7684\u53ef\u9009\u90e8\u5206\u5b58\u5728\u65f6, \u8868\u793a\u5b9a\u4e49\u6570\u7ec4\u7c7b\u578b\u7684\u5f62\u53c2.</li> <li>\u5f53 <code>FuncFParam</code> \u4e3a\u6570\u7ec4\u65f6, \u5176\u7b2c\u4e00\u7ef4\u7684\u957f\u5ea6\u7701\u53bb (\u7528\u65b9\u62ec\u53f7 <code>[]</code> \u8868\u793a), \u800c\u540e\u9762\u7684\u5404\u7ef4\u5219\u9700\u8981\u7528\u8868\u8fbe\u5f0f\u6307\u660e\u957f\u5ea6, \u5176\u957f\u5ea6\u5fc5\u987b\u662f\u5e38\u91cf.</li> <li>\u51fd\u6570\u5b9e\u53c2\u7684\u8bed\u6cd5\u662f <code>Exp</code>. \u5bf9\u4e8e <code>int</code> \u6216 <code>bool</code> \u7c7b\u578b\u7684\u53c2\u6570, \u9075\u5faa\u6309\u503c\u4f20\u9012\u7684\u89c4\u5219; \u5bf9\u4e8e\u6570\u7ec4\u7c7b\u578b\u7684\u53c2\u6570, \u5f62\u53c2\u63a5\u6536\u7684\u662f\u5b9e\u53c2\u6570\u7ec4\u7684\u5730\u5740, \u6b64\u540e\u53ef\u901a\u8fc7\u5730\u5740\u95f4\u63a5\u8bbf\u95ee\u5b9e\u53c2\u6570\u7ec4\u4e2d\u7684\u5143\u7d20.</li> <li>\u5bf9\u4e8e\u591a\u7ef4\u6570\u7ec4, \u6211\u4eec\u53ef\u4ee5\u4f20\u9012\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u5230\u5f62\u53c2\u6570\u7ec4\u4e2d. \u4f8b\u5982, \u82e5\u5b58\u5728\u6570\u7ec4\u5b9a\u4e49 <code>int a[4][3]</code>, \u5219 <code>a[1]</code> \u662f\u5305\u542b\u4e09\u4e2a\u5143\u7d20\u7684\u4e00\u7ef4\u6570\u7ec4, <code>a[1]</code> \u53ef\u4ee5\u4f5c\u4e3a\u5b9e\u53c2, \u4f20\u9012\u7ed9\u7c7b\u578b\u4e3a <code>int[]</code> \u7684\u5f62\u53c2.</li> </ol>"},{"location":"appendix/sysy-spec/#_9","title":"\u51fd\u6570\u5b9a\u4e49","text":"<pre><code>FuncDef ::= FuncType IDENT \"(\" [FuncFParams] \")\" Block;\n</code></pre> <ol> <li><code>FuncDef</code> \u8868\u793a\u51fd\u6570\u5b9a\u4e49. \u5176\u4e2d\u7684 <code>FuncType</code> \u6307\u660e\u4e86\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b.<ul> <li>\u5f53\u8fd4\u56de\u7c7b\u578b\u4e3a <code>int</code> \u6216 <code>bool</code> \u65f6, \u51fd\u6570\u5185\u7684\u6240\u6709\u5206\u652f\u90fd\u5e94\u5f53\u542b\u6709\u5e26\u6709 <code>Exp</code> \u7684 <code>return</code> \u8bed\u53e5. \u4e0d\u542b\u6709 <code>return</code> \u8bed\u53e5\u7684\u5206\u652f\u7684\u8fd4\u56de\u503c\u672a\u5b9a\u4e49.</li> <li>\u5f53\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a <code>void</code> \u65f6, \u51fd\u6570\u5185\u53ea\u80fd\u51fa\u73b0\u4e0d\u5e26\u8fd4\u56de\u503c\u7684 <code>return</code> \u8bed\u53e5.</li> </ul> </li> <li><code>FuncDef</code> \u4e2d\u5f62\u53c2\u5217\u8868 (<code>FuncFParams</code>) \u7684\u6bcf\u4e2a\u5f62\u53c2\u58f0\u660e (<code>FuncFParam</code>) \u7528\u4e8e\u58f0\u660e <code>int</code> \u7c7b\u578b\u7684\u53c2\u6570, \u6216\u8005\u662f\u5143\u7d20\u7c7b\u578b\u4e3a <code>int</code> \u7684\u591a\u7ef4\u6570\u7ec4. <code>FuncFParam</code> \u7684\u8bed\u4e49\u53c2\u89c1\u524d\u6587.</li> </ol>"},{"location":"appendix/sysy-spec/#_10","title":"\u8bed\u53e5\u5757","text":"<pre><code>Block ::= \"{\" {BlockItem} \"}\";\nBlockItem ::= Decl | Stmt;\n</code></pre> <ol> <li><code>Block</code> \u8868\u793a\u8bed\u53e5\u5757. \u8bed\u53e5\u5757\u4f1a\u521b\u5efa\u4f5c\u7528\u57df, \u8bed\u53e5\u5757\u5185\u58f0\u660e\u7684\u53d8\u91cf\u7684\u751f\u5b58\u671f\u5728\u8be5\u8bed\u53e5\u5757\u5185.</li> <li>\u8bed\u53e5\u5757\u5185\u53ef\u4ee5\u518d\u6b21\u5b9a\u4e49\u4e0e\u8bed\u53e5\u5757\u5916\u540c\u540d\u7684\u53d8\u91cf\u6216\u5e38\u91cf (\u901a\u8fc7 <code>Decl</code> \u8bed\u53e5), \u5176\u4f5c\u7528\u57df\u4ece\u5b9a\u4e49\u5904\u5f00\u59cb\u5230\u8be5\u8bed\u53e5\u5757\u5c3e\u7ed3\u675f, \u5b83\u8986\u76d6\u4e86\u8bed\u53e5\u5757\u5916\u7684\u540c\u540d\u53d8\u91cf\u6216\u5e38\u91cf.</li> </ol>"},{"location":"appendix/sysy-spec/#_11","title":"\u8bed\u53e5","text":"<pre><code>Stmt ::= LVal \"=\" Exp \";\"\n       | [Exp] \";\"\n       | Block\n       | \"if\" \"(\" Exp \")\" Stmt [\"else\" Stmt]\n       | \"while\" \"(\" Exp \")\" Stmt\n       | \"break\" \";\"\n       | \"continue\" \";\"\n       | \"return\" [Exp] \";\";\n</code></pre> <ol> <li><code>Stmt</code> \u4e2d\u7684 <code>if</code> \u578b\u8bed\u53e5\u9075\u5faa\u5c31\u8fd1\u5339\u914d\u7684\u539f\u5219.</li> <li>\u5355\u4e2a <code>Exp</code> \u53ef\u4ee5\u4f5c\u4e3a <code>Stmt</code>. <code>Exp</code> \u4f1a\u88ab\u6c42\u503c, \u6240\u6c42\u7684\u503c\u4f1a\u88ab\u4e22\u5f03.</li> </ol>"},{"location":"appendix/sysy-spec/#_12","title":"\u5de6\u503c\u8868\u8fbe\u5f0f","text":"<pre><code>LVal ::= IDENT {\"[\" Exp \"]\"};\n</code></pre> <ol> <li><code>LVal</code> \u8868\u793a\u5177\u6709\u5de6\u503c\u7684\u8868\u8fbe\u5f0f, \u53ef\u4ee5\u4e3a\u53d8\u91cf\u6216\u8005\u67d0\u4e2a\u6570\u7ec4\u5143\u7d20.</li> <li>\u5f53 <code>LVal</code> \u8868\u793a\u6570\u7ec4\u65f6, \u65b9\u62ec\u53f7\u4e2a\u6570\u5fc5\u987b\u548c\u6570\u7ec4\u53d8\u91cf\u7684\u7ef4\u6570\u76f8\u540c (\u5373\u5b9a\u4f4d\u5230\u5143\u7d20). \u82e5 <code>LVal</code> \u8868\u793a\u7684\u6570\u7ec4\u4f5c\u4e3a\u6570\u7ec4\u53c2\u6570\u53c2\u4e0e\u51fd\u6570\u8c03\u7528, \u5219\u6570\u7ec4\u7684\u65b9\u62ec\u53f7\u4e2a\u6570\u53ef\u4ee5\u4e0d\u4e0e\u7ef4\u6570\u76f8\u540c.</li> <li>\u5f53 <code>LVal</code> \u8868\u793a\u5355\u4e2a\u53d8\u91cf\u65f6, \u4e0d\u80fd\u51fa\u73b0\u540e\u9762\u7684\u65b9\u62ec\u53f7.</li> </ol>"},{"location":"appendix/sysy-spec/#_13","title":"\u8868\u8fbe\u5f0f","text":"<pre><code>Exp ::= LOrExp;\n...\n</code></pre> <ol> <li><code>Exp</code> \u5728 SysY \u4e2d\u4ee3\u8868 <code>int</code> \u578b\u8868\u8fbe\u5f0f. \u5f53 <code>Exp</code> \u51fa\u73b0\u5728\u8868\u793a\u6761\u4ef6\u5224\u65ad\u7684\u4f4d\u7f6e\u65f6 (\u4f8b\u5982 <code>if</code> \u548c <code>while</code>), \u8868\u8fbe\u5f0f\u503c\u4e3a 0 \u65f6\u4e3a\u5047, \u975e 0 \u65f6\u4e3a\u771f.</li> <li>\u5bf9\u4e8e <code>LOrExp</code>, \u5f53\u5176\u5de6\u53f3\u64cd\u4f5c\u6570\u6709\u4efb\u610f\u4e00\u4e2a\u975e 0 \u65f6, \u8868\u8fbe\u5f0f\u7684\u503c\u4e3a 1, \u5426\u5219\u4e3a 0; \u5bf9\u4e8e <code>LAndExp</code>, \u5f53\u5176\u5de6\u53f3\u64cd\u4f5c\u6570\u6709\u4efb\u610f\u4e00\u4e2a\u4e3a 0 \u65f6, \u8868\u8fbe\u5f0f\u7684\u503c\u4e3a 0, \u5426\u5219\u4e3a 1. \u4e0a\u8ff0\u4e24\u79cd\u8868\u8fbe\u5f0f\u5747\u6ee1\u8db3 C \u8bed\u8a00\u4e2d\u7684\u77ed\u8def\u6c42\u503c\u89c4\u5219.</li> <li><code>LVal</code> \u5fc5\u987b\u662f\u5f53\u524d\u4f5c\u7528\u57df\u5185, \u8be5 <code>Exp</code> \u8bed\u53e5\u4e4b\u524d\u66fe\u5b9a\u4e49\u8fc7\u7684\u53d8\u91cf\u6216\u5e38\u91cf. \u8d4b\u503c\u53f7\u5de6\u8fb9\u7684 <code>LVal</code> \u5fc5\u987b\u662f\u53d8\u91cf.</li> <li>\u51fd\u6570\u8c03\u7528\u5f62\u5f0f\u662f <code>IDENT \"(\" FuncRParams \")\"</code>, \u5176\u4e2d\u7684 <code>FuncRParams</code> \u8868\u793a\u5b9e\u9645\u53c2\u6570. \u5b9e\u9645\u53c2\u6570\u7684\u7c7b\u578b\u548c\u4e2a\u6570\u5fc5\u987b\u4e0e <code>IDENT</code> \u5bf9\u5e94\u7684\u51fd\u6570\u5b9a\u4e49\u7684\u5f62\u53c2\u5b8c\u5168\u5339\u914d.</li> <li>SysY \u4e2d\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u4e0e\u7ed3\u5408\u6027\u4e0e C \u8bed\u8a00\u4e00\u81f4, \u4e0a\u4e00\u8282\u5b9a\u4e49\u7684 SysY \u6587\u6cd5\u4e2d\u5df2\u4f53\u73b0\u4e86\u4f18\u5148\u7ea7\u4e0e\u7ed3\u5408\u6027\u7684\u5b9a\u4e49.</li> </ol>"}]}